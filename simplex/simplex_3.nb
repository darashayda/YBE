Notebook[{
Cell[TextData[{
 "\n\nThese are the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " solutions for the paper:\n\n\
\[OpenCurlyDoubleQuote]Permutation-type solutions to the Yang-Baxter \
and other n-simplex equations\[CloseCurlyDoubleQuote] by J. \
Hietarinta.\n\ncomputations by Dara O Shayda\n\n\
dara@lossofgenerality.com\n\n\n"
}], "Text",
 CellChangeTimes->{{3.585174486532826*^9, 3.585174525738533*^9}, {
  3.585176372505233*^9, 3.5851763886134644`*^9}}],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input"],

Cell[TextData[{
 "This formulation is incomprehensible and I guessed how it works:\n\n\
\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
E/PF+8zky3j0jNjtE08bOC2/v/iXvAz3TspUynS7M2lrKl9fzymz84Ebo6OR
Mo4Yv7X20cbXVFcqk+fVvw/Vf8d+i7RnYuvXut2CjSxp0reNMo9Zf7e678PV
vzVsj5Qh4rgfemz96D5nRqw27xFrJBcG/h52XORahfPn/RG1lx8X87kZYv3/
hag1D0d9SDzv0faMkffMQd+Xh7jNuKEfbD9xPYYsHF/fmLee4eC5sB6vrK/9
iRhyi/1zEVn5RO5FLMbYvPDT6vXr8/+ajYyzfGFTil5SkLWRNLuh6HdW7D7S
w8by6DmjeOUnS98MCq1LmcWhCif+MWIh9IxkPTfx6Bl277iYeobNcxn7ObMr
OxpH/cXR2B6nnpHQNZrDdCOL2MO2esY8xkEAIkm2nsGfzegxODIunaZfh71j
NJvdqDns8Hkp63diZP2dyWpaGfy5F+dUxt/yyn7H12PFaB23fS/rbqY9G98m
7+SX7P16vGOQPsvcQNfCxrD5yvnhdXbSPvG0QezyxXucybTxtLlArPvkCL1B
RbOjYvO7QT/5h1uZD2hRkfY5Q2WqT6v0DdU2DZMsTVBfdytVF+Vw+UW3x5i/
LBmPnjFqp2fEcz+ETQiTVQ7HzokYq82191LkPLkTPSPKbkq1cU7l79SaPu7b
OTf8ob6PLEkUVx8S7RItk4X2s7qHUfOyzTX0MDhHfk8vtTVUUp57nfN5gKTq
GaF7MarUoyvg7LmwHq/ik9/0bTGfi8gKJHIv7Bks/ampn9WgmDuINRek+a9s
PHxdxCSQ6RNdz5JJkq3qZT4PEpmLNto+0I4x/gxYtKM237DtYqxYyfGPEVb9
y3EZ2jaDjpqs58ZJWdo2u3ec1djh5LmM/ZzFF7fSUX9xNLYnT8+Y7zt23usZ
0DNAEpiX3ZRNHx9vfI0d925v+PypJod9LOZVzd+rYqxa+3aEzeQImw8LPZNi
rI/a7xGV7s5lz9J89QzXLm6fP9v/Dm3M+R+Or8eSmTtivsNFz7J3j1i7dZmt
34qxx84/wuQ9GllnJ+0TTxvEKl97L4wLe4LIWI8zPe/TXpsYj5odQkjnEvmE
XG8oVyLRpbRN1jHjlfZNdb2i+wuwTZ1GO4h4bGPC+4uZ/KHbt4T1BzXvmHFe
P7JMp/eD9/NT3T/QoLBnMOpeZsRqc21+NXJNXfPn1vUMZf/INtFtqyRtH677
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
n2hm+EO+Tta1eDoOAAAAAABYJsyG4kwlrGeoTN1mc9kbTnwd9dNMzztM7ly/
BHJ5GNIQFbg30aHKPxs2ytSYp7TDxg+Y7hH0j5AvEEM4V85TfOQkNXln7Pdb
IFry/4nrbf7w7TODn1KqK5XOt40uep3mxj9n9/hcn6pbTJNX0TUXS8UBAAAA
AADLiCTrGZPtv7eMW6X5m2+7+KfEC0o60/RBOtczVoZnxgjlsft2lMYMW/sr
fqdse4nuJmgDN1+0tSKuZwAAAAAAgMeWJOsZ7fn/qpwrI9rXY+ae8ANRfvOb
HrpITJNnoI+6O9qo26P5Z0jk83ZRgWorte6ost0bcy1jsq+JamvbaWSplJLx
zylVac81ObfEhgmqyH6CXJs/oLEl8r2WAmPUU3uM6Rk5tT1RaxnjSpuVFBVR
UUk1dXlDvjFB3xD1dXdQc3MHBeQAddZWUm1zD8VSleTAENWWnKczZ4qopq2D
2mobaMhQoFV5rA/09bG8972qDZ88Rs1VVVRV26J8F2tTyrkbxLaHJv43sv8h
L1s5f31HnOtGcpAGOpqoSjl/a994fMcCAAAAAKwUkqpnjFFBinquNxR5TyZJ
kigYDFB/8wXuF/z0TqqJ8r1ebCaoNOtJ7ruw5ixfu5C+ofx04becmkpudxrt
OHjd0t6HrdmkHaD9qer6x+UlWf8Yb3yN1ffN1r8yHY7VxXU0pmy+kAxWvan7
0KekbyV32k665lFl9EdUsZ/3sbK2HkWPOM7Xtc5/zfzsRxv/oB+ntr3293Pn
rde9Zoe5b0xOeQsNePqoeA/3/bnLboZ9eWo/LRT5YtZmF7C221dURxX5z7Jt
J6rK2TNxuLyOikVfueIJ6RrjLe/qfjHdbR8zfe+pwzcc2YdNDX7Kn4Udb1ND
cxnzWVKP5fWaoNqy9hWyngYAAAAAEINk6hmTN/U4Q24Wc4p/NLnxXNdyiZsr
0SV3pI2UzH2/Fb3BXl4coT2uFLqj7PSngv/GdBU72b6n8Mf69Tv5HOt20kaq
L8k/s7WhEyUnwmI7XfMurY/93CD3/T7X+3d9W3/xz1j/MtpyaX4cbwr7ullx
nGvbTeZLnpfyNJ27a50zsl9t1103DVseUZ4rnW4HnZWn9oFSLZ6z7qc+QQVC
37yiteMsj5Og+xRN3mZ6xfrTIf+jqU7ud/Sxxz7umBqPzcV8l77St80IO7OP
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
IsUZxu+peSwB23HQguPkWdC2paWD56F4l1Rcxe7Ph3VOEm0S861ABk3TydUK
vZOg7J96nMHp46NbjmEi44yHY0xIAFhOkrdnRHIzxmOWi/pn5XnL107c/IPI
O+CvGWt5k7KfO0nDi9Vvnn2H8raVD93/S8Tjmc15UePGzoWIM2LGBwwNvC3a
R0bnteVoi7HNkcbjlF9QSIWFyR8F+QV0KZ3fnkWNM6L77w2d+c/4+2uGv/82
6rAbo3H2LhU+V7p8xyQQ4yq8HH3MapD8Xn9kXnQtaJojPbzSosTADfmPhtsx
9UWjVF9dTfX1en/Eav6oqKa69oFl2PbH55d/nI50WY1rBrDYZHtGgnGg7OKM
kBzDNnquoMh3btzYjzLOwNi2APCgifaMRPkZE1et582Y0cv2PE9XvFQdp0HP
TPjpmyWPkLL5MFWWbNC/D+vs5zQIBuZXQtG/i9dQWfXRcO7w/Laot49Yje8U
XIQk44Xeps/VTNU1NaIsmOxRU11jP9eslcWKM8R9uMbUdiHHS44ab1kf0/bU
4D9ttyPuu2T5RkvcDJ9zfuPH4ba02Ql9vEqjbfB24U/jxoebW7zK86XabcdJ
8zW9YJGjqtHYzXf0+XL6x1j84yWvp4/K+bU27fPy8Td2P29Ju996wOMmT2D5
HS0sJSzOWJ1afkZs3KB/X8a+dlKOdZtLXwSstoP8DADIANm/6UOLspvGyyG1
vxPfZ/uav49+MhxnnBV1qF+V/MQ0Nqvsay/GwQ3Jsfuep3sxP8u+zk+opGBT
3DhW6RrgY/bxfbz8HSuTfWE7f2rq9Pn4njXVFfG59goPnaG+QHR9kBoIzLls
ZbfNJW2R4gxjLqnz8j6cuPknOa585NyIsdFYWdauzp7X8eXl5bP7OSvqdcuP
3p8i0sfhb7Rz5V49hpji82UeiGlb1KUfr06y+zw7rkyi430wrMvfEyJv5t3o
sefEslej55pcJsZqf0Vr5ZgPKQl9Lcfytm7LBUhVd+lPbOJzTXzP+a7/Kfzb
Zv5o6XO7KvS6aY6hqd6/yHq2s3G/p1Pi+/Rl07iGAAAPyqQo08TO32DUo/BH
VlZW+PsrUuwYp1JZd3KsdKuYlzQ8ftTE52L9T4y5h9jv8raYcntY6JaY527u
cUbsHESaPu/givhtBjwesf9aYDxxv+wpff8vGWVVdjw79n9KraWPkHLwjr7b
3htUVrxHHP+NudQRWWxT3/375Gxpp07nUPi3Z8rdw/52imUZt4jjTQ00vCbW
z8vfrNfhuaL7s/D5+HY124ynwvv3rS8i91SfPvfJUhgDeB6mbv6BnTf9nubx
1brd1yjg+4K2rdoWN4b03OPVSSrP3mx5/4r2EZuYjn++Hj1xN/y3FugT/cIT
1csuaTNfUo75+yupUb0vKeqHYZ6meNulRfnf6BcV9fvLHrtM/QJ83XpckZ1f
RMVFG+Vv9Ft0z+Ke/GtR8rl4AQAWi94P/s9zGGdWJU+/izrbO2nU9N02JXIz
outcR2p/ZV2fMsPijNiYIHCHivdX0qhcl5ejDlXdlmWeaWo9ti+SfyHndBO5
GYYJfY7V46a25inXOSooyKecHAcdqm6l1vJnYvq2RujnI1JfO9PfRj1ej2jj
iB4Ddtq2nJaM/TZ5G9LTUfuvBb+mvax82exeAjmrizx/Bh8ry+vxUnyXlMmY
Ov5oQ7W/Y+eLt4Voom/VrsvR7W+a/x51djrJ5eykrkE5FkFwlJydnSx+G0l5
/5KZGOxi23OJ7d6TuepBTx977/a05igXfafk+Ax6e+BTdLTaYixou3g1JSpV
svv3lkUwwdsnrOv4x+kwv/55e6m4uJiKC7eKa/z/ovqYqzTIzrPTxb8bnOSX
2/f0d4nvinsL1X7HY3J2nl0uJ7WzGNz4fuhn793eGXnf5HjbTU7an+Prxbtt
2oIAUiTr4N7omGOOkDZJg+z+dzqd1O+2GWNFtr/Nr40fAGAe5PfQ/OuAVWot
2005vK4vK5f2HL2mt39oo1Qqy5zK+sPR/ad4nBHTbyo0ci6qj/1A5S9NY8yO
UhHP97j8HY21n6I8R7bon7V5R6ncrkbdFbtk/c8aOt6mlze9/f002P0OPbH9
ivh7oumVuDYcQc6PfrAt+ns/NPSu6BcyqqqmeeDs64NTYb1Not6aKmppPULh
eWLZ9Sk7vUTqih/EfOCW9HNtWX8s259O8JyTmqMW/ZZJ/B435LP92X+F/PI+
uVn2Em3af5b6PQs3BppRt7/v8jeyPWqcKvPW0f6q62mNkSX6kVm0ycWyjFcT
5I331hyhQh4fsMexY/tFjL6jsISOiWWFdOhEq/ic8fljLOMW39WYPBo+t+K5
6PY/ZkosW0OXZUw3671BO1c5qKq9V57/haDRUMOLok6jT55b3813KGf9AWrr
H0mjP2N8fUEwEAi35ahWAz/P8vLhqzQ8j70H4ES9FvusL1bT2EjDr6L7GwAA
ZICv9bdxbRAPxOwd0W/qQXRz5v1u3uzibQQqndm8ier6XXF1zGKcKYt5M74s
UOiZum+pl8UwRj6uZZyRRluM9Tbv05lDDWx9VeQIvt7xI82OfEyn5lrftdBk
/ZuSdCz2SJyRaDyV1OnnOr7+mF3LvOdYedZHXp6by8rcrSU/JWX71Zg+P3rO
5Xnely94j8oLi6nZon1hvmMS6OO66PnYM4OXqJDdC/fmUOctclGMODPputHx
aqK8cZ6/PDg4yB7sXLk7WEy9mi64RsjtHtSXyzGrxDyVR2/HvZf+PRGdm8Hr
CrJi2g/1flcXxf+HGo/Tfha/xB+LSoF55lLzz+szF3hdAvtsle2jE81z6VsY
E2fM8twzWS6bukE5cfljGl3JN/fVBJgPve7Mdo69+cC8GQCwZGjUyvtwbv3o
gY1PGfLeosriPZS1egsdqmiyHfdmYUxSabg+/D6Vs7JpQWEp9ZgKEPp8hM9T
n8UJ6C37NWXn5dHWQ1+alqqifGLud5JqW4ztNlm55miV0S//XVEPVV99grqW
Sv8Mma8t+grH9E2K9jc5lrsiyvzzp+fhxM5dPtbwGu2qi94PvX7w/ejYVYx9
nEsVNSfEPkX1s6OFG5NghpevVx6gmsqX9LEPYldQAywW4uOyaeR1u23r9nm/
qRW7TeMqm8ey1dSouRXj49XU8saN8rVlrvdN635TX8bkZvDPlTFH5qhp6UDZ
L+mJPe9R+U7FIs9DpW52HfZuUejxtPt6Re8/vyd2V1eLNsgNVfHtkynlZIk2
zJzweeCfuxWyLzvvA7r2yN2YF6jU3+lahuP4wlI169P7+n44OJN85ZTpfRwt
5+0DAMgIlVztnWn0a17GWLktdngen7PDMofOYO5LwfuCNVQcpS1Zq2lPcSV1
pTM2rN02manOv9An4bG/VPqUj+2aZB7FB0Fl5bRBVxuV5K0IxxnKqm10ob2X
lZsD5hXJM9hDtcXPRtZT1oicmEGPd17tVkNnnqaXwjGFSq3F/y22v+nQtfB2
eV+6LVn6e249dCV83oxxHZvdMzTW9AKL/SzGPp73mAQyrlx5mIaDQYs670l2
XvbTTkc2bd5RQi2dl1k8sNNyDBi9nj5Sbubl9tdlXz7eLmce1zY2Xk2WN27e
H9t+f76LtMp8jtRhKs/fJNotsvN26vOvFBSIPpKb9n8UlZ9llP8fZ9clyF63
16Y+lY/NuXY+cYacN+dg83c0I+Lf6HmAUs3Jmh07K+4H46VDlb+m1zv08/tl
wQY65eyl9o6Fy+EBsKJ6e6ijfwHnsVVHcd8CAECYz/kJbWNxy/bTkXnMZ0fO
0fYlMI5PL+9PFo4bYh6mPAJjXHfrxzzH5xF186/OqW+fKLfXGf0S9HGLY+eg
sByTgPEODkbaHfg8MeF8y2ly97tNsZMqctXD46yJMaOzIuV49rvfz7ZV6Vgn
1xmnIhZnxPfx18eUjczpq9JZ9ppL4jWTVLLKQT0xsYk5Xk2YNx5lkkpXZdvk
F+mxgtV410nNRvqOcfq4EPF9wHibTXycEX1O7c+97Ju1NdJWdrvkkaj2kVRz
snjc9no4H0ulj3h/vz0nqb76KOU5HJSfX5TeXJYAAAAAsOzw9gLL/P0EehuP
izYOnvOt582M6/PKsbJ4ldMXWdFiTAIxlwWLSd6R9fHGOFCi6BvieQm5eh26
Nk5NZbtFXLG/So8TZ31f6PMsbD4Qae8KfUk5MuczNPAurdt/hfqdrqj35McY
ldPCc46N/Zq4Stlbz7LXtNHwAjRyqYGg7XwkPBd9dQq56Gaa/w6V8/5n/Nx2
jollPjmvH2/3MPeNtIwzzOc0wbmfcF2ivY6V4tx2iPYajW4e09u39ofzoZLn
ZIm2DHZuw/EYP9crD9CwaWyGYPBfoYEXAAAA4F/dNDXkb1zgfszSAxiTYKb7
D7RW5ldPsPL35ry9dPRCpL2K93naxGIP8z6ERt4X/cBO1NdQacFz5MjbSfuP
XnsgYyeMtf6Rti9S/+7ZgbfTmx8vbUlysmbvUtH6vVH5WHzMha1xc6ADAAAA
wJKm3pc50EvPgxuTQItqP0hlfCueL7CLzwesynVV+zaI5cLnvCTy7ldt3kun
67ofSMxklZMFAAAAAMsX70tz5th+kUOsWIyVComo1FCwndr8md4PAAAAAICl
RqVAMEjdpT+hxxa1nwwAAAAAACwXE87zdKHDGKtpktob2+c09isf8wlxBgAA
AAAAGPNo/6ZZjzP0nGR9zNLQ0DnKWZ1DjhyHmKPA/Mh2OChrda5pLhB9bFzE
GQAAAAAAQKGvxdisn8n8ADHXtpwrOV2IMwAAAAAAgAsN8Xm0D8u58TQxh9mu
5u9JU1XSgqPkcjrJ5XJZPpxOF40GZ8PbQpwBAAAAAACcaL/YelH/Y+JzMYda
x1gXFe7+VIwFW1FWQRUV1o8y9lyXNxJn6PkZdzN0JAAAAAAAsDRMU22eIuaI
KzxWTPn5BbTTkU0ORx6d7/sx5a3M+m9RccEOcuSsIiVnC+XvKad7mMcAAAAA
AOBfk5Gb4Z0hNWDMDcfHqEWQAAAAAAAAczMz8DYpygG6n+kdAQAAAACAh8as
9xbVtY1kejcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBMUyng
D1BQy/SOAAAAwENJvUt7sxRSFIXW7b9GKHLMEc7jEjVNN+svUMfgVKZ3ZEmZ
GjhHuYp+vyrKGmrzzmZ6l+ypo9TePkBqpvdDmhn4gLKUXMrLzyPH5p1x526g
+ne0yrGN8tnzW9h3wvaqbzK0pwAAAJmn+u9QES8jrztJgUzvzHKgDlNL50j8
YpzHzLG5JqGBd/Wy9NaPlkw5NeO0YdrJzsmTp7+hmZH3xfk53vNjpvcqxjS5
+13UWnNQv34r0vxM2dwPC0INkt/9BW2RcdqTJ25HPa0F/XS99BH2XC5d6Bwg
fwB3HgAA/CtT6ayDl4/fo2Cmd2U58F2krYf+avEEzmPG2F0TVt4sdayng3Xf
Pvh9WqJmfVdF+fhUP48tpsnj8S69GEy9SyV5+XSs7JAeZ2xK8zNl+xldIBNX
KWd1DuWINsyX6V5MA+bU9d/TxhNoxwAAAOBlDZSPU+dr/S2tPfK1xTM4j5li
f00gltHGo8cZS51GtXnpf6YW+34Ya3iBXrr8HQ1U/lqcy4NtP0Q931rwJJ0a
/OeivT8AAEAmqH4veTwe8rKHx89+mbVJ/W8v+9vjF3kDvF2fL+MPvUlflo83
naWgdp/a6+upvrGF+j0zVu9AQ52XqaKsjCpqWmk0/OPP+zn0k7OznbrcUzTj
6aL6mkbq8UT6xWv+e9RYfZrKKiqo2TmWwrGMUr/LSZ2det9sn6uN6tm+tbC/
LcscwXG271VUVlZB9S294X4WczsnFjSVxro/pCxev7rjI3Kz17sH3eQPJ9Iu
xHm05/fcIxc7H+0tneSPqj/VaKi9mfr8ifrYazTilO9X3UROdi4vd4yJfXYP
9pPL2UntnUMyr8RY1kZdgxPhY+PX19XZSX28P7o2Lo/vOvtbHl9gmFrksnv+
UORILa5jDVuv3TkUzkEe6WwW15Yvizv97Hp1N15g+15Bde290f1nEl6TyLG5
3DH5GTb3it3+JrzvYgS9w+L17e1OCmgBtu911Cj3W2y730Wd7e3seoXk+/H1
+TKnvK5259rqXrK7rtbUwDj1Nr4pysb7GntlW0Yw6WeX8/W3UTX77FZUN8Q8
N/d7I7k0Y/ekn9Fkx5LSm1BT/pP0oYdEu4ne3nLWtH/jVLRqG/UtuUYiAACA
+VDpevF/y9xO9njuJLU0HIz8vfIAjbK1xppeCS/bd/k7Cv+Wy2V7KpqotuQX
ep1nl6meThulcrHe83SZlYtqCx4VfZCbPSHxXEmO3EbOFtmfQF+X/976rr8j
/t564horj5wX5YDHD11L2F9jqPZ3chu5dKx0u9j/xpYqvV/0pvfovmldntcq
crAPfUSufieV5+nv3eX/cY7nJN7sxA3a69isl2HYPjny8siR46DzfUa98AKc
R1vT1FCwMXw+usyFLtkP5o2uf9i8VqUr+ex16w9TW/8gDVw/JdZ/TNT3jst9
MfWB5znt8hgeO2r0PY+s90RBqch5Nx/f0foa2sb+PVTTRJX5j4lln7hDya/j
c29RbekGdj3fosbG4/q53XMlcl/IXIK1R6+wsniz+L+ivEp9wVSuyX06I/eF
H5txyuzvldm07zsrY61/DN8DDkd2+P8bTn9DQw2vhf8+Iq+X+f3062p1rhss
7qVE19XaUP0b4fdfzT6njuxtdHno24SfXaJJqt3L/36KLnT2srjpiHj+2dO3
ZVw693sjufTijOSf0WTHkopR2rtyp+wrZXzm19Alj4zzJ65SNos7EGYAAMDD
aODM0+J37zO//vfs2Mfit/TNcK6nSidXR8o55vJxZJ379FZUOZPoZskj4vc5
Usa9T+W8fLL1ovxNVelMnr6dS6zMNsbKVCufe4/87Lc/KyZfcqr7bbHe+STl
jdDAB7LM826knHjzT9Fl7Zk7ogwYnY+pUWsRf92fRbkw/XNiR6OzOXoObbyF
Oo/2GvLjy1y9lb/Uj81uzKDQHTG20CV/ZBHvP/74wTvyL6u8EpXe48d54ivT
hiLX97jp+EplGfUTo5wVMq5H5LX215Ef99VwGW9AHMtT1CNXmpF9fHY1/12+
6IY4lg1R5z/RNYk5thTulcT7GxPj2QgN6fnVyrOfi1ipaPWqcHxg9Fs67orc
a/qy3PBx253rqHsp6XW1Niv37VSfuV+P9WdXfHbkNekyNfoYOR5vdPwQ9/p0
743E5tIX0f5+SO1YEuPfHeu3fhq+Zyeu63HlWnldeJ+tDaeRDwQAAA+pic9F
ud4oi830HtbLPMZ4qzO3yPHEYVO9rNVv+bT+W22UB0JfizpJPm4PX0fT9F/Z
7vKfifrlYVm3V+mIz9nUy/gKfcjrFNnrxEunboky0kt11m0HBqOcaR4PZyam
TDZU+7RlOXtClmPFa9M+J3amLcrfpnO2IOfRxuxdfZwg83vLZbwNwPalxjrZ
O+l0/XVyDfoo6O+j+uahhPsdf5zy+sYen9FXLLyMlS9XR7/W/jpG5wlMyLK8
cW1DIxdZuTRX1kerFAwMx207nWuS0r2ScH/NsYA9q2OLOxemOCN+2zbn2nyc
Sa9r4n0zv7/dZzd8v7LPSTT9Gkf2b+73RmJziTNs7oeUjyUxnpvxzAXT95Zx
HZSXaZj9+WXBL5CbAQAADzGjXv2w6AfDcxKVnNV6PwhWGJ0Q9W3fxK+fqJwp
6yF5WSiP90VwONi/m0V5JXtzkezHor8mtsxr5EpmO7ZRHnudw6GPK69kZdG+
C4nHZEmlTBauA1cTvTbdc2J/btONM9I/j9ZCI+fizoXelpFLbX7713FjLW9G
+orJPjGXw3NKpB5n2K33aJJyf6LraG4fsCrLT7k7qDR/nbyHHOLfjXOMM1K7
V1KNBewZr7fqH5RqnJHKNUl8XRPvW2ycYfXZNdp/4j8bsfs393sjsQWMM1I+
lkT03Izz7v+NWtpb/l96X7j2birNzhffKQAAAA+rsSa9H/gFVzvtXPcWeSa+
EPX5R5xD9GneWroUVZ+bQpnG9jfazPr3Xf8Nji/bpSKVMplR1u6IGWDf6Pti
vDa9c5LsGOV50Iappm4g/NzCnEdrI7UvRvW3mrip57wcbP4+8QvVu9TYNkKa
ep/6XR3UULFP778enufDvh0mtoyYajySTpzRkyDOMHId1h26InOkNfoovF8a
qZr5/ZJfk1TvlYWJM6zveattx/ebSuFcJ72uifbNOs6wK5uvPRo9R4R5/xLd
Q6ncG4nNJ86IuR9SPpZE/iZyM2LbHWd9F2VOiIK5WgAA4OE3cys8j9Qvqnhf
YdmvQbHoG5GwjGCUh8ephLdBPPFWTN+iSTqzo1Dmi8rXxJShfbL/8pGY/s8z
vX+h3Unmyk3Yf0X+mPtafy/Weacvuq/CWIOe233e6MOQ1jmxI+t9t+s5BaGB
t2ndvv8JP7cw59GKymIhvQ8Kf98RGTMdbE7c78w47izlZfbOpkUiP8Yo18pj
itrvv4lc8CdTbfeKXc8uzoi7jtFl8ejyttyvqDnaxukwj9OqvhOvPyLGE039
mqR6r6Ry3yWSMM5g933stvVxCMzrp3AvJb2uifYtdm4+688uz3kuUvT9iD4U
/f6IlKnnfm8kNvc4I/5+SPVYEvB9TOu3W/VRnA7np2yossnN0CbJPehBDAIA
AA8BVc8Z5nmdsp7eKEs9UxdT/63JPOR1J2nc+AHVxvUczj2fRvJgZe72blNf
p5GmF9jrzum/new1ej7z2ZhxV+X2TeME8fnT+G97sn7ME/I9j3T8PbzMJ/vS
14X7h8j+1esP07D8EZ/1yfl6d18zlQnSOCe2VH08f+WAKN9NNL5GLxmvXajz
aMXoA77+AJXu1PvHNLutxsu1IPtq7TKNo+W7zsvbkRzn7tKfkDkPeqzp/+vx
13PvmY7F+vhir7k2dUf0g3/80JeRXNkE1/FDlzF2rka9Ipcnl9q8vL+RLC+y
c23UH/McW5Fzy7Y90PSGjF0TXRO5f+vfkvuc2r2S2n1nz3h95NhMpvRxEcJ5
x9qonjfAPw9OX8JzHXUvpXBdE+3bwbbvxTnXzOcp7rMbyV2JxLQa3ZT9hMJj
LM3j3rAjcpfUUf2YV7LrFUylvZGzvx9SOha7/VHvUxMfL2Djx5af04mbf6BE
Y1sMnflP8XyynDQAAIDlYEKUOf4cqQtm5Rv+OxfVZ0QblmOYrpHt/q/SoL9P
lnvWyD7fpnKe8wN9vdVb9BwLVn4T5TXVyIU0XsPKWIOmcjArc5wpWCuWG2N9
JquLN/I6srKyxL+8PKXn8fJlSniZwMojxpiZOSLvQh9DN7a8ldI5SYLnJvMc
dkXs1/P62DULdR5t3/Njud2n6HTLQHp1ojN6zn1OLs8Z3kY7HStFWd5cXp71
3pDX7ynx/KrNe2mnMdYpr2cPuJMf3xNvkav7Q/3/8prxMqYzhet4sKWXancq
Ucv4uAETrvOyDWoNbeP7s+kkXQ+PS/x8VL543DUJ58LIfWZl1VF+/pPcK2nd
dxaGRP+2yLrx9eSsbFv5G/Hc5vx8tm9ZVFC4I/y5WfvOlZTuJfc/kl/XWLHH
xu87z4/3En92mbGbf9H3JStX7pMpzk3l3re5N+zjITV8P0S2G/0ZSsTyfkjl
WGwYbUDi3Ck27SuiLmBn3NzgBp/sA3iqJ9mYdgAAAMuBSsGY+amCgYWYqVql
gN9P/jlsSwsGyM9eG0yhrDAXqrH9BP2PFuacqAtwHHM/j2nR2PvIHeXv5/UH
bOqSNX1//IHw64LsRBpjYmWOxq4R22+vP7zfmqpaHEN61yT5vbK4xGeBHZMx
L6QaDJKqaqnP45DydV0oD+h+XTCJ7ofldiwAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAif0f94zijw==
     "], {{0,
      335}, {794, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{534.65234375, Automatic},
   ImageSizeRaw->{794, 335},
   PlotRange->{{0, 794}, {0, 335}}]], "Input"]
}], "Text",
 CellChangeTimes->{{3.585170747981667*^9, 3.58517078305866*^9}}],

Cell[BoxData[{
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["R", 
      RowBox[{"i_", ",", "j_"}]]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"makeA", "[", 
       RowBox[{"A", ",", 
         RowBox[{"{", 
           RowBox[{"i_", ",", "j_"}], "}"}], ",", "3"}], "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{SubscriptBox["R", 
      RowBox[{"i_", ",", "j_", ",", "k_"}]]},
    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
   TemplateBox[{RowBox[{"makeA", "[", 
       RowBox[{"A", ",", 
         RowBox[{"{", 
           RowBox[{"i_", ",", "j_", ",", "k_"}], "}"}], ",", "6"}], 
       "]"}]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Notation", "[", 
   RowBox[{
    TemplateBox[{SubscriptBox["R", 
       RowBox[{"i_", ",", "j_", ",", "k_", ",", "h_"}]]},
     "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", " ", 
    TemplateBox[{RowBox[{"makeA", "[", 
        RowBox[{"A", ",", 
          RowBox[{"{", 
            RowBox[{"i_", ",", "j_", ",", "k_", ",", "h_"}], "}"}], 
          ",", "10"}], "]"}]},
     "NotationTemplateTag"]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"makeMatrix", "[", 
    RowBox[{"dim_", ",", " ", "a_"}], "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"a", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
     "dim"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "makeA", " ", "generates", " ", "the", " ", "A", " ", "matrices", 
    " ", "in", " ", "Hietarinta", " ", "paper"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeA", "[", 
   RowBox[{"A_", ",", " ", "list_", ",", "n_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"res", ",", " ", "i", ",", "j", ",", "k"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"list", ",", " ", "i"}], "]"}], "!=", " ", 
          "True"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"res", " ", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"i", ",", "j"}], "]"}]}], ";", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"res", " ", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"KroneckerDelta", "[", 
            RowBox[{"j", ",", "i"}], "]"}]}]}]}], " ", "]"}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "1", ",", " ", "n"}], "}"}], ",", " ", 
       
       RowBox[{"{", 
        RowBox[{"j", ",", " ", "1", ",", " ", "n"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "=", "1"}], ";", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{"list", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}], " ", "\[Equal]", " ", 
              RowBox[{"-", "1"}]}], ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"res", "[", 
                 RowBox[{"[", 
                  RowBox[{"list", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
                
                RowBox[{"[", "j", "]"}], "]"}], " ", "=", " ", 
               RowBox[{
                RowBox[{"A", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ";", 
              RowBox[{"k", "=", 
               RowBox[{"k", "+", "1"}]}]}]}], "]"}], ";"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", " ", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.58514256430665*^9, 3.585142604445917*^9}, {
   3.585142653361436*^9, 3.585142667951977*^9}, {3.585143604296423*^9,
    3.585143636550129*^9}, {3.585143681697706*^9, 
   3.585143717133985*^9}, {3.5851438319866962`*^9, 
   3.585143866771969*^9}, {3.58514392653368*^9, 
   3.585143946359082*^9}, {3.5851488886232767`*^9, 
   3.585148921536998*^9}, {3.585148965450272*^9, 
   3.585149105242787*^9}, {3.585149148703198*^9, 
   3.585149160761752*^9}, 3.5851492542724047`*^9, 
   3.585149301353911*^9, {3.585149697367523*^9, 3.585149714186428*^9},
    3.5851498231226*^9, {3.585149992853161*^9, 
   3.5851500167694387`*^9}, {3.585150074054235*^9, 
   3.585150103260968*^9}, {3.585150248150277*^9, 
   3.585150255169649*^9}, {3.5851507425457582`*^9, 
   3.585150768825039*^9}, {3.5851533088659687`*^9, 
   3.585153425303596*^9}, 3.585153475862464*^9, {3.585153917448834*^9,
    3.58515395789466*^9}, {3.585153995412236*^9, 
   3.585154061225196*^9}, 3.5851541345639477`*^9, 
   3.5851542267596817`*^9, {3.585154280927492*^9, 
   3.585154285989908*^9}, {3.585170208162919*^9, 
   3.585170208965909*^9}, {3.5851707904662237`*^9, 
   3.58517081869003*^9}, {3.585174154603943*^9, 
   3.585174190727021*^9}, {3.5851746505515833`*^9, 
   3.585174685325235*^9}, {3.585221384386599*^9, 
   3.5852213848957357`*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["3-Simplex\n", "Title"]
}], "Text",
 CellChangeTimes->{{3.5852371697315073`*^9, 3.585237173971911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"makeMatrix", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], ",", "a"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"A", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.585154493588426*^9, 3.585154515761199*^9}, {
  3.5851546941964903`*^9, 3.585154696137384*^9}, {
  3.585155156778528*^9, 3.5851551583289967`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      SubscriptBox["a", 
       RowBox[{"1", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"1", ",", "3"}]]},
     {
      SubscriptBox["a", 
       RowBox[{"2", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"2", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"2", ",", "3"}]]},
     {
      SubscriptBox["a", 
       RowBox[{"3", ",", "1"}]], 
      SubscriptBox["a", 
       RowBox[{"3", ",", "2"}]], 
      SubscriptBox["a", 
       RowBox[{"3", ",", "3"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.585154516074695*^9, 3.585154715199312*^9, 
  3.5851552619844837`*^9, 3.585221350718684*^9, 3.585221389713353*^9, 
  3.585251314046598*^9, 3.585920027320228*^9}]
}, Open  ]],

Cell["\<\

Rename the entries to match the paper:\
\>", "Text",
 CellChangeTimes->{{3.585170598614398*^9, 3.5851706008861*^9}, {
  3.585920020250333*^9, 3.585920022295661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", " ", 
     RowBox[{"A", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "1"}]], "\[Rule]", "a"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "2"}]], "\[Rule]", "b"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"1", ",", "3"}]], "\[Rule]", "c"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"2", ",", "1"}]], "\[Rule]", "x"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"2", ",", "2"}]], "\[Rule]", "y"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"2", ",", "3"}]], "\[Rule]", "z"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"3", ",", "1"}]], "\[Rule]", "u"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"3", ",", "2"}]], "\[Rule]", "v"}], ",", " ", 
        RowBox[{
         SubscriptBox["a", 
          RowBox[{"3", ",", "3"}]], "\[Rule]", "w"}]}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"A", "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.585155165689892*^9, 3.585155253393261*^9}, {
  3.5851706057699337`*^9, 3.585170608430984*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b", "c"},
     {"x", "y", "z"},
     {"u", "v", "w"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.585155254311718*^9, 3.585155268740881*^9}, 
   3.585170608776648*^9, 3.58522135221595*^9, 3.585221392414748*^9, 
   3.585251315263913*^9, 3.58592002968705*^9}]
}, Open  ]],

Cell["\<\

Make the R matrices for 3-implex:
\
\>", "Text",
 CellChangeTimes->{{3.585170620443228*^9, 3.58517062457878*^9}, {
  3.585174020995521*^9, 3.585174041491103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["R", 
   RowBox[{"1", ",", "2", ",", "3"}]], "  ", "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.5851705779715967`*^9, 3.585170580274399*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "b", "c", "0", "0", "0"},
     {"x", "y", "z", "0", "0", "0"},
     {"u", "v", "w", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5851705756258297`*^9, 3.58517058072189*^9}, 
   3.585221398152422*^9, 3.585251317014814*^9, 3.585920031805181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"1", ",", "4", ",", "5"}]], " ", "//", " ", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.5851706357141647`*^9, 3.58517064500874*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "0", "0", "b", "c", "0"},
     {"0", "1", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0"},
     {"x", "0", "0", "y", "z", "0"},
     {"u", "0", "0", "v", "w", "0"},
     {"0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.585170645405795*^9, 3.585221399487751*^9, {3.585251318032206*^9, 
   3.5852513206847754`*^9}, 3.585920033024267*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"2", ",", "4", ",", "6"}]], "  ", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.5851706549290657`*^9, 3.5851706653036833`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "a", "0", "b", "0", "c"},
     {"0", "0", "1", "0", "0", "0"},
     {"0", "x", "0", "y", "0", "z"},
     {"0", "0", "0", "0", "1", "0"},
     {"0", "u", "0", "v", "0", "w"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5851706661722393`*^9, 3.585221402138404*^9, 
  3.585251321918779*^9, 3.585920034258061*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["R", 
    RowBox[{"3", ",", "5", ",", "6"}]], " ", "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.5851706767461557`*^9, 3.585170683672814*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0"},
     {"0", "0", "a", "0", "b", "c"},
     {"0", "0", "0", "1", "0", "0"},
     {"0", "0", "x", "0", "y", "z"},
     {"0", "0", "u", "0", "v", "w"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.585170684102849*^9, 3.585221402973153*^9, 
  3.5852513243700047`*^9, 3.585920035991624*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5851706578476143`*^9, 3.5851706585654783`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvftTXMe59zt1zvnh/BGn3n17Y1uShX7cuVgXqHr33oktjfSe2tmWjHyS
WEKuJJaQd2wJ6exYt0gyim1dbFnI1s0CZAO2BLIFtgELcCSwAAuIBQ6DGXwY
XBqsIQyuWqQWbz2nV3evNWtm1m1uXKzvp0IsFjPdT3c//XQ/3U/3+odfbfuf
Rf+bz+f7z/+T/d///OWO/Gef/WXJ//1/sF8KSn63+Vf/O/vH37H/+7/Yj/aQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAeokYjFA6FKBJV51oUAIAT6iDt9y+m
Vf6NVFRUREWFhVTgK6AzPd/NtWRJTA+9x2TzkfY6x2eqvpprcWaX6du0RZbd
t+ESRedSFuUL2p4nZFmx80O6H6z8wPlfirpnfeNycDpr6d7XOp0VJqmtupxa
+ifmWpAsolBdyU+kvj1JnXPR2e/DPg4WFmr4FpUWLuI6+kRxsegvez+da7Hm
lKnAdaqobqOI7SfmgW0B9zVKNEwdlc9zHVy87RIFtLUCZa6lsma89zKfnz1y
9POc5zXS2kiD86YeVIoEb9IubQ6w4rSDPckyyiDVtw4lP2a2XshyImeypF3/
NjJngraG1l0h+sgrXX/NatqzqdMLGSt9mO571fDB501XzQbqXarbr80L1uV+
TjCHfXzBkwNbM6ssVPnVQdqu9fvVp2lUOsOX8sV6UGc2DMGCrJdJOp0v1ggu
BhzWxGbTtgBgwXTfm1xPH339z3MtigsKXcifnblZQ/Em+nheDbSs7H7hb8ya
mRh7jzZYrhnlXpa0699W5szQ+0i2/Y3Z1OmFjKU+sHlBqX8l7an6ck5kyiXT
A6+K+VOuO/sc9vEFT45szayxQOWfkusMFwP/y3jWcepXtGTzBbqbjQwWaL0M
1R6kVWsO0B2XDjtrtgUAC/T++9i8n/MIHz73c7NR2u5bSzfm1aLp5KyP/2MN
v6blh27PgSzp17+9zJmh95Hs+xuzpdMLmfnYH3OL0Lfczwnmro8vfHJla2aL
hSq/2NdcRz05sgcLtV68Mlu2BQArrPwNJTxMvV3t1Nrax2MVxroaqbq6murZ
7ympaXSUmqrP0rFjp6i6vtu0Nz9Jgd5eam9topuBCZoK3qTqilrqDMbHYkdD
d6iptpqqa5sppEToEhsDH0iamyk00HqFTh07RqcqGmg4qn93kJehqamdImqE
OmqrqLap2zE+QI0OU2XxI7w+ytuHKBgIUCAYjo9hti2TM2pkkGrPvc6/d6WV
1W1tfXyMiGO68eO/yj4bCAQpFApRMBigYDiqF4D9zp6zH/2ZGr4j8j11iq61
j3gQVKGRjjOUp+1Zb9Zi7IIU6A9Q2DiTJ2VZfYGi6l0ms9Y+9dQbnEpOKsW8
vdS/ZZqOMnvQNfUe049ypkOnqMpCR/Q+cqZ/gib6P3bsC25ldtZpb/1irLeR
zrH0T52riftb1vqtTZ+KMUn97Y1Uy9K+1iXKGGT5jiqyDP291NXeSk2tA7Lt
9GeNdLN/PC6licBNqrAoC69LW32I5dEVSD6/YVc/ev12tbZST2iGZTDqqL/J
eC1bqvmI+tTaqrF3jCYG3rScE1jrljediU8oe33cXVcs6pDL20p3wjPcLtaz
/lBb30qBcCwWxIv9duprzvbWTmYP7eZad8446bv3/qvSULuU/1wdtbPPXWkx
ld/JnjnJr9xl40qA//T397OfAB9PtLHGqXhKOBQ/7rD8+e8s7aC032o0zJ9p
P3rMdqrjgxIZpe66F3jfqOoS9qC/t4vaWX+sZ/oTljK66Y6lbkxl1q6kjLJ0
RJ1r43diN8iGTbLTaa43rB5aW7tYeRMF82JbnPtDSrYFAAes/I2Byt8aZ2Rf
LN1EviW72XhwltbKuEkv+5YTfW+JM4d7L1FXbzsdLxTnlG6GtT41TPtlvKEv
fy3ly/OJ2t/FuoVKbWW/4s+2naqh+opDwg7wuC+Tv8HSOe4X37vS1cXmJg9w
ma8Fp2mk4fcyTR/5/auMf9vHjU1SXcl643Or/H4qZN9bvS12RtuxTA5MD73N
v7ejopn6A71UtkX73jK6GfWabsJ648SN2Bly9rNVxpSMNDxnPHuq/Esaa36Z
/3vD0Q+ZPbvI6/ChvR86xrvPjF+n7f41sr4LyF9YSP58P1007hGQssh8tp2q
o8r94hzayZvfGumknrd7/dulOeUks5uuqYO8LpcfvsrGqGuyXp+lHpM91vsI
/1lp3xecy+xBp137xT2q3O7j63vlrd1sHD3E/77+9c/4mJ6NfuvUp7h+hK7L
OlpH56or+NniDS8epwJfHl3ndTYqv89+Fsn4f+0Msizrg4c/M7IaqvkFT+dK
exc1lD0l9Vbvn076cJfOFz1o5BFrKuf6Mcu2uLiUy661hZX+WuO1bN7z0epz
o/b9Jc+yeUo9lW55SJY5PsbaVrdcdSaZbPVxN12xhH2nND+Wtvb5o9W1VLb9
AWEjr+i2zNl+O/U1R3vrKLN7u7nXnT3O+u61/yp0tUizQwfY/LGf+ppPCt3T
1+Rd7JmT/FPdL4n812ynF9nc89j+DYY8N239SIWa9/0s1p5PnKD6mj2x31kZ
hrX2rPuN8WzHla/SGpsGap6jvLw8aQ82MntQSIWFa5JkdNIdO934dLgl7Xad
GnhbfO+JI9TK/Jzz3AY9zcudLZvkpNMxvYnfg/dkW5z6Qxq2BQAn7OKp9Jh1
n+/V2Hy77Q8utkdP9Ba3kY8c/cz0UKWGXVp6fzTs5vlCob+X2bx6hNmSJU8I
m6rbplfM47Lsb2Y52/b/A+87MXnu0nGtf2x4T4w7A2+IMqz/iNvhXUsfdp1T
zPDvFFBP4jqBpzJZ03f8h+Tb9JHpyT3a5csX8zNP6VrFN4zS/jzTvMdIV9oc
Nq7kJaQ70SHGE8czZTJ/fq7A0jeLzUUOduq2+C4dMc+3Msjbtv5d03SS2V7X
dP1/5to3MtHr/Ay32S+N+RsOfcFFPq867SRrX9m/CX03LVjOjL3PP/tCixyX
Mum35NKnZuRZTTZ/uaPE/n4kaX5sFf+vJMSO6Wccn2WaLOgo/ZFIxzSW2eqD
RR5e6sdcv6/Y6a8jXsrmMR/NJiX5girVbU+oT1fdt9cZezLs4+Ruf+2RdZhw
T05H2X+Q2EcU67q29tulPpzsrbvMXvTDqe7s8Kbvrv13+ha3T5fDse9MNP+O
Htpzi//biz2zk3+q+wAt2vGJ8bs+j93q4YxU3/mf8/nvB1KumZG3E/RHoRNL
fXToZmZj04w8f2C2B1Mdon7MumSnO45jcTrtOvOF8OlMd0cOVf4Lz/vl3u+y
ZpOc5Y7dn2H4Gx5tSyr9wbttAcAaO3/DiFnv/C7hmXvs30CltD2h+HX/cW43
9TQnqcwv+kN8clLfFyXejZIQ6z59W/jusp+rqjBAHVq/ZDZ9UI2V4WSv9zt+
7crorUzWDFWKO1U37yujpvYuCkWiNFBfxc92ea0rq3hqsV6mjc9/47/PjL1N
D8vPCPvvE/cbs7rh1TNxg489T7nev+p0rsBKlsm4c8+Z5G1X/+5pOstsrWvi
Xtq1LD+xjqVQNDJIpUvj0/HSFxzlq77lTaedZNX1feeHCSW4y+XV2yOTfuvW
p7r+dJCn/bw+l5EIX8rsb1jrSHxZFarb9yit3PYu/4yiKDTUfDDJL7KXPSEP
j/Vj1K+D/jrjpWze8pnoEH2cz8FMiHVmj7oldd9Ov53KkUkf92J/nfIWdfNW
vLxybrxI3sNrZ7/d6sPO3vaHezzI7EU/0jl3lYq+O/RffX67agu9Xt1MXf1j
FGXlqr42wD/rxZ7ZyT/V8RodavxW5in9ns0e738b/4j7ELpfo/kuPtkfebVO
3SD/4gNi3STL44P9s2TdcRqL02lXfZw29+GJ7jcpn7VPy9DnWbNJznInnzH0
ZFs89eF0bAsA1rj6G6b9Oa/zFt2nT7yfLj5Nud6z7Wr8+Qi53r8o6e73RH9D
fE6Tp1Db+9TiLeTe6qo1u/j+sZ7fO67r+YkyWsx3PZXJBlW7S8ccQ+CjDYev
8rmn17qyPL/JbDivK7km9dm+HxnrWn1yrVDsO/tZ/RTSWm0/JC+PdpS7rd+k
Phcxfz6TvO3r3y1NZ5ktdU0yEWih0qIVMn1/Un/w0hec5Nt5psqbTjvJKvtF
cjxgfHtk0m/d+lRV6c/i/Fvja0npe52T36O2ikPyPSQF5C9I3CdJwd/wWD/e
ZbPDu7/h9rlu3veT1xpS0S2z7tvpt105MunjXuyvU96W9ky/61Tew2tnv13r
w87eepLZS/ume8+DV3137r8j9QfjysZjYUzvoXGzZ07yc/0x3vn0dApxM/qe
2AHedg3auav8pVw2bS9ivOHXRt/M9vjg5G8kjf0OY3E67dp9/Kf2c4xs2iRH
uZP1xpNt8dgfUrctAFiTC39D6HoBtSQcvI2/V9Smb7M+IHzuCwn+dMIak21f
TixD8lzeicTvjNRXUWfEa5msGWq6QneiMxQO9FArS2+Xf4nxHa91ZX1fjBZ3
9U/CpkcCbKzeSHekURB2MLWyx9DbRtYts3UVVX3G31znURnkbVv/rmk6y2w3
juixviv2XpXnDVV+n7s4w62SonrrC47yedVpJ1mlvi9PivmJtYd5jpaWv+HS
p/R5QuKaoVd/40K+6Wy8FhucJ8a6K73inPXM0BtGOqqimGRP1gc7f8OtfnLl
b8SVzWM+en0mvmM1sT69634q89/M+rgX++uUt7O/Ydbl5HK71YetvW37xIPM
qfgbVnVnQ0r67tB/lS+otnGIff4u9Xa1UM2pHeLsgPTRvNgzZ/kVqikS89mT
nUKGvnO/Nf7txEidOD9Y3tVEW1YcoeD4x1y2Q+0D9G7hcros576Zjw9e/Y3k
PJzG4nTatS8hBjBe2OzZJGe5k/XGk23x1IdxhyLIHmnFU7nYibGG3/HvvtwT
vw46UiNi2C/y9VGpx3a+/+IjCTGCwzweMab38vxC0ufu0fnNJXxdJn1/w0fv
BDXbqFDZqjX87n9vZbLm89K/o8evmGNQ7vFYVq0sXuvK7n7KWLxvvF0baxbj
zqGW+PMqU92v0daz3vY3fJve52sa030v0YodfzL+Zm8b9bOc6edtW/+uaTrL
bKdrp5PinEbpgGaDz37FZdHiC7z0BWf5PvOo006yis9q9R6vzn8RczT53rtM
+q1bn7rVc4annRjzoJ+DNfsbvF7jdETI+YgRbyHitc37/aIvrGM+c4Tldzzu
fE2iPiTrobf68aK/zriXTf+cWz56jPkLCTqj14Nen151P63zBGn2cS/21ynv
Mnn/lfljM0Pi3gz9/gQ7++1WH/b29iMPMnspu1PdWZOqvtv236kbbA7/tHEG
hP+9Q4+RiXqyZ07yD8lx5zHT2Qrt/TeNpvMi9oW8IdfLffSTs1+S0c6++Hic
zMeHxDMv3v0Np7E4nXbV+/AzCTZRG5e1s93ZsknOcifrjTfb4qUPp2NbAEhG
61NjMv5w+eFPuO7re2bj8vzWoZaYjuufrTLt3Voj4xNXHjDuIJwZ+1jYoq0y
pkQdleeSLhj32OlodkfLx3xOrVvGfOpyauhnzLaa9mCH6n7B44IVUxnOdMXf
wemE3k9FjPoo7Vq5iwa9lskGETO123TGdpTboYN8LSKFulpxIm6cIbNcxpws
9vy4PJ9oxDYoYv3wpINvJD9IlfyM2G6e33jtc2yO+bX4k3o3JoteaCYfv3NG
xiZnkrdT/Tun6SSzna7pZzh3G/Hm2v3rXM/2fkJ9dS/wMdFbX3CWz6tOO/UL
PVZ4zzV9bFOpTe7nX5Ztn1m/detT92TMxDpq0ffpJ/Q5RsLZ39K/J/M9CiN1
/0PMO54Q7wXW5187rsg2Yv7Cdrm3f62/i/ZvEPMvW33Q62nlEUMPvdSPN/11
xq1s3vPR69N0/j4i98JYHTeG9BgNF9130Bl7Mu3j7vbXnknjDOqZgLQHxvp/
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
IoPyaYi2k2uR059QvmmNLxOdsSyfqt1D44srx4bDVz2fY+kr++fU/Q2nurP5
vDdS8TdieS/eejVuLT3jOtbihCzOXYw3/854riraaCDvw9Xu0CY51zQj/Q3v
dxfra8wHePs1aOct85cK30rbVm/4dYJOpulvZNQf9S+Ksxv6uNhniu1MNz7f
bnxIb7ylmO9vrBVafc7ZLup2OHnMcpdt55kqXkeLkt5pkU7/yK1upP55Z8Ya
fsdtYGFRIZ/f8DlO/sPks7Sr4PuIEU8qjfNIfZXxHtT0fYFU83fPI/n8Wawv
2NsNq74R/6ybz1EKkuJyE+8J/Gy/sJsPF24RtkN7T4PpjIqwQU73LHiQz6U+
vcpqVadxc1LlC6ptHGLj413q7WqhmlM7RAynx3sK7eZUI2Z/Q9Vj1AvoSq84
Uzoz9IYhg6ooprSs6k2vG1kXbJyoqOrzIF2aZMnfcNcDe9y+q49jiWt9XvyN
pHgqT+3j1AbW/oZbP82uvxEvl9f+YYtTv8igfJyx9/jz9eVf0kjdL+jRs7EY
8kx0hizyHGq6QneiMxQO9FArs+e7/Es8+1saXv2NC+a1HFebkm5/Ts3fONQ0
QH1yf2eH6Vxyduo4eX+Dx67F+VjxP0nrttLfSOVO3JE6MW8v72qiLSuOUHD8
Y163h9oH6N3C5XQ5bj/PaZxJrvts+hv6un9sv0ihmiJZF6a1uVSwGx/SG2/J
5G/YzBs82MW+pJisFGTTx5kNFxLGmfT2DXKpG1n1N2Zuc/vZGE5+zutj29X5
8x5IkDOM9YOgiIEpW7XGeBeH414r70ty3X/xkYTY6Ht0fnOJp3e9uucxzM9O
aDofn9xfEmIUHPpGoo9v6i/C5/bRyz3x6y/63Fmsy9yj46tW0gehKYpo9z+E
kmflRox2S/w5qqnu12jrWbf9DV0+5/psqnveg6wiz8Q6NWJutMqausFs0tPG
+ir/Do8v9TbGGHvccXLoY4tYB9LPDZr3nEVdr6M7aoSV5zgvo5u/ocdFTPe9
RCt2/Mn4ayQ0aHHXSAZkGk8l5XfXA3vcvqvHMifGf+jnGw1/w639yWv7RB3a
IFGfvfVTL3XojrVueOvLDjj2i2Da5dNl1s9vaXVs9oky0RmyyPPz0r+jx6+Y
Y+7EeTOvcwQrf4PXd5ztEuU2bKurTXHuz/Y4+BtJOrROnkO8J+N6Coz5TcZ1
3O3RPhqxt07nxVM8G6HvG7Cfn3A/VY9bsrJX9uOMVd1npz9qqFRX/ANKjGc0
zl+w57G5r0Jtxx6nxUa8gEPRbcYHL+NtmYylNn91ZugtuZ6ut0/C/qQHu/j1
gFi/SHwXuLausaP8SxfZPhP5JY3xwn6mPI/PoW54m7N449OSf7ReR9Xf8Z7g
F2Z9fAfzAt0eiJjwUdq1cpfxnp5xecbpUEts7BqTaxhVcp9cPwe11bQnPVT3
Cx436cVceclDXzfZc03v3yq1yT3Ny/o5cFWeq15xgkZ1R1kdlWetLxj3gKoT
Yl750N5PpD8tY6NWHjDui5wZ+1j04a36nqcq7l73PUkvHjtG+/bto30vHqNq
fi+uLrXM3/dsLI5MEWspJ7V5jo18/Dy7jBV1r08vspI8v2g6S68Oi7m0Jkv7
mBG39cyVmL0c0+ICTGcGnTBiF5bH3kGs3yWi23HdbsfWGIflWecCutbfRfs3
CH9Db/8zXeMJuch3+cq4k/Ha59g8W6Y1fVvaWG9nhJwRMQ/Tej2uPELDimq5
1uJFV131wBG3796T++freJwwZ0Ifb0znIt3an7y2j0Mb6H2L1Zeuz176qbc6
dMNOLo/9ww6XfpFu+XT07yeeLchMZ5LzFHFlu013Coj7Lg6mvb+hnc36ezKf
uR+p+x+iLE+cFu3valMcdMkJXc80u2lT3tgzNqeVe85iTVrop7bXk2kd630q
MZYxEe3OH65vmy/F3ddrJMN14Gk2d3XPMkZsn0Cfs+s+9OOJdWjRL53qPjv9
kWLz3tWJ6/b3ZL0LmQYjEWrm5/yYLxhy3+OxHx/c2jPm358JyDYz9i5MtjJB
v7zZxahhh40ysLQPGHk7y6avB201vXevW575WJ7ymfrc6YbXOYubfCKuzuZu
t+htUb9LNJstM8nq+A7mFwrVlYg7zjR7qt3tqKHvGebl5Qlfno0j4jym9sxn
PNMYa39T7J0vXStijTS74qHTpJLHSNtrIo+8Anl/25OxM2jGvT3L5N+epf5w
j5xjLRO2bvER6uo4I/4t8zP2NJVh457cfB7/KO6xM/qTdr/eUpGWn8djrjLu
r0u0XeeLl/Pn+v19fG7iRT7W3/W+5VifbrIKQYz79tYUFbG08qi4ZDPpe/zL
Sy/wNbh8LS511UbawuMtCjyPL+ZY6TwmY6GM19hR/rlpHnWXKkse5c8fZnWm
/fdofbMRV67dbTUg4x70to7tVQmmh94TMbS8vZ403Qskx43VpzN+T+30wFtG
WbR8Yu36dNz+XCq6aqsHXnD7rvnvhX4+5r14fBPFn7twbn+xhubePrx+rNrA
OGe0zLgHeVg2vFM/TakO3drNTjc89Q8b5Nq0U79IpXzrzya8x5fZAa3Pv2x1
VjhNnUnMc8e1r+lzbT7H5BOx0kVczhU7Mzm/EX8Ps1YvD6/ZTluMO0eZ7n1z
07Xu7PuzDYl6xvrke68+nlTeRDvyAps7G3pl7suZ9Eu5R/R4uf3ndTmM8cWn
7anFx9xod4E6vjPQBn5OhPl7RpUx/0dLP24O59Avreo+m/1Rf6/6GYs7juNs
rBz/vNxP7TY+OLeneT9xGb/rldfJmgPUGY6/q9KsXz1K2JNd1PKuLBH34q8q
FJ+Lu2fXRdeMMZ71lY2sH60s3k9b9HIm+WzO5EI3Up2zWKLfsaH/rIgfr/Xz
nrE89Li+7I3vYH6iRMIUDqd8IYU5BYqEWRqRTNKY2zyUaITVQZiiVjG6i04k
3acZHRNj8FMJ7y9S9XQy8s2dy2ona5IcoTDpr2NSolFStLV7Vd7hy9DyCIUj
KcVOxt4RNaUpDvt+mBSbBFQlyuQMmd4hpHIZvKNkoS7nhkz0wO27ettqTavf
aZ0Y62Hb/ubPeGqfVNtgNmyByMdOLi/9IwnP/SL98mlt4FSN2bAdSkTKrcj2
TzExcT+V1VkuVZQ7LP/C6ivKKpjfo5dC3c11f063jsWc2sO9ynbIddtDad39
qdV1vMDRlPUvd3U/EeiMvVvXgkiwh9rb2/m9ZdnO3ro94+OpRH/1bgy8jlt6
3nZJO+tagh1heYr+5FlMI535rBsAAO9o8dDa+y+Su6KIU9DOgN5PzMgYvJM9
eCfofGCK35O7zvIdOgC4o1Kbtiey8ghpXsK7/D5Z99j6+w7pL6T7brKhmn8n
7S6htP0VkAKqPHvgLa4bAADmA8Z+4xMHqLFrgEKhIPW2Vsn9z92e77X/PjDW
/g7tKlzM/Y0lT+yiqvaRuRbpPkah7upXjD3rJ7aVUksIZ+xAqsRiwM82l/PY
hmeueDhbcR8y1vBrMr+vzDOpvncDpI86SjXH5P1ovmW082gNDcPpAAAsFNR7
1F1fTvtKtlFxcTGV7DtOV1oH7ru1k6nATaquraempiaqr62lllTOFIKsM9bb
SLX1Tbw9aqurqRP+BkiH6CBVvriT2bb9VNWCNQR75PvqTe+WdmeUnyVe7+Ee
LJANJqmDjU31TZpdrKfa2jacAwAAAAAAAAsIhbqaWo07D90/PkxNLUM5lQgA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQKP5xcdplX8jFRUV
UVHhSlq56RJFtT9EbtH2/FVUqD1nP/58P528+a38lkoN+9aTv3AL+84aWr3z
KvWc/yX5fD72U0CXg9NzWCJrBua5fLliKnCdKqrbKDLXggAAAAAAgPuSSDhI
DaU/43PxxdsuUTAcFX9QohQKtNB2Pkf30Z7abgpHlNj3gp20S/vbkt3UGZoi
NRqh7orn+Wdf6frrHJVGogxSfetQ3KN5JV+ajLQ20qDi/rkYk3Q6X7TfxcD9
42MBAAAAAIB5xsR1KtB8h9WnKZrwp6FKsS/wzJWvk752tfBBOtn/N+P36b43
58d8fuw92rD306TH80a+NGko3kQfp7hRMVR7kFatOUB3EhsWAAAAAACAWWOS
yvzaOvgy+iA0E/eXtv1ifdy3+kK8LzJzmzYu2U2jpkdTfa/Oi/n8WMOvafmh
20nP54t86TFK231r6UZK+xsAAAAAAADMD4ZqfsHn4k9VfWV6+hcjnko799Bi
Wluf6vgDLd9zKy4NfT5/pn+CJvo/purqaqpv7UvaM9FQw3eo9tzrdOzUKbrW
PiKfTlKgt5e6WlupR/N71FFqYmlU19ZTb3DKvRCqQiMdZyhPk3fzJQqEghTo
D1A4qmZJPjvs5G5mv0u5I4NUL5/dCVvENqn3qKO2nE4dO0VVTd1x5y3U6DBV
Fj/CZS9vH6JgIECBYJi0UkVDg9Tb1U5NTe0UUSMsjSqqld9XwsPU29tFra1d
7G8irSh7FgwGKcTqJhgI8rJrnwtoz9iPEU8HAAAAAABANhl7X8zTTfsY030v
0fK9n1JfjYip2mGKqfqk+Cf0cu93cUno83n+s3I31dafpbUyTuuuOavml/ln
Nhz9kM3RL/J8H9r7ISk0Ssf94vuLi0tpe56Ptp2qocr9P+HPYufVrZkZv07b
/WtEOZh/5C8s5OfcL/Z8lyX57LCSu86Q+3B1BW1k/91bUUdlRQ/yZ++Yz1Oo
g7SFPVt++CrzHa7xf/t8z1IPb4hJqitZb8i9yu+nQv8qWr1NnOsfafi98Tc/
e67/+9HX/0wDlb81fhd7Ogo17PtZrA58T9Oglob0NcU+1hEaVB2rGQAAAAAA
gDS4R8fzxTy9MSyetO3/MR3s/BubgL8t5qIbLsk591/YnPhZPlc1E5vPv2r4
LBNtf+Bp3tQfMJ9Am78/cvQz43sTHS+ZzjQrdL5QzpE7dX/mLh1hvz94+DNy
R6ULrByPsPl2ItmRzw5ruUvlee13gjJObfoW93EeOfp5klzPXPtGZijO0zxq
KsPMwBtczh4LX2Ca/43ls/4j7rvsWvqw4ZtNW8WQsTJyP2vlEe5nzQy9xT6z
jlpCOFMOAAAAAAByx8D5n8uz4dq8VzsvsFHOb0dpf56Pz0m18wMzfS/Riq3X
k75vnI/o/C7hWQF1yvl8n8zjjLbnoKra/9j8+gafX4tYLnmWZIX57Pqk8CFM
c3R7xJ1MVp/Njnz2+VrK7U88+8J8kKXx8k0Pvcfm/wVyH0ahaGQw6TOJclqV
62TCflNcmRPOrEx0vyb2S4q2s7Ll0eXgTNJ3AQAAAAAAyCYzI++JdfJN79PE
yFu0eNNV42/dx3/K/3ao/RvqfvGndNDizLXV3DZpPl/2HzIuaCMV+v3k9xfS
Ws2XycujHeXaer6coyfM2+18iGQ8+BsZyWefr53cD8TJYi3fRKCFSotWGDFT
2n8fS9HfeMdi/8XpjHyffCeJt3oFAAAAAAAgU8Tau7aPUVy4kg61xM5LTA+8
xeemDxdup8JV2+mORVyPl/m88FvWUaftYYhs+RvSN1AHqaKqL4vyZSp38jP9
DMaKvVcpzOtVpUuGn6KSoupyxuQaqa+izoi5DNYyO/kbHcd/aNwFkHgvGQAA
AAAAALmgW67vJ58VGKZdefJM8aaPLL/rGK8k58JjzWJubfZl+Oe6X6OtZ932
N5z2F+I/q+3RaOJrZ95X7PhTFuWzz9dW7rizJImxYVLeRSdMd1KN0gHt/MbZ
r7h8hxq/je1h8LgnhcpWrTHexeHJ3+iMj7Uaa/gdy/MNCk/1iPPpSw6wFgYA
AAAAACC3TA+JfYzFW69S4hZGR+mPxNz1pvX7K8bluepDLd8Yz8b4eWwfVfVP
yCd35bl0/f4l4u8D1+7d5e8OVOXfV5ygUV0AdVScu972ruXdtfEoVMnPbYt3
g4zXPkdPVX2dPfnssJGbP9twQe5bsEcTt/hdVQ/t/UTWr/4O8N3GvVDa+0M0
mZazz/TVvcB9H/1M+PPXxNmaXSt3Gef19XKd6RpPEiuxzKoa5Wlqz/Q9Df0s
x+JNl2KyAwAAAAAAkBNG+dz6mcbku2en+l4S+x4W6+j6uYe8vDx55vwrGqj8
uXzmM55x2Dz8fPHyuDtc91z7isc+ifd9LJN32j5L/eEePj/Xnol9l92u97Vq
56/5+9K5LE/SzUiW5LPDi9yLj1BXxxnxbymD5odoLs1410VxXxT77EbN91h9
gppr9sjyPiljvRSqKxH362p5rH9d3J81IN//rpchdodYcpl31H4g8xE/exqF
DzJU8xvTHbnL6HIQ91QBAAAAAIDcEe7vN9bj47lH/f1jWctHjUYoHA5TNCdr
6krGaedWvqTcKBoJUygUNvaVVEVJ2mNS2GfCeCcfAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA0kbeIeeL/zlkc/8FsGeq+6WkevStPu3hPg8AAAAAAAC+r4i7
4DYcvUqtrU3U1MR+6pvoThjvnkkVNXKH1x2vw9ZWqjv+M36nN/wNAAAAAABw
/zJJJ5b66GCPw73WIC1mBrT3/LwKfwMAAAAAANzHSH+jC/FT2UbclQ5/AwAA
AAAA3M/A38gV8DcAAAAAAACY5/7G9G3aor+7c8UJisy1PCkAfwMAAAAAAIB5
7m+QSuFAC/c5fNuuJr3rcz4DfwMAAAAAAID57m8wxj+iPOZvPHPt67mWJCXg
bwAAAAAAADD//Y2x5t/zd1l8EJ5rSVID/gYAAAAAAACZ+xtqZJha66uo+lof
Kex3Rclu1FNzyT+Rb8luau/vovrqWroZmMhq+olEQ3eoqbaaaus7aFRJPx34
GwAAAAAAAGTmb4w0H+R7DxuOVVLZrh/I92o/TXey5nKMUmm+fFf3mgNUUbmH
/3tHTmKr7lFdyU94+ocrGqimVMt3Wdplgb8BAAAAAABA+v7GRPdrfG7+VNWX
8sld2q/dI7X6dPbm2GPv87MbvtUXjLupOkr/nnwrspgHZ5JqijT/ooAaZdzW
QNk/8/LdTDMj+BsAAAAAAACk62+MCt9ixQnmZUimb9NGNj9/5OjnWZNOP7tx
OaQ/Ualuuy/r/sa4zOdQy7fGs5Gmk7TzaF2sfCkCfwMAAAAAAID0/I2pvlf5
/Hz92S+NZ9MDb/Bnr2Tt7Lkqzm74dtOw8eyuiK/K6rs4JumCX8SB9WRwXiMR
+BsAAAAAAABk5m+80vmd8Wzg/M/Zs3XUySbY0XAkC+/KmKTTzLd4aO+nsUcT
16kg6+/ikP5GlvdM4G8AAAAAAACQib9RQDeNTQY5Z199gRT6C21cfCDtOCSz
bJq/YY7P6uM+jY/eCUxnnHpiPg8e/izpLx3nzlIPzm8AAAAAAACQJun5G3rs
lH6uorvs3/jvj5d/RVPdB2jR1utZkE2hdwuZD7PjTzLPt3gej76e7BdkhkoN
xVo81QEaNZ7do7pd/z3unHqqwN8AAAAAAAAg3fPiCjWX/ozfF5uf56MVOy9Q
XdlT8j7cAvogNJMV6WbGr9Nan7wPV7sHt/zzLMZRmYjcpv38DMc6KipaI+74
PfoJZXKcA/4GAAAAAAAAmb1/Q4mEKRxR4n6PRLPsEagKhcNhimbxLLcdUZZP
KJSdvOBvAAAAAAAAkPn7xYE18DcAAAAAAACAv5Er4G8AAAAAAAAAfyNXwN8A
AAAAAAAA/kaugL8BAAAAAAAA/I1cAX8DAAAAAAAA+Bu5Av4GAAAAAAAAk3Qa
/kZOgL8BAAAAAADAJO3y+ejpa9/OtSDfO6Y+/S3zN56ju3MtCAAAAAAAAHPG
JP0X8zee+RD+RraZavtP5m+UwN8AAAAAAAD3MYinyhWIpwIAAAAAAADnxXMF
/A0AAAAAAADgb+QK+BsAAAAAAGCuCff3UmhOJ6TwN3IF/A0AAAAAADCnjH/E
5qM+OnRzLuf68DdyBfwNAAAAAAAwdyhUU/SA8Dda5vJuKPgbuQL+BgAAAAAA
mCumul/ivob289jRz+dQEtxPlSvgbwAAAAAAgLlhmLb7ltLZ+gpay/yNR1//
8xzKMkmH/slHWz/G+zeyzVTHbvL93f9LkbkWBAAAAAAA3Ff0lf0z+XbcYv/6
gjZqexyb3iVlzqSZpCNMhhfm9AzJ95Op7gPk8/0R/gYAAAAAAJg9JrQz4uuo
R3Mwpm8Jf2PF6Tmck2YWTzXW20jVFdXUEphiv6k00HqNautbaTAynRXpxln6
WnrDcUFJKoUCQYqqWckijrEukd+odADV8B3qCaVXFsRTAQAAAACA2UWldwt9
9My1b+TvCl3wa/7GCVd/o/v4D43zHl5+vPsP6Z4XV6mt9EfkW32Cait3sDyX
UdHGxbS6pFTK8EbG8+zxtv8i36pnaQv3yd4y0pseeivFMnpjovs1Ux0eoEBk
kA6wf5/s/1ta6cHfAAAAAAAAs4mIrymglkCQAv0BCgZaxFzat45uukxK1WiE
wpEIRbz8hCOkeF77T8/fmO57lc/J78o0Tudr5djNflfpkuZDbbiUYYzYMKub
pXSDlePPpf+NfItiPtlA5c891VlqsHrQ7gprGqBw6A7Vlf1U+B1HP0s7Rfgb
AAAAAABg9hilXWz++rB/IxUWFsqfNZTH/Y0nqXPODnCk5290v/h47L0hUzeo
gJVj/dkv+a+qEk3B37Fh6hPavOMTopnb/Ez9Q3s/IZGkQpWF3vaEUkNlflrU
+Hfz/h/T4q1XM/KZ4G8AAAAAAIDZYuD8v5Jvx3WL5z/n6+jvBJzPCAzVvkJF
xSVUUuL+U1xUTJdd0ouR+fs3JuTdvhfTjDtygsdUafUTnBEPpm/zMy+P5OwO
4Xt0nvkzi3Z+mPEZfvgbAAAAAABgVhj/iPJ8T4oz4gkMVP6Sz6df6fzOMYmx
rmt0rqKCqqurXX8qzlVQp+czzpn7G+JsydN0R9/TUO5SOEuHuUXaz9KwTG56
4A1RXzl5X8gwlbK6WP96zJeJhiOUbkngbwAAAAAAgFyjhG/xOCrf3k8t/z5Q
81s+f95x7atZlkwnnfupVAr23qTOoHYn1V0+Rzef17ha6KMXXPwnz7Llx6ct
9oOyfXaDoQ7SdtYOj5fH2kH4NunfZwt/AwAAAAAA5JI+GSul/8Styc98wee3
2vO8vDzxmTm5FzeN9/1N3eDnTn7w+l/YnPxVLrse3yRiq/Rz5JnLdkHzN7Z+
KH4N35B3VWW7nhS6WqS3UwFtO1ZJ9bWv8zI+c+3rtFPF+/4AAAAAAABI431/
ci+A+0oPP021TeX8vPiqQj+Pq7oZnsmadNMDb/N8tHP2ut/2WJbPbvB7w1Zf
4HsoY81/MPLZcPTTtGOpjHTxvj8AAAAAAHBfk+77/lSKhsPGO/fUaJhCoXBW
35M+FbxJtfXdFFUUikSiNNJ8kPsBZ/qnspgLI+E+LUW7eziaeUkQTwUAAAAA
AEDm58Vzg/5OjwLq5L7AsDgHs/rCgpm/w98AAAAAAABgvvobKl2S7ykPBW+K
+K0lu6lnAU3e4W8AAAAAAAAwX/0NRnSYao7tpeLiEjpb35fVWK3ZAP4GAAAA
AAAA89jfWODA3wAAAAAAAAD+Rq6AvwEAAAAAAEC691MBN+BvAAAAAAAAAH8j
V3B/Y9EJ+BsAAAAAAOA+RsRTvdz73VwL8r1jqhv7GwAAAAAA4H4H+xu5AvFU
AAAAAAAA4Lx4roC/AQAAAAAAAPyNXAF/AwAAAAAAAPgbuQL+BgAAAAAAAPA3
cgX8DQAAAAAAAOBv5Ar4GwAAAAAAAMDfyBXwNwAAAAAAAIC/kSvgbwAAAAAA
AAB/I1fA3wAAAAAAAAD+Rq6AvwEAAAAAAAD8jVwBfwMAAAAAAID0/Y3x3kaq
rW+l4bgJtUqhQJCianaks8pjrKuRGrvGspOBOkpNtbXU0hufXjQ0SCG9ENFB
qq/voEiKScPfAAAAAAAAID1/Y7ztv8i36lna4vORb8Vbxpx6ZuRtNsf20aGb
me+XWOYxfZvWar8vOpHy/D+ZUSplZd+2fzOX+WTvd+KxOsjzfPDwZ/zX7uM/
5H9/pfO7lFKHvwEAAAAAAEA6/sYwm48vpRsq0Z9L/1vc3H+o8pdsjl1ANzN2
Buzz6Dv/86z4GyN1vyDfntvMh7lBeSYfaXrgLeFfyN9nxj6mAu33FH0y+BsA
AAAAAACk4W9MfUKbd3zCJuJir2HRzg9JRB4pVFmYpb2HxDzYv/UQrWltHr/h
Pco0ZKvjxWfoAyboQNm/Mb9gGX0QmuHPk30mhcpWraGWFAsFfwMAAAAAAIAM
zm9o8U7MF3gnKObpNPMFj0NaLuOQskFSHowJ9uyxo59nKYe7PKbKt+l9w2eq
KdLit8w+019o+8pdNJhiyvA3AAAAAAAASN/fEOcanqVhudEwMyTjkLS0opGs
nBkXeeymYdOzD4t+QC/3pnaWwpapGzxW6pkrX4nfpc/0yNGYzzQzcoGWbHg3
5f0U+BsAAAAAAACk629M0ul8H/k2XCJFPhmq+QWPQ+pUVbpa+BiPVcpUtsQ8
aOztLJ0VF0x1v8Z9pDP9U/LBraSzGp+W/Jieb/k29bThbwAAAAAAgPue9P2N
C5ovsPVD8evEdX7mmt8jNX2L8n27aTRj2VRqKGZprr4g5+yjdMB8j1QWSLxP
a+D8v/Lf9zR+w3+f6nuV/f7HtPwb+BsAAAAAAACkH0810fcmn5s/7PfzfY1j
5w4Ln4P97Lj2dVakm+h7i+83+FZt5P99qvzLrKQbQ6Hm0p9xmf3+h8m38gBV
n98hfi/UyrWOWsLppQx/AwAAAAAAgAzfL65GKRwOG2c1lEiYQuFsz7AVlkeI
whHF/aNpokYjFA6FjbgtXo5QKKMzKPA3AAAAAAAAyNDfALbA3wAAAAAAAAD+
Rq6AvwEAAAAAAID0NzqzdwYbCOBvAAAAAAAAMEmnmb/xQss3RKpCiiJ+svDq
jPsSvf4UVb6rcNEJ+BsAAAAAAOA+Ruxv+HzxP/r9sMA7Yj8joS6z+K4QAAAA
AAAAFh4qBXu7qKvL/NNLYWxwpIwaHaau9vi67A2Mz7VYAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAACx4l1EP19U00GJnhv6vhO3Szf2KOpQIAAAAA
AAAsdMY7XiKfz2f8bC4p5v99oeXbuRYNAAAAAAAAsMAZqD1LjcFp9i+V+urP
UEnxfrrSOz7XYgEAAAAAAAAAAAAAAAAAAHhDvUu9/WNzLQVYIKjRCIVDIQpH
VfFAiVI4HCFlbsUCYI5QqGHXP9Gjr//Z8ze6j/+Uff7zHMoEwOwzFbhOFdVt
FMk4pUlqqy6nlu/deVKF6kp+IuPYn6TOqJfvLJy6GDj/S1m2ArrM42dyiHKX
upquUEVFBTX2zv78NRzopFqWd0VtM4U8teP8JHt91htt+zX9+OOs5bdQmNW+
k0Tubcz00HtUIM/vPFP1lfHcTv/U8C3av1F8vqi4SNSN3095xjmgAzSs5kxc
wMmeXqTa/vOD+Tdedx//IflWXyB7UZg/cuwU9Zg/oA7SLq3er32dE5lSxU4X
APDOJJ3OFzp0MZDZeDnd96ro4xsuzZ91LGWQ6luHMk9HvUt1+zUbts6T/cq0
LkZaG2kwB5Vola62Ftld8TyX95Wuv2Y/U8lE7zti3vHEAaqtP8vz+0EK6z2Z
cY9qdv13nufec3VUuUvMEXvmgaKm3tbZ67NemBl6W+jyihN0N+e5zV/msu9Y
MVv2drz3Mp9nPHJUX2u10T82P9rO+/dpqScqXZCfO3TzWxqq/Bf272V0cx74
+bmyr/OBbOuF5/bPBgt0vHZMe+gtrvctDs7ZRMcf+HiU2DdmPHx3NknWBQBS
Y6j2IK1ac4DuZDoOMFtR6l9Je6q+zIpcWWHsPdqw99OsJDU98Cq3CZ7WSzKs
i4biTfRxDmyMXbrTfW/mdM40M/IeT3/9Wd1OfUFrNfu+6MQsrJGp1LBLrnXJ
zIbO/6ucB83uHNGKdNo6a33WlXt0eqm+Nr1uXswV54q56ju2zJq9VbjfYJ5j
WOnflJyzXQz8L+PZSMNzYs6nTeKUCAWD82O/N1f2dV6Qdb3w1v5ZYYGO1/ZM
8rp78PBn9h+ZkWOhpW+k0ruF7G87rmdZrnRJ1gUAgGCs4de0/NDtrKQlxlOP
9isjRmm7by3dyPr6m326+lwhN3MmRdhM324mgc4kNby4gw5fcd7fUMKD1B+y
X0NTQncc/64h1pd89Py1b4xnU0MfUMm249Qj3ysxd+SqrbPDWN1vyLf5AtWU
/jg2b7wvmau+Mx8Q69lucwyxRrwubs/QmPPNK72Z331u/uGt/bPBwhyvHRh7
n9uGD0L2H2ku+QktzV9quxczJfvV/OhDs6cL4PuHEh6m3t4uam3toogprlaN
DFLtudfp2LFTdKW1nVpr6132nycp0N9LXe2t1BWYiKXdxb7b2sf3KMe6Gqm6
uprq2e+J3cotP+09Y/zvp07RtfaRWJ69vdTe2kQ3WZ5TwZtUXVFLndoamqrQ
SMcZEb+z+RIFQkEmXyB2flFISAOtV+jUsWN0qqKBhpP6+iT1twuZtbMGEwNv
erRfyXWhy9rV2ko9ITbHVUepiaVbzcrZG5yKlTM6TJXFj3AbVd4+RMFAgALB
MJmlHuttpHOsHk6dqxFl9YBbuvqc6Uz/BE30f2zbTu51ZgGzuVo7iLNykxQM
hSgS9RbEPcD3IZZZxsZPj3zA0/3JWac1KZXZ838y5kFRlncoHCFvudu1WTP7
XbYZ09t6+exO2MLvUe9RR205q69TVNXUHbeX49Qm0dAg7ztNTe2sX0ZYGlVU
K7+f2GfVaJgCgSCFWNmCwSCJqp3k6QXjnqXI9G1a68uj64q2H/RzsXbd/7c0
ElrYzGnfITvbGE2yMdnUgyjz45tqhV6HlAhd8vvoATnHsBozlMgodde9wO1j
VZdeR0HqMz3TZIsV2bounPTeqA/LscDbeOPFvibVf3Q0oV5VirDxJBjUfmd1
G9ZSVykcDPK/B0NSWoe+r4RFWiEtnUCsXaKsDDwN+Swb47DXscdMqu0fK9go
k1GUubq+O74PONTHQh2v3Riq+YXjubep7pfIt+ItCjrJOvMFbdTWMzq/85zv
ROAmVVjOEbKrC3ak3WfStJFgYTBQ+VvjfV76+ty0jNfeUdFM/YFeKtvi8xB3
e5fOFz0o0lp0gtuZWNoF9GLpJvIt2c3j9vne4erTRiy4W35jzS/zv284+iHr
Jxe5TXpo74ekqMO0X8aR+vLXUn6eHvfxJH3+/7XQdv8aeU6xgPyFheTP99PF
Htln2XeP+8Vnr3R1sTHoAf65a3JeOxO6zvu4b8mzzG7WU+mWh4yYEnf7lVwX
2pqayM9Hi4tLaTuTddupGqrcL861nbypvUNtkupK1hvtscrvp0L/Klq97ZJM
4x5VbhcylLd2M9t9SMQovf6Zy/zZLd3YnIn/rLRuJ7c6s2Oq+zWe7priXTz2
8wl5jvSxwx86nJ/TUahh/z8m+RzTI+/F9MCl7DzW+OGNVFK0gnyrNtKWtaIM
1wJu44ZVm9UZbXa4uoLryN6KOiqT7f1OQjz7FvZs+eGrbB50jf/b53tWngl0
bpORht8bf/Oz5/q/NZ8tsc8auqqf5bui7eP8ReYnfvZcS/1836e7fPSIPF/T
V/Yf3/M1fDvmtu/Y28Zwko3Jjh6o1Fb2K/5ZzT7VVxwyznrrd+VYjRkDNc9R
Xl6erKONVFi4Rtrch416y2d1w3XfoS6c9F7DdiwgL+NN1LUtLZm4YarXZazf
11Gp31TP/OzssDi74hP7uIPTTn1foebSn8V0hj2/w43YMB0wPbt9552sjMPe
xp7M2l9jauBteT7vCLUyv+88H6ueZqUiF1vIdHf8+gIcr91Q+Nz8Idv4MNE3
L4eZ/I6xX6ntKQgfZx1dae+ihrKnuLxPletxBNnVBVvS6TNKejYSLCymE+IB
+rS7FDZ9ZPrEPdrly6frrv1WoQuavqw4bdhvPbbZ53vVeDbRFn82yjE/Zoc0
HX/kaCz+cUK+91icVVPofKHQ2cvhGRph496ShPOKj1icSW7b/w8UH49+l45r
89IN75EyI+6FiJsvsLTqtnu1X9Z1YZY1tlZxl4744uM7Zwbe4PXTk+BE9JX9
m5DZtFgyI/drvbzz2S5djdicyb6dHOvMIV/zfOyDkIhf0s9zmNvVHnGXoGa3
rgVn2HfFvsainW6+hsakUec+9nlRdFWmV+DhHJ51m5VKP/edoIzHmr7F5zXm
MUEv9zN6HNfEde5vme9EdGqTaf43ls/6j8RdJUsfNsaDxD6r0Xb8p/zZIa4L
KlUyuR87+mla5x9nRi6QOf7NOKOQdN5FoY7qs1RRW0u17L/nqjpkfto7Aquo
gvlk5yoaXM+Zj7VfZp+rptraajrHxrZhKfREfwtVsOcV587RTce4uezIYcdc
9R1nW2xlYzLTgxEtfo63c8ye6PcFPGbSbSv90+dM5jqyeuZWF7Z67zoWeBtv
nNrSlunbYv5kxNHL8cCYn2p5v8Tz1UyKl74/3ix8K/MZsomG/4evd2tpZnMc
9jr2pN3+M18IH2JDzHcT9wP46OXe7zzVx0Idr+1x9hM+Y2XSy+oW+/V56d/R
g57izPSz/M8atruj9EcUH4+VXV2wJcU+k66NBAuLxPjjoUpxx+PmfWXUxHzk
UCRKA2zMdj8bNpnUZ420TXuBiX3LKb8+GcdxRlvnUFXtf9x31mzVU9xHnqQy
v7A1yeLZ9He9H0jbqKpi4OnQ7Dvrp11/Opg0DnC5tb1Pz/GgyXVhyJrwLPH8
laXt0WVmc+Z42Nx3afKcwwonm+baTi51NugwdutpL0+w0c183+JJj3dEMZ9j
X2xNcLnrvoaObIfEs87j5hgv5+9bthnXOfP9hqIdzO2o3R+4ltWfWKNTKBoZ
TPqMlzY52Zu8j259ZuCekJWlV7xlJS3eetVj3FhymU/4tD3zT/net7Yv3nH+
V7bjTDR0Q65dfkihsF6Qe3ysWLTzAnUFxl3lUJW7VLdLrHN1BseNth3gtuFp
utI+kBy7kQM57JirvuNsi61sjChzenogx/ekOxyS7aiV/lnVUdIzD3Vhp/fu
Y4G38SbduH5hr/T5q+gjYt9VrDl0v/hTer5Rrgd46Pva+jZf3zXsiHY2+EE6
I2MWszkOext70m//ce7TJfhO3W9S/qot1BKa8VgfC3O8dkpTK8+jZ5PHmJkh
zec9YPhHbjrZV/bPhh/qjEJ1+x6lldve5Z9VFIWGmg/G+dvZ1gUnPPeZDGwk
WFgkjR3qYNzeF9+/PnzVwz1CDv6G07jkkJ8ex8H36P1+8vsLaa0WN5WXRzvK
xXkA7s9vsxpT7ezXLXkfRAEVavu22r564RqRz5pdVHXsZ7xP6GvxtnKnWBd2
z6xteUI+U0Lm5Pmx3ZwjGU9zJrt2cqmzHofM9bSfKo8/Z6G37Tse90tn5Llv
PhfxfI5A9zeeljELEt2+WeqNxfct2uwBD2PlRKCFSrU4Lp+I30ics3tpk3cs
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
oYxi/wEAIBWUUCe1WN4/Zc1Yewt8UQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABgXqJSJBymUDhCeF06AAAA8D1D+YK25/nI5/PRip0fYqyfNyhUV/IT
3i4+35PUGdWfT1JbdTm19E/MpXDzgqnAdaqobqPIXAuSIdND71GBT/TBZ6q+
mmtxZhmV+qoPUZ5W/lUbqXijqIeWcKbp2vUfZ0a6Gqm6oppq61spEJ62/Ew0
2EP11RVM9xrYZ2YyFXSeAfsCAAD3GyOtjTSoZDFBZZDqW4eSH4dv0S7N51hx
YsHP3b5XqHepbr82Z1pnzJem+14Vc6gNlyibqjHn2OimPZN0Ol/MTS8GrOeF
C4nx3svc53jk6OfZTzzlup09Rup+w9vwZPuYfPAG//2R1/+ceeIW/ceeu3S+
UPgmx04do43S/9tRbpZDobZjj/Pn207VUOX+R/m/z3T+NXNZZxsbnfje2hcA
AAC2NBRvoo+z6QCMvUcb9n5q8QeFLvg1f+M0eVwGBLPE9IA2/hfE5ktsnlDq
X0l7qr6cU7myjq1u2jNUe5BWrTlAd74XSsv6YH6O/I006nZ2kD7jhvdi+6oT
N2jL0nw6efPbrOSQ1H9sGKn893g56B6d3yJ8jjP9U/zJWMPv+O+vtMRkayv9
EXv2NN1ZaBvDdjrxfbUvAAAAbBil7b61dCOLi0xjDb+m5YduW/xlEv7GPGWq
z9t8aaFjr5v3C2LunQt/Y/7WrfSxsrGXYYO3/qPSu3xvYx11mtZ3Jjr+IPZa
eJvo+2nP0qDJt9D3A56/9k2OSpAb5q9OAADAAkEZpdbacjp17BRV13cnz5+j
o9RUfZaOyb/HhpdJCvT2UldrK/WEZtgQpH2umqprm9nvYn3r/2fv3b+qus79
//2XtKffftLEG/54enqMUX/4tjmJwfxw2sSgo40JZnx6VJLRasDRqsEkStp4
S7QkjZcoaMQkglFMoyiQCkQgAonQAAH6ZdPhtmzqpmNsOhZnPN95W2uvtfe6
bvYF5P0aYw/Ya6/LvDzzmc+c85nPomg/1atjty2+vfLaVnbt7cg0afy82lQf
4HhkiLq7O6jp6lXqUsfjkX7q7uDHWimi+jEtNkTVJctEP3aqdZCGBwZoYDhi
mnuLU1/TeZbHA/SHqss05GWLanEaaXtP+kg/f5oGwsM00DtAkZh+RzXeWH2C
Ytodle966h6eTL1V5DbVHjtCB/7wB7rUOuLxYBMe9TLWfYWOsXv+4dg5ah82
+w7rZXuVWgYmaHK4hWqqatU5br95lxWvJ5EXlqbzTa0sffXCfy0W5nXCvrf2
sTLXaLD1CtXU1FJTx6C9j4GjTKk65/dq6hHXjnH/cFa+9ey7fbXdo95Wec6V
7jGa6PujyV5i+e1lMtraRB0DE8b59nJrX39c3q4K2WyjcCxGg00nqaS4hE51
3LVNjVMeqtgzrrLy0UVosOmSSDM/llJG2ji1qbo/e9VaPu6y6Vy/Rltq6qCo
SkOMHRseHqYwu8fwwLAoX37eAD/GPsMRt4birw3rsnGVtdeoFmX5Oku1yXly
kQfLaeHboi64PgnHo3SatcEfqPGGX12RqCSb9uXZ7lPRWNoHBngZhkVZxjSN
orw8h/n3AVWGGkV4efJPWM9dUJ0Uo/BAO1UwG37Byx+KOhoY6KUOLmcsz7eN
PGey/TgRF2Uv1zL+ZRyd6pO+XY+r8YahI82XTtzw7QfnrTtl2mtZ2i91yN+H
Wd5H48HlYWKghars9KlXe0vRLwm8dLQfHeSkc+WP4yIt9/nUCgDgPmCy74zU
o8+8wWzDVjr+YkisdQ+p3yd63pf7onedpo7uVjqo/HVbxJ6/UTqo+pyFJRVi
D/WWP9RRdbncc7inpkr49O6qqqPK4gfFsQ90v3FtSPSboZD+WUX7mX1a+eIP
pA/webk23Xfu18Y5r7dIn9++6v8xrmlRNmVd6dPGeSsKC6mocAWt3nJa2RBD
Kp3r6Tzra6pLfiCuvTTs7MM+ffc6vVj4hCwbdm5hUREVriykk13/VGeovlQ9
05xvs1/DWMOb4tja/Z+yvuWkuN9Duz719PN1r5dxqn5Rzi2eaupk9tvr4hlP
H/lCjq9Yfsv1sl25hlYW6OlcT12Tw86/xd3LamrwjKybqgbqHeimSuE7sVTU
wUj9a6a6DNEjzx9iNsB+mYdFVv8dd5my1u/eiufY9duZDXuU1vBjq9+hO+Z6
Cl+XfuOLXmI2Yz1VbHxIXav7n9+h40r2QgsOqX7ZTm7P2dbfYO0OWX8Hqul4
2TJ17+10kOf94TOO9eiaB1an1RWPsby8QbW1+2QZbbmQuJfWTxvZsYf3XGC2
0SXxP58j7or5kE2Xuq89scmon30dvC3F6fIr/2Wqtxeonx0dOffzxDGWxn4n
U9tnGx65/FvjnELWLvX/H1Nz9F7yoB5GzZXPGvsA6qvUfmlxH2m3+tMV7u1r
wLPd28Ds53VGGSxleq+OKky6Qe5nH6IXjXO2M3sxuE4SbbNI3aNgFRXxtPHP
KnnsQTX3ntn245IcPs4atm5SH6z+hbh+wyme53tUWSj3uJmfSXf/JMr3cY/x
hpfu5GnfqNJ6jPU1vB2v3XuQjWUK6HosmDwMCpl/ks63dtDlyg0qD1I+3fsC
O/3C8dDRPnWQm87l9FT+RKZ13sVMAADMKaa/lvp67WlDTw5W/79Cf73ZzXTp
5E3RRy3b/4XpIo0ul3Gd9zvVh8TVnkFmw7TrffIdww75YFjZDFP6vcx9jNoD
kRQLpa3yZ2T2AdbX36WNRKZj1jm4aTG3toq6kuyj5vLvCb2f6F/u0EHlA+1u
92suvguJ8cZrpny/wfv9Paq8WD9VkFR+E22/J8/9uh71IvsYlh/TJPD02Cfi
9x2Gn3SiXj5mdtsI63sXPfNOSp0l/+ZWVu0Hf0ih5/5kSug4lYVWir6do89t
Pn3EVMe6LabnxZdM8fr9o7IL3jLKYKL5VaudwOzyshQbSqO6F5PtJbu9NvZy
a6k/ZhOUWb6P06El7JrnPmRXxynqMuftngdeHp8Ya296ferpnVTyvkn3N5m4
LuaDH7PIoZtsOtevXVvicips0UfeEOdMD74v0tMY9rOn3GcbVrIRevpPst6W
LJY2lU950PdI7zONBaeVLWa2W33pCi+951q2DkzdknK+7bqRByGHJht0quf3
QhZ4s82sTpJyucxSDplsP/7LQB8byzFqnM4Vh5Lyyaq8c7dMG2uPjlvtvHQn
S/uL6lm3jQKT7dcuVoR735Hw+xpVR9rEHhN2n8QkgGt7S9YvQXW0kw7q8dC5
Y2osf3gu7r8HAMwb7irbR5/74Ux0/pFWrtjIbI1p6qv+qZhLuRietr1O6kh9
Dstsy9mto7MxyJLk8YZ+7ftJ6+3SvlqgYs1O2vQZdj7Gtn7Huh2gbAtNk1Ze
G9fjSX7Fqbj5h9vt37hn2b/ac/yn0uYS884aiUcrXwK3+SjXehn8UuaHlY0V
Wb6J9KiyXW23v8ThN4+yunZKzi8//0olXW3toHA0Rn31Z421C72eDndb54Jl
3y3lyJ9Mmeq8PXGv5PrVfcXN5STO6/x9ij1hV1e2cmuu78kbSXZ+Yr7WT0gC
5zxYy+iusgMNG2nwI2aDr1Lzp3GKRftt246bbDrVvV1b4kx0vi2Oryh+UcwP
fzzsN2ZpsDacLBv+5EHZ4guSyz21DPzoCi+9l+6+kIby/8dk696jQ2q9Qy/L
zr2P0tYrf8+CTnIph4y0Hz/oY4tVdMVUl9MjH6kxodpnHVdjvZB7LHEv3amn
PXkPiByXpo7d3fuOONW98hg9suVD6U8Yj9Ngw2tJayAB+gK9fv3qaBcdpK8X
OelcAACYC3QefFSuQTjMtRvzrkkTblYdbm/Lcd38A0/7yGHPtT53pey6mY03
5PwpPy78D7ivVdET0rZ6oszwUbEn+HjDfH6PmuNdUbiOithzCwuLaA33byko
SIoZacW1XtR88GMp82zJ6VFzdlsu2PTpDr95lVV0wOInInwd9lwwbEAnW3bw
3C+N4/5kyl+dd4p7pdqqqXLgMDb0qD++vlFeoK9ncJS9wL77Ca3jlocWD7md
GGikiuLlSn4KU+bxvWTTqe6d6ojTc1zaNsHs7GBtOFmmfcmDkvkFKfZpeuMN
L72X7nhDf/aORvbsu59QARu3FRhtlceyWCd9FjOuk9IsB9/txxs5VrL3B5vs
vUjrDL++pXSktkbY427l66U79To07x3hJK9d+O07+LpBc9Xr6p0uq5SP2pMp
ayC++oIAOtpTB2n9rjoXAADmAj1JPg/JyP5oFTUmKTd9rd5rvOE9H+tlq7zj
ON6w86eS5yVsl5H6s9T+13YH3e8HPc1fGemqOtvjknZrHmWfmGpLeeFaL6ov
e3jPF0k/JNITtUmLfb6SfnPsJyWDV8/T7dg0RQa6qImVbVnhIs8xAmfENN7w
J1P+7ASjnJJ86+38JdIbbxB9US77+MVFG6W9E3qBrrj52JtId5ys73dYvuuC
2tOq0Wlj/K5RXDOn1V42nerebbwhbUZpbyXboM4EacOpbcGXPDD7XK4HJO07
Tl6Pcshfsjx46T33snVjSPonbfmQmtkzdjb9VfpNLThEA31/pEd0vxiPduZO
5sYb/tuPO3KN6km1NsSI3aarNnu7tXhcjNunlW+d2xqvl+7U0568XuZnvJGS
P77nqUDK/fluGQNievBd4xye7kB9QQAd7aWDvHQuAADMBXSf6uT38/K+ftup
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
ECTfE51vG+XMy3cg2i/WlQ73/iv9bPsi02UzShVLQrSl/HmRl8Pd/xRHpX9W
Is962byYVDaD534u5EjY7lNyPSG0wNx2xumdlSGjrHZe+pa129+Ke+R3vLGK
rkSynAAAAAAAzGl0e2/D2b+oI3eovIDZNKsTdlhD6felDdWu7I3JG2Lu/01m
U00JW0T3qbinbKLt7LtGpwvlnlJHe4jdZ1UoZLI3PT7MnrUfu7jbjq5pcGDm
eR5i9vYSusHGJ19VfMfit9NX/VP3eeFZWy7Oeeo5/lP1PUi+79Eh7qdztY8i
4dtUV/mozM/+LxxTIHygApSN85gus2UzUsfGCztvEU3fFHJi+B5N3hT7HKSt
rsqG3fjLiu+ayiZO1UU8Lfp3NZ41pW2yczeFFr5BA5EI9bael2lknxanDdsZ
kyG38cbP5P763skAJQUAAACA+cWoHFswO8fwwVb7QBP+JKn7GPR9ttz+6Nz7
lMm2kjbO00fl2EWLxyju6jOkUZTZT9Fo1OfHyQL0th2DrbFkIM+T1+j5bdfY
hXLu/6Fd15SvTLJtOYfKJSlPC7ZdM/x/pnp+z+73EWmT1wPkm+czZvzfUP4j
Wrj5gqudz+OGRfyWSyTqIn+ZLZu2vZvoIstYn5jzX0oXw3pMszgbjy6kkwNT
qeX38qeybKa/FmtBy0zjLF6ey7f9OZHvOMuPXjBjnzGZW0UfDLj5nGVKhnyM
N7r+GaCkAAAAADCf0O0I3VbmTPW9a7Ut1D6GrZf+Zpwz0fyqrf0x0fl7cfxk
1n1hkvHwjdkV0Dcmg3kW/jPs9w/0mLop47lskuFyUaTkiXj5/IYeN+UpWL7H
6XiRtL9zFxYqG2Wjxu/PfUKJYc4dKl9cRO2mjE20vWopG93PzPyel5Fzv6RN
Z/+a8oSJnj+K8czHw7l7Twj8qQAAAACQLoYd0Z6Yn+w7Ln1e2pkRFotE6R/C
nl5qsSlkXJrU91JIX5fEvg+K36GI26boeD8dLNlCpaWlPj4ltGWPkz3qZDum
Z9tPZjDP8veX1L4Pm/GcHbO0XKx5ssYJ/rT4AeFrFjzfQ2Lfw9NHEmnhcuck
NYO1+6i4xE+5lFJJcQl97LgGkIWyUWtdm86bxgljH9Hih617LPSy6VeZHKz+
hbDbE35mGn1Y9DCdHP5fy+3H+H6N0Hpq1xeItHGKOrWvjMlQQk8c7rauY/Qc
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
1vqFX4Ftv8JsIr5+sq2mjbqbLlFtfRtFZ+a45Zux7itUU1VDjQOTPJHUJ57f
RP3RJD/a6a/FHOW+9tz4RUs7KZQy79dT+RNhP6Uzh3mX5ZXnbch07VjHFbrS
MZZyLj/Ozx1VFaixOu0KyzIZPPdzlobf2fqHBHlGVogPMVmspcZu/Xka9bZ2
W/3nc1yX3JapLOT7n96x7nWZuklrWDqW7U9jX7M2mpRPdTg2SsPhSeO7Y115
tDm7euRlGR4YpliO2iYnFr4tdAtPny6LtnkX9X41cY7OfdpuU+rCTb/OENs6
UPjWny6kNd5wkf8Bk/wb6XTRZzp9x3/K7P93c7QfLQs6AQAA5jSjVLEyJPpQ
7o9cVb1T/L9N9626K+dj9tTUUTk/r3Ad+76GKsrkNW+qfYtTfe86+lKPNbwq
78/9WI9VUwXXw6HdNJRVu0ajZj7nuPoQ1VZvE2krXreQVpdWqLQk9ztq/itH
/YC73bKKrgRca7rb/BsKrXhJ+pIvf1/mbeqW6NuS59gmOt826oPXw0C0X8yF
H+79F3Ef8dOsfh7a9fmMnpEdxkUd6WnfeelbGuFrcywtVjMpt3UpfJpcbIuH
96SWpTusTS4JUUn5WpHPxN5gWTe8rGOm73Z15dbmbOuREj4nyXP32WGc6kr/
UzxvT9VlOlcREm309rTM+5by5y15l34oIXotxS/nPmy3pO/JSeTXTb+mj0Md
CL0cVH86E3y8YS8Dhv9c6K0A+iyBsRaWkwFHpnUCAADMcdQ8KI9to+vwtop/
U3oyRu8wvb9Vrf1Odv5e6PStV1jfMfKu+P+k0um6b7GdLhfrJ1z/t6s+Z/KG
eOabWYyxMiXSo/s33FN26nb2XZM229rTKTFlvqz4Lj34+i3X+4o18lDI9yfV
PpI42y0/k3sKe1Pn8JwZYvbKErrB7ISvKr5jsf17xJyeeSxwjw5xm/JqH0XC
t6mu8lGZ1v1fGL/b229BnpEdJjt3U2jhGzQQiVBv63k5zmGfFpsH57IuvWwL
O1lzY6Tu5xTaydI+fVO0E8P+V/sElnnWlXOb29d927EeB6t/IfcHZH3geI/O
FYcs9nlf5b+L9J7/4Fn7vE/elOsYNnXgWdcqppPvujbGcza3ylG77av+qWW9
xE2/podzHfBnpqM/neDjjdcCrD85yv/012Jc9rBlr5KXPjMh5MBj/0vGZCWz
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
bZwGBsKkq59BphNaBias1+RJZ9k9e6zjCl3pGHO+KKN46yua/lqsLexrz80e
LCdZ76n8iRj3zKr1UgDuQ8YaXpXrntxX9lg1VQh/3t00JPRhnE6z7w/t+tz+
Ym2IDorzX6CqmiPCtuf32XDqL+Lnu82/odCKl6SP5PL3Db0jfWRD9FoA/6h0
xhvuecsufvpxY34nJ3rOQf+rfvzhPQ517MZdOee4p6aOyleyexeuY9/XUEWZ
LPM31V7eKTGH6uyrO9Lwmjh/7YFqqix7QNXZC3Rb1VPG5CitvlujZj7/tfoQ
1VZvE/koXreQVpdWqHTmzg7z6r/nvDwJxsV8ut5ud176lsnHb0W9c9PQWZZG
qWJJiLaUPy/9g/R95Gp8ovvIiLlzw8aR15SUr7Veo/Qen2P3XZRpjzfc85tt
7n89ZS8X0j/LrDuc+zpd/7yYpH/k+GSptFOn5Ny5Pi7Lp86yffbULVF+Tvsp
Mo+P8Ya+djaTuYkAuI83VtGVSE6SAcC8paH0+1b/XabfCgxb0U0fjMt5qNBL
dFt1jHd5Pynuxa8dYvpuCd1gNuNXFd+x6Lm+6p8Gnk/g443XAs6DuOctu/jp
x2WMHQ8/dBWHJ+T342gjuffjfM9cMPuGyQbrx7cq/4bJzt+L52+9wvI7In00
Tvb+y1QWq2ztlYnOt+UY9exf1JE7VF5g9vvNoBxNsb57eQAbkl8i0q6vtd9T
tuF29l2TNmngcksXH/33nJYnlbzO3RRa+AYNRCLU23pe3ot9WlSlO8nSSB2z
/XbeEnVcYPKZmOp73xKfbnrsM5F/3i6Na6ZvWq7RfbqX7Q/gx5+GbPnJb7a5
3/WUYx1P3pRz60a+nfo6pX/YQ7+s+K5J/6iYBcv172peQqQ7nzrL+dk9Yp1q
No03ZJk++Pot5xMyJldu442fiePv9QZYzwQABCR1f4O+V0+2SamD7fZS6WOL
103+tBZdOnmNnt92jd1Qzqs8tOuaWndO1tNJaOPU29FB3d3dxqe3t5eqN/K+
4BoN9Habfuugjt4xsl+u8MpbMuPU3dpKrT4+Ta3dnn5ZvvpxNSfmHtNToyiz
RaLRqM+PU2/s3Y8HspUmZT+o12GbmDfW93NqFIsl0qHPj6bu9RyVYwt2H8N3
1rD1VL+fphzFhm9TR4dZVnqZPXdSpOMK+98sX91M3oZi9vthO/c+ZbJRZN/3
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
r9lJVJaZHvlI9GOvm9Yi+o7/mB1bT13x9O45a2TSD3Ndbud6+mdANmR3rrfn
tHTYLGKupz9TZEW2AQAgbUZpN5+L2/xpvhMi7J7ChW/MaR+Ezr2P0o6APkBj
Db8V/cLFSJYSlWU6D/6QQguSfEcmrtMqlqcdjX9P446zSCb9MNfldq6nfwZk
Xnbvg/achg6bTcz19GeKbMg2AAA4o9FwdyPV1NRQe3iKfY2TZWpj7BMxF7et
po26my5RbX0bRU1OAHe7r7BjTTQUs94zPDBMsWRngfgQXa2tpcbuMeO83tZu
8j2Vwu2eZP3oEy06RE31Z6nmUo94Xjxu78kQC99maawR+Rw1Jyw+Ko7X1LbJ
ed7IbaqtqaWmjhH/6af0+rqG0u9TaNF2au3toHr2zJYBm/VuLcbK8gqrR1a+
vWPG4UD1kxXuUWUh91VPmh+fuklrmFwt2/9l8FumIZNjHVfoSseY9TbsvJqq
GmocmCReJn3iXk3UH03yYc6j3HJsZVIbTUqTns6r7ufww7FRGg5P+k/ATNLv
IJccP+WfX/nNguySe3v2nV+Huo2F+ymsnxjrp3reNpKez9sCf4YuJxrTZV1h
/377M7HXfcsySTkdsJPTGbbHGY03AujZZJ0jzqltttatNk4DA2HDr26QtQFb
/Z5xsiPbAABgizZEB7nOCb1AVTVHhA3H5902nPqLccpYw6vimPDxPFZNFeL8
3TTEFOTd5t9QaMVL0hd5+fuG3poeOZOyTks0Tu+sDBn32nnpWxrh83zsumzb
bSMNr4lnrj1QTZVlD6g0vEC3LfbKONWV/qf4bU/VZTpXERJ7ksU5d+Wcz56a
OirneShcx76voYoymZc3u//pOy3B+7pRqtDL7YndVFW9U/y/zeSLMdF3RqQv
9MwbVH/1rKzHo38JWD/Z4h6dcOnXHt7zeeA7BpbJqVviWYm5PI2aK/6DQqsP
UW31NlHPxesW0urSCnXfd01pzZ/cOsrkNJOJJSHaUv68+O2wkj/pCxGi14Sv
iDynpHyt5RxmrNHpQlkWvv2j0ky/k1z6LX8n+Z0afN+Uz2ySedl1a8/+26t9
/ZPWL659cM8X4quYv+YxFdoT+mmi821DlnmbGYj2i7XCw73/8p2D9Oz1YLLM
ZeTDIn7OW0lyN/P2mO54I5CeTdI5+jkvJtXt4Lmfi3Jo4QeYXIn7L3g3B76L
2ZBtAACwY1zOb4ReottKUd9V6/yHTf2TmIsTx5R+ZrYH17P7um8z/bqEbjAb
76uK71jWZQerefygVdRi6igmO3dTaOEbNBCJUG/reamL2acliBEzxeye5QHs
JEr0rxvO6mOoO1TOY8OsNuvZe3SuOCTSfEX5OPRV/rtMXyxG77D+cKtaX57s
/L04vvUKK4+Rd8X/JwP21a+1+x+f6HP5odUnjPJtq/g3o5+Y6pO2l9E/TN+S
fdauukD1k5JOZav4/Tjbfu79Wmjt6UDrQ5x0ZLLn+E+N71M9bwlb645Kn7Rf
trPvmrTFTWnKl9y6yeT5D56l0M5brK5vinwbdujkTVrHy4HVxUjdz+3PYXbQ
OjF/+UVW0+8olztv+iz/Ice67KtmdRl6UtpodjB5WBVAdp3HXpmXXcf2/Mge
ejZU4Ku9GnU7dcNSt3qZ6zHbpsc+E+WQ2Ktwjw7x86/2USR8m+oqH5X5DyIL
lIYOS0eWp78W9vvDe6xpy0R7DJ7+9PRsQucoWWbC8mXFd03nxKm6yBynTI3D
k+XNnPZZrJcBAMAOfWzxuslPM7UfT/WT1/eY7Wu+SM9vuyb0LtdPC17+VK0J
Kx2aNB+qxaMU1RWY6AdX0QcDzmv4seHb1NHRTd3d+qeX9S8nRfqusP8Tx9mn
o4OGYnZxikbl2ILp8zv6IcPeSqwX25XFyNXD9PL+OopMSlvLsA2Evtf302kU
izloZW2celm6zOns7e2l6o382ddooNectw7q6B2zjVWj+3p/HDZuTHUv6v2E
nBvk/a+RP22IKktL6XxrbaD6SUl+LEqRKKszP59IlBzc08hPvxbMDg8gk+x/
PVlTPWycuPYj8b1z71MmG13apk8fleNRLR6z5CU/cusuk5f3bqaLUW6z/UTM
jV4M6/eIM9t9IZ1k6Wvbu8n2nKk+OUZ22i+bqXbnKJfdd/2V/+Q1S10+tOua
VX5dY8lqTCYj/mRXfJwsq0zLrkt7XraVfu6zvTrVbeo8QpwqVzxBjdHEs6KR
mPF/Q/mPaOHmC852ZYZ0mD9Z/plVTtUaVvIabKD2mKH0u8pzsp610zmT1+11
sRpTmcf+/Jrl2/7sVCOzWC8DAIAdSteEXjDFobiX2o+rubitl/5mXDnR/KrF
XhHrxOz7B3pcUod5KeP6nj+KfuXjYXd/4R71joWCggLLhz8r9dhSeq8rdb5q
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
sR2Nf0/jjjmSTz+kWbdjDb8V9uvFSFZSlXE69z5KO+ai71qGyLwMzy7mZf3O
c72cwuRNIc+vJ8lBW8V/MF21m+7kKVkAgLmNFh2ipvqzVHOpR/hnxuMmr46x
T8Tc67aaNupuukS19W0UNf18t/sKO9ZEQ5aJIY3CA8MUC+IcwvV9ch/uPwc0
3N1INTU11B6eYl/jtn6msfBtulpbI/Iwqp+gjbJjtdTYPZY4MT7Ejl1NnKMY
Y3mtqaqhxoFJ8cw+UR5N1B8N4Ls9k3xqMeptZWmoYentTaQ3SB1kJA9pc48q
C/k+haR5xKmbtIbJ2LL9Xwa/ZYbkMyNynGbdNpR+n0KLtlNrbwfVs7ptGTD5
5fiVz/iokO2a2jZZtpHbVMvu1dQxktIWxjpkXvXrNXZuV9h//adlj9rlgx+O
jdJAeNLXecPm8ziiHMznaqx9dGfZxzwLMmzCt44in2XnoMvcmNF4I4CO4nJ4
pSPpnNpmaxvUxmlgIGz4GQ6yNm5pH5wAsu9Imm03kH5JK2/5kHFWHD1vyT1x
SetcPZU/YcefpBYsBAEAAjLS8JrQK2sPVFNl2QPi/1DoBbqtlOBYw6vqWIh2
HaumCt7XhnbTEPv9bvNvKLTiJenXufx9o/+dHjmT4m/gSbp2uDZEBwtlmqtq
jgjbkz97w6m/mE4ap7rS/xTH91RdpnMVIbHH+Pb0KFUsCdGW8ufFb4e7/ynO
lr4RIXrN0LUaNfN5ndWHqLZ6m7i2eN1CWl1aocrmXf/r8Gnmc6LvjJhvCj3z
BtVfPSvzefQvAeogg3lIm3t0wsVWe3jP54HvmAn5dDpvavD9JDnwIK26ZTK4
Uqaf+0lXVe8U/28TvlU+5fOunFvfU1NH5fxehevY9zVUUSbv+6a6jjPR+bZR
XrycBqL9Yn3ocO+/fKc4uD1qnw8ukx8W8XS8pcpMnldSvjbpvDidLpS+HQm5
Gad39HJjn52XvmW67Lei/rI93si0DEuC6SinsvPWZd6kO94IpKOmbony0teJ
9HNeTGqDg+d+LspB2LdTcs49tMCkqwLIvitptN2g+iVw3vIm417jjVV0ZY6s
xQIAZge67bHhrG6b36FyHidndaIvFXOvvP9qV3qH6WXej+zrvs307BK6wey6
ryq+Y/EvGKz+hdBJLUGU9xTT98sPBbR5x+VcY+gluq0U8F3lm3K4Xe9n7tG5
4pBFR/ZV/rs45/wHz1Jo5y3WQdwUeTJs88mbwk9V17VTQvfqa8j3VB+wnX3X
pB209rR//Z9GPqf6pN1r2DLTt2TftKvOdx3MJA/CfyQU8v1xtm3cbbVA5aiY
uXwOOZ7XV/3TYHN56ciwWp8JrT5hPLet4t9EGd2u+7kP+WR1yezMrcqPZ7Lz
96I8tl5hv428K/4/aYwl7tEhfp+rfRQJ36a6ykdlne3/IkiKhT36WrtPO44x
4pSP6a+Frfbwni/cz1N+48tM6Zzs3E2hhW/QQCRCva3npfywj6POYXKxKoAM
W8c2ZjIvw2npKL9ll6TL/BC0fjnp6Kie4z9V31UbZAX3ZcV3TefEqbrIHLdN
zZkYZR9E9r0yELTtOusNW/0SOG9pyDhlTlc7jzd+JmMj9E7aXgcAAKmMyrEF
03eGL6bRr39pnJPsG6/vldzXfJGe33ZN9CtcDy54+VO1Lqz0qMtcUWz4NnV0
dFN3t/7pZfr0pLDtrrD/E8fZp6ODhmL2cYf0scXrJp/pZBvR7pyRq4fp5f11
dHnvZroY5X37T8Q808Ww/pw4s8cX0skB6WPSufcpU/8t7Zanj8oxmhaPUdzB
3yYz+ZTzlrzfMepJG6LK0lI631rruw7SzYP4PRalSDRKUT+fSNTlXt62WrDx
Zgbkc/Ka5byHdl2znucQozZTMqzv3fg4rB/RqO5FWUYNfuRzUtpJxlhF2Bv6
vmWNYjGz9aux+okZ/zeU/4gWbr7gbB9r49TL0m7OS29vL1Vv5DriGg30mvPf
QR29Y7bxtdr2blL5+JklH/r6kS6XifOs+Z3qezfF9tHiTNb0hI99xuR5FX0w
4OYTxvMe8SfD4uNUKpmWYb86Kr2yS9Zl1iLJTP0G0lHbrhn3mOph44O1H5E2
ed2+raoxlXmcya9Zvu3P8ksg2U+QkbabpDf86hffeaN0ZDxzutpzvNEVbDwK
AJi/6PpEtzk5Kf26mnvdeulvxjkTza9azhFrxez7B3os0qR5Nzt61DsTCgoK
LB9+n9RjSx10m+r3Qy+YYsLcS7IR7c5JRo27nvvE1JfeofLFRdRuc82EmkPz
M2+WiXza1VMyQesgSB4yi4cvyq6AvigZlM+U81LG3lYyI8OaWp8xx9a6I/2r
DBkOIp/jdHClnzn2cTpeJG0f1/OMd4NY8yN9FpPzzp97wsXWviNtUlM+7NdB
1RjSdF7fced1pomeP4q0fDycq/dfZFiGfeko/2UXRJdlqn7T0lHE2+pv6HFT
+5poe9Vyjj6mMr9XZ+TcL2nTWbs4bn5lP1Nt1yFfDvplJnnLvYzDnwoAkDkM
fWJaN9f79XbWqcQiUfqHsEuXWnSLjE+ReNeBXL99SfjLc6Z1Pcr1VCzqf6/t
9M2A69k2+zYtNuI9isQm7G0DS0HIuf5N5016fuwjWvywvY+szG9ifwvF77Dn
BNgYHzCfdvVknyb/dRA0D4O1+6i4pJRKS70/JcUl9LHjHJyTreZu2zsxmUH5
TD7Pbk7dkzRkmPu1PWS2UVWcI+NdHEHkU51r3rsUDUeS5qSHhO369JFEWfO2
HiS0w1dp+Nuk5iMufYjEuMq07mJznpxDeCdlnUmuDa2ndv0HbZyiTnIc76eD
JVt8yXBpaQlt2eM0FsusDDvez0zaZUeuusyJoPXrX0dZY1Z/WvyAZX+F3gb7
VRUaYyqjYPielYfp5PD/2iTCj+y7ELjtWtPsV78EzVsgGafM6Wq9Tg8n7X/p
cRn7AwCAHVKfmOfHVL+3+gTrm76hdQt305Cw5+T4QzAlfYFDz32o9LjaB2Ca
U5J74FZRu6bRhaLHxRq/vwQFjUcon/3gHvN69FvKt/RfNFL937T16nDKOTpt
x45SV4zbrG8b1+hcKP6BZZ/1cHcLtQ9zf1U1z2jK7wVmC+0IYnsFzKe0qVel
6ve71+mI2Hfjpw6mZ5SHsY5LdKyqSsT/8vpUHauSMcIckPNjprEOJeb6jFii
Im7LsKeNNJkx+Uw9z21O3TlB6cmw2UaV/XnI8Jvwkk8tNkStTR3CTtLXdox1
qzG+b/WthA2l9Ys9q0+d+ta4lxxX/S7QPtl09hNPmtqm5BvlT/KVSOdy7nNi
d960vR0v9iswO6zfkCO5p9wxXdoo1TMZrvIhwzU17LzznY62qi8ZZkSHB2jY
0S9LJ1WP6Rg6ym/ZeeoyfwSt33R0lJBNi8+tOufxM8Y5Mu6waf/0BH9PTSIW
ayDZ98xEOvFwA+qXAHnjBJZxyqCuVut11rgrapxr8Zvzp6sBAPMXff5W9xvv
FH2otEX4PrUFm68bcTY+EzpT6Rqm/yxjlJUm//mJ63ItnsfgYPpqZWg7jfpN
UOD4ICpmjfHsG2o/3XpmB0TpUGgFXYxMy3cWMT2eSMc41ZX9H2N/7vTYR5Z5
nLGGX1njf6j9xw8c+YaVmez3ddtH+iUFjEUeMJ96+nZeMfkM9Z0RaZJ7pL3r
IJzpPMyA6bFPxPPNc7DyfX2Jub8eFVPnaY/3SmVOPpPOi9xQMWdS59RdSUOG
RYwh5bOt77l97EjC9vSSz86D3xH2TVc8JvbOJuy+cTrE99IachNntqe+T3QV
bTlQTfW1R9J6z2A64w19LkDXN2JPPM9X7z+ph9lem5RPnH7eRf28Pzybss40
NXiG9P2uK54po1P19VTJ97zk6J2PfmTYiL/k+Q5AzVNH+S07T13mk6D1662j
VB5X6/5Y0mfOOneu5FNvP9Nfq/LbnWijSba2f9n3QVqx5fzql+B5y7eMC1/P
sqTnqfxtOJuYr/CrqwEA85k4NVT8l/BHWVkQouUvn6C6yg2GPSL3G2rUfPBR
Q++FHtlO7RHr3jnpWxqixYWF4roDx/YYMWm3BbFj0tD30yMXxRr6kpUrxbOP
1tdIO1H4Uat9idFbVC78o5+k4uInxG9r918z9cHjVF2yTBwvWrdI2AwW+0DN
CQvf3sUvUO3VU+KZK4oKxRxnS8R+H3Am89lXu0M8/4niYipcJW2YS6Z1cM86
yHQeZshY85siLTwWb/nGBSLNl0y+yWOX5f7ZB1+/5XGnzMnnVN8Zdd46436P
B/WNSUeG71434s6INJ36Mmle3V0+R+p+Ka9duYTJ9QU6J2KqPklrCrjPVFI8
J7F2aY0hvHb/54F8qTjpxUsdF/uQub7hMvzIloN0cONDMh2LdptsKDZuLHlA
nFe0Ri+X9aa583vCljzcxeexTbGE2TmN4dzJsZcMc781sZfCbt4/GT86ylfZ
eegyn6RTv9466n3pJ7hiXYrfk84U0+eiLaxcI9+pU3WOynj9Llkj5Dk51rBf
2fdFunHK/eqXQHmbHTLOny1jza+nvQd2iXQ/tMvqZ+hfVwMA5jvxaIQipjV/
/j3ZP1Se49JpajGKRCKGryo/PxwJ6OA5eU2sJwd//0ZcPNuIsyG+p/qjx9g5
4TBLo0P/K9LMfrf/WRPX6/nTYm7nepBuPuOsjMNhljeHcvWsgwzmIQPEI/3U
2tRETU2tFLbL0t1P6Pmd/vbezlQ+J4dbqLa+k8lGnKLsPvo7aQLHfJyhDDvJ
ppFmh/ricWwiprhTQk6SfbyTYpDFeRwbtwe68EX592hrY3rvg4tZ6iou0ppI
6j3qrD9P7eFJlt8oxWL90tZK2gNsjTsUl3F20krNzPCUYUbDK5vV+ps3XjrK
vexM6XLVZd6kXb9eOoqnORK29DepyDhiCdmMu97Tl+z7Id22Kx7rt//zn7fZ
IuP82QMdrUzGm6i1d8z+lAC6GgAA8o52hzo6BgPPtc455ks+ZwjfP/GUad0+
e+jvIuE+1/z7EJWFzL4fAZgndXu3t536o5mfZ9X3KYh9CYyRy7+2+AfNOcTe
k5eoP9/pCEi26ndWM0/abjbIna4GAAAAMof0BzftA88qGp0WvgrvUni4Rfqd
Ldou9umC3DKt3tF2uHuEOqv/R/qknJ2rfuGa8NlfdmSuph8Ab3KrqwEAAIDM
EQ93qVhaOSI2ROcO7KKSklI6Wt+DWCt5ZKT1A3qlpIRe3lNNXS5xzmY/cepW
sZMAuF/Jua4GAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg
/2fv3b+buK7/7/lL+mlWP2nDzfnx0wshmB+eNk3A8MO3TYjJk4TE5Hn6cF0t
xGa1gdpNiNOEWwI1KXdsCCYJMsEmjTHYTrEdLAfLCXJiOZZby13ItRzkrCV1
jT9rP+cyMxpdRpqRdbHh/WJpYUlHM/tc9jn7nLPPHgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAARSBCPo+b3B4fhdViywKAXdBuAQAAAADmPJEhqi5bRftcV+hC
7S9JUVZQsz9abKkASA/aLQAAAADAvGCi87fMVnubwtr7tiqFlGWnjPcAzEXQ
bgEAAIDZMXjiOTaWPsxeCu3t+rbY4ty/RG/RBlYHJSXcljlIoWLLkwem+t6h
xSxvY9r7gbr/IWVBgfOq3qEO1xk6fryeLnYMUqSQ9wbzkjnRbu9hprztVH/8
ONXXu6g/iH0jAAC4F1HDIeqse17MNz70zxRbnPsYlYK+djHnUDZfonvfRXyE
qlheHz/2VeFuqQ6Jeyqraqil5bws67VnYTcCBxSh3d7DDDf9Tow9u+ub6ML+
9eLvo56pYosFAAAgD3RWP8D6+Z1sJJ1DTN+girVH5q3PQt/+52mv2+F+0cTf
qISNtxub/5EfoZyStzqI0PvlzNZ/+eMCzqtUurJFiV+Xjt6idcJ2/KJgUuSb
rNrdPUL+8559u72f68WKmdEPxPziNdO++uCJn7PPnqF+bDwCAMA9xhjV8HXe
TR8XW5B4mK1btvCNebv23Pf6Y/SKQ/+08bY/iPH3cjBPQjklL3XA7P7Kn9FT
hz8X73xuX2HmHNM3aUWCbcPpqf0JK/MaulMIGQpANu3uXiG/eZ9du72f68WK
vgM/TvZLm7ou9PSV9n8XSywAAABZoZLf006NjY3UG4iyt5F4n/Xxj8Sa+o7G
HvJ0NJOrpYdC+kCqjtFVl4vaPeNxVwwHhiigB4UMD1EL/03ibSMjCb9Vydvt
se8vz23dLH2k1dAIdbScp8bmAXG/SCSFZaCGmTytrFyYjN7xpK/H3a2sLDpo
TBNYDd6m/oB93+Js7Iu2yh+QsmgndXvd1MLk6vKl8CuwkHvCw+R1ddKIeTNC
nSSfL2DYRcOsflNe04pZ1AEnHLjN2kCjaFOyHLU9hrUnyef3M5vtPap44WxB
9rCmB96WZ5QS1pgH6n7BPl9DXVkLkV6/RL2wdhRXL+w3AZ8/Pq5qKl0TOnTV
aIN2yN6uzdBP2JEv2/4iMibaSaOrR7YFpmsu1r473KOOztdkk3d79TP7dps/
2Wah+zkq9+y4S3Vl/Kxawv5p9CatZnq6dN/neZcAAABAjlBH6ADv05WXqL7x
sJhXcJtr/ZmY7/F425/EZ8KH9ngD1Yr0NTTCbIfaJQptrn5RfHfI8512zSHh
9/6jPZ+Jt2KNittxvd+ZbjxJR0oV47q7mr+hUb52v+xU3ucbo22vinuu3d9A
dVUPajK8RLdN4/PU4DmxhqY8/Qa1XD0vy8Xkj83Ph+qy87LwhYbEHtAh739s
y+HcvmDlrZfZqhqqb9gl/t5h8q2yknui8/ekLN9GW5X4uDnDF54VsQCELR2V
6/vKgnft20lZzzcmqanyZ0L+PfU8hqgi5Oi9+ZapXOXr8cOF8WVKP99YQa3Z
7Cll0C+9XjYk1MvM6LkEP5LUuiZ9SxR61YEfTlbzjYz9hB35suwvJuR69p7G
Jqrm7b9sHXu/mmqrpAxveb4juzjNu936me57c9btNl+yZa37OSz37LhLJ9PM
Nx7Z82me7w8AACA3TMr1I2Ub3daM/AnNX+eQaW4g1tTFZ9pYyGxMbm/sOvh/
k7LrFuv/5Xt9fIsOnoqLZTUz/okYt8x23HRfDSkL3yBfMEje7oti/OC/6XJi
uLL7li076GgNUZ8nrD+v20l3qJrHe1oZG9N0+Y3xbOaWHIt33dRS3KWDPL9X
BykYuE1NdY9JG2PfZw4kkfbFq70Oxmxtn0lZedKw73tqv2+Mx5Zy725iNskS
usHq+PPa/zL5J0Soodwc60qlTu47lDi+pyOLOuDld6FCibPhB3k8H17/TvcQ
WFtckWDnpX0tsJbVer7xa3lG1TvtULhM+jUi64XNc7+o/V6c38hww3OifHR9
GG16VurazM04XeM+YOtSyJwOx+3ORj9hRz4jjaP+4i4dYXOU7ZrvjG7Xb29l
342+K/4+7XCObz/v9usnF+RHtpEsdX8W5Z4znUw/3+BxHHCEAwAA5j66zfCa
yQ92sOFXCb4jyWc39DN82zb9P3Q5xG3FX4h1sssBGbsqeSyOUN3yVdRuGpvV
SIhC+mAh7IsV9J7P2hcp7L9NbreHPB795WXzlNNC1lb2d+xz9nK7aSScKo7W
mJxbsDHW8MXXzgPH9ublGiyfCxlp1BGqq6yki54J/QMKBcPG323VP6WFmy5Z
j33qJHmZTGYZvV4vNWzg971GPq85X25ye8dT+n3rZzc+DBgXpqat+nicRu5u
F72445qYf/BxeoF+lnXmS7E2utQ0T4oOvEnLdvw9j3WQut2NXj1EL+9ryuKM
BK+LIIVCIZsvawsl43yj39l6bkb9mr6Wul50W9BkQ/a8vjGlrvG0R0oX0ulU
upOjdmenn7Ajn1WatP3FtJzPGuUg9j70s8IqhcMW9ZmLvDuoH0cUUjardJl0
P9tylxnMkU5mnm/M11ghAABw/6D15cpLpjgfdxPWvMhYU9/e/C/jl1OdfzLZ
ZXeknfvCR8Z4J9au454P8TVtfbSKhlJIMTXwV2F7fJjhWbwD2jNASkpK4l5c
juTPHk5pG+r25FMmv6jo4LtxNmaqNNZM0olyOYanXWcznpsRL6f0SUnMk/QB
Tx5HVW2fyRwj7I70r2Jl/c+BdzLKPdUj6+09LaZxdDh+XZkzeuE3tPF86thX
uaiD1O1ubpBbfyqb+kWav4upXnRb8JE9iftl2nzZ0DXOHapeXE69qcoyJ+3O
fj7syTeb/mKSDpTaXNfOSd4l9uvHJkWQbXa676Dcc0oGf6rd8KcCAIC5T4qz
eHFr/XcpGFa1ffSH42wtGa9HexaHtne+8eI38ssU62Yzoydp0dr3k9bo5Hr9
M9SrGxrqJIXCDiK6zNx05Mtj2JMmn4XBE3KdtpddJBwM0bcp0qRmRNhNeiwa
Dv+9k3g0Xzjyn7grzrs8ZB5jtTgt/FkcduSWfvHbaEgT0lhXNgpQpffLH6HT
/v+1nwmHdWBpQ2RLZIgObNlMlZWVNl5baPMe67mh3j4OJfilD5xI3POzgz39
4uj1MqLVy4xuC/J5TzgUO/dr6JrJJhz/gBY/4uDMEzlvd3bzYUu+WfQX+m/N
Z8tCgWAedU5iu35mST5lm5XuOy33nOmk1XwjcU8aAADA3EXarz/aY95Pf1vz
U/8PjTb8H9re+m9tviHtcZlI+mMrL0h7YFo7D2H4tmsxRc1rxJ9W/tTwA9YR
vtxsrjFkDFoROsvGFkfnWB3GYpX2pNlvQxvPVp5kd/+a1i2soRGR3xXJtuXE
dTqsn/lQh8TZyyfPfGN8LfdJ/uzIv8LZ+VBZX+YxVtrBivBDm84ot/y98sQ5
Y2yXsSZN50On+LM9HMZ9dRwPN7nd6fQcP0b9Tich6hi11NdTfWOjiJuU/sXS
XeyztpO0dVOzXWWsv5v81EJ+H/nT+GVZ5TOVfhn1Ylo7lud4V1CvqtKl8ieE
DxInpmsxv/lLFT9Mit+biWzaXeZ82JPPaX+hhkeou8Mt2qi+r2qcGxjn56Lf
znMMKPv1M1vyJ5tz3Z9VuedQJ+XeYnwsD31vxhwP155OAgAAKDzSvjfOZUzd
0M5sP8P69hAdVJaLZzzosU4+CcnfyHO+zxg2e2IsFD0eza5W6X8lbfx4Ozw6
fM44K7j86So609JCdfwcgtPnCTqMjaT7TunnH/rEWCbnDfz8+oJN12lm/IM4
+UXRDJ4Tvg7yvHyE2VD6WccVtHl/A7W4Dmf1DD5n9oX2HDHNv1o/Y/v4YWkH
2pZbL6+ZL7X6rqExkVrOvRzHLXIcn0qLG2rclzNJTVX/HXcOvjio1FaV0A6n
rosyXH9em1tGbxl6kt4fzJ5+iXIvNaeT9xNxhNj8p5TJopeTXsf6/st422+d
xXPTcNru7OXDnnxO+4u+A98TetYfCYvzy7E59SQd5OeZTe0993nn2K+f2ZI/
2Zzrfq7LPVtmxj8S7cO8ZyafPRvbq7GvkwAAAIrBzOhlsba4pLRUjCfHWhpl
bEXhG3tNW3NSqfPAY8b8QHl0J/UGzeeAI9RW+0vxXVnZYvZ9DTWe2CHfl5eJ
vZH2OL/3u2K8OtTP18pM8V3ZWNEeSH2+2BLHtq4u68NUWqLQspdPUlPdemPu
oJ9fHXS9Ij5bVVFBZSukbM3aeVwRV0vsh8THCV6771PnzxN2aF/MTFw34njx
144zn8fdM53cnCirb/H70tXyeSr1F6iKl/+S1bS6JMv4ktnEww3dompxJmAN
VVSs0srv2hyJNTOmxX19hl7fv1uU00O7zf4eI/KMQqq9pATs6Zd+hkmhxWVl
It3+43uMeLM74uawk9SwZan4vHzdImFzZWNfOW53NvNhTz5n/cVo029key9d
wtrIJbogYiivEe31qcPOz09kEwvYfv3MjnzK5lT3c13us2G8U8bIXllZS9Ub
Foh8Nsed97OvkwAAAIqEGqFgMEjG4+7E++RzCJFQkIIh685cDYcoGAgadhlP
HwgEUvo2x8c2iVCI3S8rW3P6mvABcLomLvMSiXufdG4kEmb5CbCyCCd9bn40
YITnO22sFms+q36Atrc7fQ6CrC/LW1rJHbuAiB0TkzmSIX0GsqwDTjjI20ia
vBSNCPnc3dTR0UHdKZ7zyGn74yZtzy8DNvWLP6NR1Kv2hdAfizqRuhXMen42
m3aXMR825XPSX/BYdkFTPDjRXrM8NJFV3qXAtusnW/IvmzPdz2W5z5ZIcIi6
mT52dHRTwKLYbeskAAAA4AT1Drndw473FeYKE95eGgo53NOZa8zzOsiKGX5e
dVvKeGvzgXui3WXJXM77XJZtzjPPdRIAAAAAIIYqfOGXFuiZ5wCATEAnAQAA
AHAvESGPFrcHADAXgE4CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPcvEfJ53OT2+CisFlsWAMC8
IDxGnm43eX0TxZYEAAAAAHOZyBBVl62ifa4rdKH2l6QoK6jZHy22VACAOcz0
wCkqW1VFrqsuqipVSFl5hMawVgEAAMAp0Vu0QVGopISNJcsOUqjY8oC8MNH5
WzbHeJvC2vu2Kl7fp4z3IDNT3naqP36c6utd1B+cxVztPtK5wRPPsXb3MHsp
tLfr22KLAxyh0tklCv3gzD/l25kvaR2rx+2t/yqoFDnTOwAAAEVEpaCvXdg/
yuZLhKWre5OpvndoMbNtx7T3A3X/Q8qCe9vWzSXDTb8TNvPu+ia6sH+9+Puo
ZyrLq90/OqeGQ9RZ97worw/9M8UWBzhCpbY//pLWn/lKe3+Halg9PmW8zz+5
1TsAAABFZeJvVML68Y3N/yi2JLbo2/887XXP47XS6RtUsfZIEfcWRqiK1ffj
xwpnN8xnZkY/EHbOa6b1+cETP2efPUP9kSwvOs90bjZ0Vj/Aymona3XFA33G
7IkOnirovDEvegcAAKBojLf9QfTrl4PFlsQefa8/Rq/MZ98MZjuULXyjSHsL
EXq/XCHl5Y/v6XX1XNJ34MfJe0FT12kF05lX2v+d1TXnm85lz5hYE1c2fVxU
KdBnzP7+vL2/lmV7z4Z86B0AAIDi0Vb5A1IW7aRur5taGl3U5TPtV6tjdNXl
onbPeNxv1PAY+QLT6dNFRthnV2ksYS1q3N1KrpYO43M1eJv6A/b9cmdlO6hh
8na3UiPLZ7s3JuuER8o0EreAqFLA54+L5WQ3XVq47TALX6Zw4DYr10YmR0+s
bG2Vv0pXKn9GTx3+XLzzuX2Fm3M4KHfePlrd40mXmG27yY67VFfGz1kkrC1H
b9JqZvcs3fd5VldNp3OO2lhkTLSFRlePlI+ViYtdr8M9SnFqJ9qCuX2orD48
lPdl4vGPxD7OjsYe8nQ0izYbSsyDRduQctvMXwZm02fY1jdK0S/SHOgz0pTv
OJOtsb6R2n3TQqZBUUcdNBQy6VX0Fm1VSuk9H/9skrz+Qvgz5UfvAAAAFIsx
quVxR/ga5Koaqm/YJf7eIfw82HdLFNpc/aL47JDnO+03qlwjV97Wxr/U6eTe
t0KvmvwY+DkCcS/xqiFfaEisfx7y/se2xNnaDlOD58TamPL0G9Ry9bywg5Rj
X9FE5+9JWb5N+tObzlDPjJ6L28+3ShcdPpWUz7RkbTtMUhObL/B77anncaYU
cRb39oyd8mdzjS0s/dqT5PP72VzjPap44WxB/DMclTuzbbg9kbiumYt2kx13
6WQau+eRPZ9mcU1rnbPbFgUTcq13T2MTVfPrla1j71dTbZW89luGvk7SEf1+
7LWr+Rsa5fsr7Pr5nm+Mt/3JuO/u4w1UWybrb0Szs63ahrP8ZSa7PsOZviX3
i8XvM6zLV6XO2p+QsvIguRp2iHxVrFtIKytrtfp6V8oakWfEN7o+Jz/rNzpP
bKRdBTkvng+9AwAAUDS09Udl5UljLOup/b7o5283PUvKrlvM2Lkp0hi2zsyX
Yvx8ZM9n4u2oVbrpm2KsivlN36WD/PurgxQM3Kamusfk2LbvM0cic9vh1V77
tgZH9z02xqmZW3Ic3t3E8rKEbjD754va78XZucMNz4m4sV3igxHLdIMNv2Lp
1lCXXeM9ymyHZQcd2vp36UKFIuRp1XxwBvmZb5aHi+89n7H8p/veNNnr8vX4
4S8cSZAN2ZT7wIlfJcw3smg3mv9HYp4tXwus6iO93aOsPevcZrfSuUf30PNK
iY22KOU6wmze7ZpfiV6/21tZ3Y++K/4+rc3FpvtqSFn4BvmCQfJ2X5Rys1dX
AZxzxD4Ot8l79TZ5Q+SdzxUs28aum47yZwfnfUYW+pbQLxa7z0hXvtGBt8W8
746WVzkf3cneq3S2TG/XEWooT9YVuc9hwVzWOwAAAEVD9yP/MKB/olLTVtnP
t72+iS6H+Dj7a7H+dTkgzwnqa3P6ONvz+kYt3S/i0vGzAkdKF9JpY3xSKRQM
G3+3Vf+UFm66ZD1uqJPkdbvJ4/EYL6/XSw0b+H76NfJ5Pabv3OT2jlv4B8n1
SG5z3TGuPUJ1lZV0sdtFL+64JsZiPo4tMM41aGOtbiNMX4tL99Dua/HpLOKa
hv23ye02y+llNt9pYWu0sr/NefOwvI6EU5/FnNDqyew/PXr1EL28r4muGPWU
qfydMEme7m7qtvHq6PYk+8gIHJT7jmtG3UUHmG259gNTXTpsN8ZvghQKhWy+
rK6W2e5xukdkqXNLt9OzdtoiZ1ran8Z8hfu6G+doVQqHY/lRIyx/+tvxT5g9
uCK9zZiTuuckn93QzwDvdXut24ZnwlH+4shRn2FP39L3i8XtM9LoHivfvtef
NMkp5whPaftKaiRMkawdLeeu3gEAACgWqrb+aI4dc0f6ehhj4R05br3wkTEu
J6+1csaouiQ+Hf9t9eJy6k0aUibpRLm0p9LajMZzCkriX4r0a4j/XPoKpRqD
psVaXmw8TYXwe+Brd3rslaS1Sot0TEa+h2DlTzygPX8gMQ9KinzxdEf7U63B
amOv8lKauCxOyt8GWr6Syj7Fi9uBvSkKPqtyZ0yxz55IWZ42201OyeDXsdup
X0dmnbPbFmNM0oHSzGu+UwN/FW3sw0zPecxB3Qu0fZztzTH/m6lO6V/1+vk3
M7YNp/nTZZ99n2FH3+z2i8XpM+zons6UtnfkZL8o/+Ra7wAAABQPuY/+kLnv
1uJ/GM8F0Na+Nl7U43ZGpJ+BsI1M685J6RjjH9DiRxJ9xEfEOK2fWeaEgyFH
55a/cOgboY+9e9P8RsRCUbYZfuUz2lql8AULh4xznYnpooPvxtLZZeamQ98I
i7HXjO3yLxz2yz0+VurHFQ+m8M132G4iQ3Rgy2aqrKy08dpCm/dYzWGs7J70
NqM1mXXObls00Op+vem5CKFAMK5s5J4KmxvotrA6SSHbh5WzQ/pAPWz4I3F6
+JkBJuu5j9/J2DZiF8qcv0w46zOy0TeLfpGK02fY0b14+V6i23qBRu5QMNu2
MWf1DgAAQPGQto+57xa+8yYfXX3cOmqsfX0t1g+X7vuCGTHnaBn3F+DptPO8
R01rZJcqfhh/vlUdoq0szZNnvjE+kmPvnx2dg3R69lPaPSuSfaUnrtPh89yG
0fyXTeunwxeeFb/pVVW6VP6E8J9IlW7whEM/bCGQ09iW8r4/SrG+3XP8GPWH
bZZ/gcmm3HmbSoqBmU27Uceopb6e6hsbqTHji6W72Gdpvw4IPzWTPUYx3xlz
XM6Q30d+S/8QnUw6Z68tquER6u5wC1tM3zMw1qd5GZqeJS/OV7G5xpAhf0T4
6Oc7Pqys/zWx/Y+oPE+kvPA+fZuhbTjJnx2c9Rk29M1mv1isPiO97t0mv6eL
ev08JpW2T2OS71I5axsOz8cZzFm9AwAAUDy0ZzHs+Lt4p58vfPxwbJyNauOq
7msuzrXy85/e72jgwI9po+YrMTMu/bL1WC3jbb9NiH8TYfavfk5wBW3e30At
rsNZPfPM6XxDl80cV4XHbSkxzrHepZOlJj/zqevS/4LHk2E2UqmyU3sud0K6
4A0t7swRZ3FjHMea0WJLKTXG88FF7Jyq/zbOHGcu/8KTudy1fK3UfVqkv/+h
uL2N3LWb7PPxkbi/ee9IPsNuW8yG1+NqZXwWWSads9cW+w58T5RHfyQszlXH
bMtJOsjPWWtlHh0+Z5zNXf50FZ1paaG6rUrSnlI+0GNqfRKS+Zbnr58R/kaZ
2obd/NnFWZ+RWd/s9ovF6jPSle/hTvmsyQcPf83an8yHPv+VvlU1sTMfRSS3
egcAAKCYzExcN+LViJicZz5PWG+aFGctuV9E2QqFHt18gA5seEimX1RjsllY
ui1Lxefl6xaJMcHc/4sYOWys5h+ZY2Su3fep42dAZBPbctD1irjfqooKkQ8+
PjWbzsxK33aFFpeVCdtm//E9ms+3HhtYEh08p6VbZ+Qh9VmDNGQT2zJ0i6qF
T/kaqqhYpZXdNdN8In35F4vM5X5K+hItX5fkM8PJZbuZDeOdb4n78nih1RsW
iDbSHHcOYkSen0m1ppxAJp2z0xZHm34jf1+6hJXFJbog4rauodUl3OcsNnfh
tvmhfr4Gb4rBy+qgPVCIZ0Sr1HngMSOfyqM7qTcYu2+6tmEvf/Zx3GfY0Tdb
/WLx+gzL8tX2C8V5kMUvkevqGaF7y8vLxH5CV7Awzw+3Qy71DgAAQJFRIxQM
Bskq5AsnHApSMKR36Cx9IJDyWVURli4QCCavqyfEPImEQxRMd8M0fFb9AG1v
z8IXhMnA5Q4GLQYmNSzLQZNT5MWUdtrfRa6WPlZOEQqxshhte1XzqZhOfT0r
pq8x+7Emq2d3hYOyfK2KzrL8i0mmcuftKci+T+UTkcN2M1siwSHq7uigjo5u
Clhkpe2Pm7T1/Axk0rkMbVFeImQqU1WWcYJSxsdxYu02GCp424jE9R2JX1q3
DTv5s0u2fUYmfcvULxa9z7AsX1XkTZdVDc/BfkMjp3oHAAAA2GTC20tDoUKv
wekx6rkfPX8/QlWK2RfIAeodcruHC7o+DwrADD/Luo2Gii0HSAJ9xj0M9A4A
AMA9g0pnhQ/CuxTwd0l/hEU7xdlRAHj74OdMlhbgGYpgvoA+I/9A7wAAANxj
hEfowv7dtGVLJR1rGZiTvgegWETIo8VTAsAAfUaegd4BAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAIBiEyGfx01uj4/CarFlAQAAMK8Jj5Gn201e30SxJQEAADAXiAxR
ddkq2ue6Qhdqf0mKsoKa/dFiSwUAAGAeMj1wispWVZHrqouqShVSVh6hMaxj
AQDAvU/0Fm1QFCopYX3/soMUMn010flbNsd4m8La+7YqnuaU8b7opJH9nuBe
z988ZcrbTvXHj1N9vYv6g5h/A2APlc4uUegHZ/4p3858SetY/7a99V8FlQL6
CwAAxUCloK9d2LXK5ktkXmqa6nuHFjM7d0x7P1D3P6QsmEt2r7Xs9wb3ev7m
H8NNv2NzcIV21zfRhf3rxd9HPVPFFguAeYBKbX/8Ja0/85X2/g7VMP15ynif
f6C/AABQRCb+RiWs393Y/I80iUaoiqV5/FjhxgZb2JJ9DjB9gyrWHnG+NzRf
8ncfMDP6gbBPXuv61vhs8MTP2WfPUH+kiIKB/JOt/gJLooOnhD596J8pyP2g
vwAAUFzG2/4g+uHLQasUEXq/XCHl5Y/n3Bp7ZtnnCMxeKVv4huO9oXmTv/uA
vgM/Tt7fm7pOK1j9vNL+72KJBQpBlvoLLGDlyfXmtQLqDfQXAACKS1vlD0hZ
tJO6vW5qaXRRl8+8v6zSlcqf0VOHPxfvfG5f3JxjwtNKrpYOGolb+FMp4PMX
JJ5Vetkl4cBtuupqZHL20JhpHSuV7OPuVmp1j8f9fpyla6xvpHbfNPG8DXY0
i98NhRz4/nJ7JQtftHT5c1T2kTFRBo2uHrlGG7xNLna9DvcoFWxpTw2Tt5uV
JbtvuzdWxnbzUdy2dpfqyvg5moQ17uhNWs3slaX7Ps+3AMnM6/LUb2c/D7PS
zcgIa//sHh799yq7r8d+289Sf2dTF6nyO+t8ZImzviaDjNFbtFUppfd8vI4m
yesvhD/THNRfAAC4rxijWh4nhJ8RWFVD9Q27xN87hP8Om2tsYZ+vPUk+v5/N
Nd6jihfOGv31ROfvSVm+TZ4vMJ0jnxk9l7RvXXjZOZPUxOZK/LM99TzGFk/7
MN1WLWRn4yAfe2JrYCp11v6ElJUHydWwQ/y2Yt1CWllZK++pvGvfvyIre8U6
f47KfkKu4e1pbKJqfr2ydez9aqqtktd+y/OdI6myYWrwnJBBefoNarl6XviI
Kce+sp0Pq3TRYemT8ao7323tLp1MY688sufTPN8/nvlfng7zMCvdnKQjuh6x
167mb2iU7xuya+dzvjGrukjKb47ykQXO+vkMMkbkGfGNrs/Jz8aUzhMbaVdB
zovPLf0FAID7jvGP5Di/8qQxrvXUfl/0y//qe9MYN/TX44e/0FKNsPFnCd1g
tvsXtd+LGxeHG54TsXO78u18kEb2MPt3oUIRcrRqvkiD/Lw7S98V9lvKPnDi
V8b76MDbLH0N3RHf3NXG0Z3svUpn+di19qz9cT7K7JVlB535f1vl79E99LxS
YrPsmdxLFNqu+QtMa3W6vZXZCKPvir9Pe//jRCrH6H7axpg+c0vambubbLYh
67Y22MDqS1nD6jT1vYUPRUIbTveytrPT2yuO2sIsKWZ5FjMP2ermdF8NKQvf
IF8wSN7ui7K+eD/gpH9yrL92+0frdOb85iwfjnHWz6eXMUIN5ck6J/c5UnMv
6i8AAMxvJsnT3U3dNl4d3R4KaXvg+vmADwP6dVRq2pqiX05k+hq9uOOasBN4
f73AONuhjSlp1wKzkzWRdLKPaN+Z/YNHrx6il/c1UXD6erzs7G/9FtEBZo+v
/UC873v9ydjaneZv/JR2Xl6NhCliIVfYf5vcbg95PPrLy8be08KOa2V/xz5n
L7ebRsKpz0ta5m/pdnrWbtlPSzvJmK+I8Vs/H6lSOGw1yuamjsQeDZvvcBvk
jpGNEaqrrKSL3S57bSihrT20+1p8ujSxgtVwiIKhEIXsvIIhyzq1Y684NdHD
/n5WdnbKuIN6DZ+T4pZndjIn4iAPOdBNNcLqVm/m45+wtCvS2rg50V+7/WNi
Oov8ZpOPnOiww37euYzpmcv6CwAA9yXRW2KfuqSkJOOL25u9onNV5fkAZSeN
GBe6I314bD7vQey18zUqPcbIzJdi3/2RPZ/lWNZE0sj+6J/pHT62KC+ljTuS
JDtjin32RApf3iltX8DOXsDAieeEf0dyXpLzzNMd7U/lz5S5bpyX/SQdKLW5
lpeTOuLP93pbyPhUmrhmdvORlE6TsTC+1xn8MXY798ewaidJL15+2r5iscsz
G5kTySoPNHvdnBr4q5D9wwzPLM2N/lrkw25dpMuvzXzkSoed5MOxjAUj9/oL
AADALtIP4SFzX6vF67D7vAe5372NRrTEM5r/916+rx0O5fHcaTrZz9PRVGNL
StnN9jzRxxUPpjzPINO+JM5+CCJ3KOgkczM3HfpjZK4bx2WvrQOvN8W7DwWC
eY05ptuWe3utbTK7+UhMFx18N5bOgmHXXqrYUkmVlZlfWyq20IeWa7FW9koh
5zzFL8/C5iF3uin3CplNrS+iqJMUyqv+mmWzWxeZ8zvrfGSJk74mlzLea/oL
AAD3J9KmNfe1wmc4g09t4u/N6+XDF54VPr29qkqXyp+gy3nzLU4n+7/Fdz9K
sfbWc/wY9YdTy07j5+LOo/o9XdTr53Fv7kj/D1PaS+UKvZLGXkrCcTzNTHVj
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
d0/9FbpQq4g83Z5h5bFEoc3VL4rvDumyqkPCr/pHez6T9+RrWPx8ZK/8Xi+r
DQllFR0+JdK9atcvJEs7ZWrwnKyHp9+glqvnxfivHPtKfmm7PibpiN4W2GtX
8zc0ytdbWX7yP9+wqA/NbslFO8mWtGWbN+7SyTR2yyN7Ps3qqqNtr4oyXLu/
geqqHtTK8yWjnMfb/mSU8+7jDVRbJst7RLVo49FbQp7E9dyi6bU6QgfKZJ7q
Gw/LumKv9Wfi68uqTourx9Z9cVZyW9RNruVO12Yk6XU7fxTjvvnRWwAAmPdo
a1PKypPGGNNT+31SHt1DzysldIMZmp/X/pdpzIpQQ7k5fopKnbU/MfWvd+kI
s9e3a/vG031viv5+eysbp0ffFX+fNmyOu3SQ+7leHaRg4DY11T0mx619nznK
ArdLXu39LnNCg7t0oYKPPSuoVfNbGKz7H3Hvi+89T8quW2x8uCHKRffBjQ6e
iou/MjP+iRj3pX/5CBvnl9ANNo59Ufu9uPF9sOFX7Hdr5NzMDuy+ZaxsnfhP
67IZY9nMLWmT7LpJTupjuq+GlIVvkC8YJG/3RWmrsFeXE+MjC/nT1Ycst9y0
k2xIX7bJ6PNQuy9r+zW93aKsPWt/DqihzwHWn9dt7ztUzWMhrYzdQ6yv83lB
rybXtNSDvZ7blm184MSvEmzaYun1pFxbVrbRba1wJjT/pEOm61jW6e6mouqx
ZV+stYFs5E6um9zLbdVm5DpGJt3OFw7vy2Re4UBveZmmFj/3egsAAPcCur/w
hwH9E5WatrJ+cel2enbHNTGm8X5ywcsfS/+pmS/FGtpSk+0QHXiTlu34u3wz
LccrY7wU9pd+Tk6lcNjc26oUCoaNv9uqf0oLN12y7o/VSfK63eTxeIyX1+ul
hg1cnmvk83pM37nJ7R1PGeNFt0FeM/nSjl49RC/va6Irr2+iyyE+Nv1CrIVd
Dsh4K8MNz4mxK2Z7R6hu+Spq5++nr9GLprJ6aPc17b6Jc7N4wv7b5HabZfYy
O/+0sGta2d/mfHpYvkfCqWK/yP0YPk+4Y5TTCNVVVtJFz4Sj+lAjIQrpb8V8
agW957P2f8mN/OnrQ+bJYTsRsvVTR3c3dWd8dVCv3ypuTIayTQGP1RMMsXK0
8wqGKGK51prZbnFmro3JuQVrC0ZeordoXZyPR7Ifvn72dW/n5bg2vmDHNUO3
uP4raz8w6drc0evkeUKaOu12FVGP0/TFog3Ylzt93eRa7jRths2lM+t2IpPk
saW33Uy/PSn9tjjO78vbbNCe3oqXVWvOtd4CAMC9gKqtTZnjityRe/ra2DrV
I/fK39PiHOp+BeY466MXfkMbz6eKpzJJB0rtrOlM0olyOadJm86IT18S/1Lk
Pnn85/y+J1P07dp4oLyUJlbIHTm2v/CRYW+ItbI4e+Nr2vpoFQ2ZfiV8Gkxl
lWzPxTOgxa1PzI+SIo883dH+5LXe6YG3RfqnbPn32KuPqYG/ivt96E/va58L
+e3VR0x+W+0kjWyp2s5Th79IeQ1nZZtrMvhl7Hbml5EqL9HBdw27UKCtr29v
/peRZqrzT3Fpktq4SPN7eiJlGy+2Xt9NmifYqdNi6HGmvvifA+84l5vS1U2O
5E7bZv7pQLc1tLLOqLdCpmeoN6Xx7qRPyTW51VsAALg3uCv89R8y94FaHA09
/rv0D9lGQ9o6krHOb3SmKr1f/gid9v9v8uW1PWqz73QoEExYaxsRtv1Th2Nj
YjgYchR7/gtHfhcW40EKuTde/Ea+T7GnMzN6khatfT9OTr2sdL/lJHvODjM3
Hfkz6PbTXjv5t1Efco2VjeO6gaZOUsj2IVlyLL+t+hDMvp04xVHZagy79lLF
lkqqrMz82lKxhT603D+yslvS275O8jJ4Qq79c5uNl+W3wtfuYcP/hNPDfSWV
2HMVZBuPj3v6ccWDcWeyJIXX66RzunFldZeCrB3bqdNi6HGmvvhb23LbqZvc
yT2dts18a1O3c43dPsVEZIgObNlsS28rK7fQ5j1Wc+jc6i0AANwbyDHO3AcK
f1++RibsIPm98sQ5o2+Vsf5MZ8OneLz4GmOPWg2PUHeHW3yvr3MZ5zXGz7H3
b8d+qw6Js+hPnvnGuL8c2//s6Lyis3OlMk/6uW8zPcePUX+Yj6FyLfGod1p+
MX3TdFZD8mnlT40zEebrmvcOdHvOkZ+yw3iUcrxfkXyPiet0+PxXjupjtOlZ
MdcYMozCCJ1lY6ejM7uO42lmro9ctROnZCrbVIy7m+l4fb2IjZTpVX+8XsZP
smBA+PS9FHe+Vd9fNOJqilhx/oz7PdLONvsDanbRypPst1/TuoU1NCLyuya2
Zhy9KWwk5QV9Xp3cxkUbSjwfMEf0OqrZ6EdZex9t+D+0vfXfNuq0OHqcqS/O
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
IxwYooDe0MJD1MLr1vR9TsYpPt9InPtnouh9CBN74G15Zilhf3eg7hfs8zXU
Nf82bAAA84TRtldF/7N2fwPVVT0o/laUl+i21u9OdP6elOXbpI/nslOGrTMz
ei7Ot8MqXXT4lEj3agH8V9LnZYxqlyi0ufpF8fkhz3fiN9IfxSyfSp18rWfl
QXI17BBnSivWLaSVlbXa9d418jbV9472mSLWhnyhIbFmesj7nzzmMnU+uNzv
l3M53o6NgRNy7XtPYxNVl7Lvytax96uptkrK/Jbx23mQFwf1kgnn8w0ncuaL
u3QyzXzjkT2f5l2CGKw8SrW2sqqG6ht2ib93NP/Ddn9hXx/zw3jbn4z2vvt4
A9WWyXY/olr0ZdFbopz1/SU9zdaEfA5feFa0TWG3ReVasrLA1DYd6GTusduO
i1k3s5ORn03g9fajPZ+Jt2JPkNvXvfL7nI1Tjucbc6EPyTTfWEGt83a/EgAw
l9FtzPXnv9I+uUPVPObMSt2mGWH98hK6wcbgL2q/F+fLMdzwnOifukLp0w02
/Kog6yaZ8jLaxOyAXbeY4XNTrGsads/0TeG7qve/UdEf6/vKd+mIsKt2svcq
nS2T5+oi2ncH+XWuDlIwcJua6h6T9su+z/KaT8t8zHwpxtBH9uj3Z7Kz8W27
5mcz3femkG97K0s/+q74+7Qxl5jreXFSL5nh841Xe+3bdU7kTILZJSuMeZyN
F9Od1KqSfr7hJP+zRtsbUFaeNPS8p/b7pDy6h55XSmz0F/b1MV+I/Rlu9/Xq
970h5NjruW3Zlw2c+JX2XuvvWIF/XvtfpjQRaig3x+zS5shGnTnRydxjtx0X
s24cyxi9EZcuOngqLubYzPgnQv+kzDkcp9h9y5ZZ6Wr2+UpJzvqQdPONX8vY
E97C7LMAAOYnYX8/dXR3U3fGVwf1+vW9/TFpj7M+0/DZ1M6NGb4Z09foxR3X
WJ8o1/YWvPyx5iegjat6f52Q7qHd1+LTpYmZmZ3siWTOS8/rG+kyE2JQrOM8
TJcDekyaCLNdF9Jpn/TH6Xv9SdP4Kvv5p47JOYwaCVPMPUulUDBs/N1W/VNa
uOlSWpsvF3mN5ePXcfnQ1+fMspeZyr1HrPPp54pVCofNks7xvJCTejFna5K8
bjd5PB7j5fV6qWEDbxfXyOf1mL5zk9s7njLWkhM5UwjByjZIoVDI5suq1DPP
N5xP6SfJY6sOu1ldewx/I/3sxoeBWB6btjIZlm6nZ+30F2RfHxPJVX+ReHZD
P4u/t/NyfJ+345rRJqIDbH6w9gNSp6+n7hc123HpPvM8+U1atuPv8o0jncx9
vu2242LWzWxlTJzXcpnrlq+idv4+y3Eq7L9Nbre5r/CSt/u0mJ+0sr/N/YuH
9Tcj4eR4Z3OjD7Ex3+jP5/4aAGC+M6DFki8pKUn/4jbaYRmDQu93dJuNEx18
N2VfJPag2efv6XEjLdZkktIlzl9yJHsi9vOizUte+MhkV96h6sXl1Juii57S
1h/TrzlO0olyaXNkWl/ORV51mfnevDkfyeNsvIwHSu2sgc+HvNitFzI9JyJZ
pmTZefmcTGOzO5czt2Twp9qdhT+Vpp8Z65C9uF3cK26sansD5rhOd6R/1TKT
r5GN/sKpPnJy0u60/Zntzf8yPprq/FNcf5GUB5Hm9/SEqS+b6vlTXBrddjQ/
z2P0wm9o4/lUMbzs6mQO8y2w246LVDeOZExMF6ELFYnzhq9p66NVNGT6ldNx
yipfSgrd4emsbfZi9yHwpwIAFB6j3zH5lQyekHvK3K4IB0NGnyh9YLcJ32bO
jD6u8j4rHDLO2CWms5q/FC0v2rr4xoum8X/8A1r8yKmUY77MT+wsC0XuUDDu
QOGIGD+eOhwbp8zlljeS8mEeZ817FfHp15+JzcdCgWCCnPMkL2SnXtLzhUN/
qmzllMmG6MCWzVRZWWnjtYU277Ga61nNNzLP6XOL9GV7yDy/0WJk6c/isNtf
ONXHXCH9mB6Os61kfJ7YszhkHuJj5X5c8WDc+Qo9n0Nafgzb0agg7pv/CJ32
/28KIezoZB6w246LVDfZyfiNfJ9if2lm9CQtWvt+XLnmZJyauenIn8pRvhLJ
WR8SGysPJZwTGjhRGL9nAMD9h+x3zOsqmj2z8iTrq76mdQsTfOVN63DyTOQK
6lVVulT+hNgnTpVusEB9mN28TGtnPI6a1sUvVfzQtJetkt/TRb1+7sOqrUWZ
8nOpXKFXemPnEvlZ0SfPfGNcS45bf877uT99zIjl42ttnP2C2QTnaBn3AQmP
UHeHW4yH+tqtsR8wzs/uvh0bK+d4XhzViw2yiU9lT84UqGPUUl9P9Y2N1Jjx
xdJd7LO0OeUapGmeRbE1dXM83JDfR/40PhWzQ+q5eX4jbRWF3hN+Nnb7Czv6
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
6Xg9HyldSKd9Kfx41EnyMrnMcnq9XmrYwP1urpHPa86bm9zecYuYbXLtPy4u
mDpCdZWVdLHbZbv9ZVsP2ep7PupBy7xjPZG/CVIoFLL5srpa5vnGfI5lAAAA
AMwZorfEmm5JSUnGF4/ZIp8Np2p7BOb4Tnekf9Wjf6Z3hH9SuthHd6TN9cJH
hk1mZ/9gQHtuRrJcyfLzdEf7U6w7a/sy25tjZy2mOqV/lb6uLXxauH+UHt82
270XwSSdKJe2Y6a1Uqv8Jb24bXk41XPBNftpFnGnkvJOvHx+T0+k8GWfEs8L
VOi0Db+XnNSdrfzZbVtjVF0Sn47/tnpxOfWmurbxvJnkukjOF7dVT6a0VafF
vkRsbpAKp+3PST1kp++J5LIedOzrSe7I4E+1G/5UAAAAQPGQ/hsPmcdjLaaL
svk8HU01hpvR1mM3XtTPekSkb4Y4S2Be77TBzE1HPjnymdoPGz4gnB7uB296
foaIWaNsE+c5xC20dVkxHwmHks7sWjMibK6nDsds9XAwlMdnlVjYTw6QeY+P
E/xxxYP0lifZ/pdpX6Lbxhn6OxS0XziO685W/uy2raR0jPEPaPEjpxzZu184
9KfS5xt70/zGafubdT04Jof1IHCoJ5EhOrBlM1VWVtp4baHNe6zmMFbzDTkn
w3lxAAAAoJjI+YZ5PBY+/uLM9L/Fdz9KsRbbc/wY9YdjNtdRYz32a7F+u3Tf
F8zmO0fLuE+JXRzGVJXzjTWxdduo9NlXXnhfs280X3iT7/bwhWfFumyvqtKl
8ieEr0hG1CHayq775JlvjI+ig++y6/w5j/Ff72Ysezu/j/NbZ/VhPivu93RR
r5/HF9LWr01pL5Ur9IqTswyO4+Fmzp/dtjWtnVE+atoTuFTxw7T+fKlwel5c
tr8Uz3SfuE6Hz39F9trfTG7rwTG5q4es9EQdo5b6eqpvbKTGjC+W7mKf5dxl
QPjUmeZqFPP7MsfDDQWGyIfnjgMAAAAFJCLjzOz4u3inn399/DC3P1S6skXG
mRkz0k9SU9V/G2fLo5otop/9EOfMRTya72jgwI9pY3NyXFlLHMY40uP8yBiw
2pqr8ozJx+MunSw1ne+Yui59ZnisIDY3KVV2mvJlRYTZrvp51RW0eX8DtbgO
F+DZiJnL3tbvV+q+QPKsixFfSDtX/+Dhr1mdyzrU55zSp6fG2bPKHcenyl3b
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
ONm6O65Sl2+Kpv1d1Fjv0uSPlbXbNxWX3l5euM/IEF11NZKrpYcC4TANd5ym
LRVb6Ix7IimtFDJCoz1HqYS3oRfPki/gZzL4KKid29bHjqPeKZryfiLy3NIx
kNJeS53f1ERCY9TX9Ir0EXTLNuFl5d3N8t7S0kFBNVNZWdddpjylkEb4LNby
8XBRDSt7f/zeRpiX+THRrnk7jC0D2tWNTPmwLCUa7NDyV3+FRlKsNfB26GJ1
0uyW5e13d9NYxIlskilfF9Wn1KV0+puqvcbIhX5a9SkpyVjvms2z8iSF1Ttp
9chJWw4HhsjDyr2jm5czb5O8b3BRB2vXMVHttQHrMpPXOKLZVGp4iFqEnneQ
LxjvP2Nlz1rlSfR1XH6m11zecaZH9axsrrL86EU33NEsdJ9/ZtcsHfe0m9pU
Qhmrk+KcIO/bz1/tS/CzcdbnJWOvnLTcZ9CxRFL3OfbagCSxfpLGGsf9V4pr
2CxDO2Nz+jaZjJ6/Q57v4j7vOfCY6O8zr4umG19T9DnMtgn4WP/N6nzBy+8z
+Vl5sXz4uR96if6ZyRayrHM7Opr6t6l0KGmszKJeddLpUrq+W9w2Qx9q3ddZ
jK/gnkefb7QHoqzZRigSCbM2eFn6SDJdPNyqnd+YumGcl+OvTdqe4+iV3xmf
rT9j4fugjgidFekW6D7OY3SgLOEzfvbSOFP7mUgVHT4nz2PVt5HX56G6Dfz7
h1nfEqamyqeMey8vK6PysuW0cvPZtGuM04PnpF4+/Qbrs7vpxFb++5e0tZFJ
atgq93TOdPSxces17XzgZ1o/GZN54ZZaccZl818uUEP1z+L8O3nfcamCpXu0
hvVrXhpoOyTz9NotGmz4/wyZzeP2TOC65pe6jdmeLVS74SEtXfxccLztLfH5
2n0fsz7/tMjLQ7s/pggr42q9jEtXU2mJXlfPUH8kSCcqfmSUddhRXvh+ujwr
t3Z/A52o0s8976QDvC4eSX0eZ2biOm0tWyXLmrWjMhGToIxO98uxQh87xOvR
nWzc1nxxVx6J83myzK9F/Q5e+B2VlJRobWIdaxM8HsIq43y6GJPSlpV13WXK
UxKsPRv3YTKVsfb59MuXhOxTA6fkGePdZ8nt6aYD5fL+XcEZsqsb6fNhUUDs
N/Laz9BFt5vZBD8UeWnWzu3zdrhBa3fHG+tFu1j7+gERW+J6mOzLxtuNdm7l
YrebrtSt1/oIfZ3wbhr9vZOivXJyo5/WfUrqIstc7/oaq3xt/ktTSj1y2pZH
W16N6Qh7PfriQTYH3CflWKT5t2RsA5nKLFF+1uc3XqGGWlk3Oy7G+vRU8410
eYr1dSvo9doXhM+9oees/22ofZzp+xvkcu2Vedp8KcOcg7WZqv8W19zT2Ebd
V4+Kv5+8qI1R6pBou4/sucRstGatHW+jfqNe7fd5Vve3U06ZdCwZ6z7HVhuw
qJ/EscZx/5XiGvbKMJ1uc+y0yWSm+94R6V5rj6+ntuqfJo2TiWQeX1P0Obwe
y/X+e4WMq6ONJyXaZ7xP38T7tHR1nklH0/w2rQ5pY2U29ZpJl9L33Zn7UOt+
wbqtg3ufgbpfx2wzLVbVOl032Fw5fn1oTMzrlYVvmD6/I2yNxDWHVHRWP5Dg
c5DK7zkSt2c9cODHpLzwN9NVJqlKKdVsH352612hY/12glTMaDFG1sbmJMMN
/5fI61tMfn3u1WXK9Mz4R+L7V9pjc4kTWh+0t1fP8x16w2xrRW8Kn9IPg7Hr
TLX9lh7adVN+nThus3GyKsnWVqlpa8J8g/UrXG+X7ovZdFM9b1LsLF9Mtg+Z
3TrKbO9FT+vXTF3WGfPC6rwq7v0kHVzCfvPC+6LvSB9nVk2xFy2JzTfeNuSZ
6vwTxa1TZcxvamY0v1xzm5jukdeOjUmpyyqYoe7S5cmqDMQZ8WWnYrbU9E0x
XpjzZZzzUP6ctr6S/TnS1XkyQgfjfCTv0AHNPzkyo52zZzba7Ujs+zeUhHZo
Szb9nOk21oIkPbU/ocSzYtb6m3yP/5+9d3+qq0oTv89/MtMzU7Yxhvz4nek2
F6iame6JCfGHt0cj8e1uI7Gm24Tkq0aSqjEJGRNJq7nYuWlunUBsQAPEBtSA
AewENKBAG7A5NODLoSsHc5CDVZuuzdTzrtu+77322uccbvH5VKda9tl77bWe
9TzPuj1r7VzZZ5hP8UdW71Y/9JUgO8pQl2eYfGhfzFbnkzd538n0Y8E6oCYz
I//P2vrmtM/B98ka5x15xhsKZTL2FHjtnOb/fbN/GRzXa8tPJT+D6azZj/oz
73eJ8xfMeJuGv4oX8dj+da5YmHCfF4SanKQ25pdsWHuhpAP+40FPWxPZf/ml
oSbDINtW00mffAzxORqn/5vi7VFMEkem2r76+jU/eXmvhdd5sI2GPRtsQ/Y1
nWj1KreldKjvlvpQiV+4/OXNkPYVuZ8xbN/tE2bifzDjqey+1TirwdDT2dGL
8PCj7yidScfe5Tibxy/u2Rkja9gFPZ+3mYy1E6k0DDRWmfM6UfY4TIh27uAt
yy9Ndr8N+Wu3QuvQ59x/v/SB66m7UL7CnscpOO2TZ0c8pzGuIemerG6Brv5x
SCd7oLphwJZnyz9Odnrzxe7rfs1Rtr4LP7Nkr+v0f6zdofb7NItpFXlb7xdH
7i/r0LJM33S12cYzKmfxBMc7mzK4/Z3rWpTy+uOnE95rAbIKqbvoMdyWjA15
DVT+jM0F/YHGI9gw9JPLJNw2pOXwY+YLRx9F17nVdtK2g9h51x/5XOqLRn9N
wG3+MYfswvOmQf3+dbBm+7vsHk3TYKjlFXDHPQTbr+sdRt5zYJ9hPsUfWb37
y8P+zux02SeGhLX/hg4F6EAEmfnuP5nh4+Jl4pxft99SKVOwnTvLNNHung9w
I/K87LhjrutC8XrYcpKfLz0z9B7Jb4GY19UgnRpkz/jai8znBaIgpxAbG/Rr
KBXbC7kO+I83vNei70HxS0NFhr62rayTfujQVMLHCK2iv8rn4fm8/tWRWd+n
VNvXKD7XcU2pzkNsVPKsSlsZrV7DbCncd8t8qNQvvPNhSPuK3M/I5pWMtY91
9nkV4Vtj27i/+KT0R/Byq9r+wb7T/yfyeIPOTZTbYhXYGt2ha6adRBlvdLM4
zxj83m8+Ucw5r/PMD7jzqOaT3OvgbK1UnOvt9t/drA68/U9P/9u+FlVYyNZ2
N9L1prw8ce6XmFPefs1n/BfQJwoti1jTYusZFOGryN/hY0yF8YanbYxSXn9U
xxtBspLVXSbjjaB5eve5b06ZRGv7/OvchWG7MSM2oNCMNVu7YTdUlf+HmKf9
m/MxH9mp5e0etFccZO0MW+cvcM8nRhhv5NI+Q3yKP9HHG4512qx02Tt3a8yp
G7riqwNZyYwyJvqAvF/iGW8olElm52rjTmdZwmKuJuOtUF68Gow4Hvr/j7rs
RU13/VCQU4iN9QSUL0p7YeDUgfkdb6jI0LdOlXUyiHvQ9OrTppyWP3MG6o89
HtiHoai2r5mPN1TqPMBGFZ5VaSsj1auSLYX4bokPDfML8vYVuZ+RjTeMNbBH
XTrcUvYP/JlEDxmr7lQ+F0J1vEHnSYzzrIeaa8mYeRaS8R5oI+Pn3YXLfXys
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
M9FxyRlTTsbsRp9nouuSqTfsjMX1x6GlZq/lq1Jx9bryJVxOBlIb81Sy3OeE
6kBA/QS1Ncr+yyfdXe+3RZBhcNscrpP+fFzC5bD/1f1CD3YGxk87CGlfz33W
5vE5I9/dcdrWQ4ehf+gP4r1GWVeSMRIfrwTWuYKNBj0bpa2MUq+UYFu6G+q7
P6dtqsyHBvmFsPZ19kvYLWK5Fvd3ppH55OOSH4fMB3rh51P5xenpkEomIZkU
v+gapNMaW2vRUinRrqYgmUgGnr+qpejz6gqqp0l65J3+y3Yaz08qQ4XXrXNi
aTqJZEp5XKaleTmNYqZJHnicqusVIv8Kn/TJCnbuHakz9/mq6XHe33y6Vj43
xtGyzut8lVe97rIvE0vFKFfgXE6wbWT5ZqmO60IPabaMcy29Y8vwvOlamvye
sH17SvfV52j2m519qvqUoHfPpy5b38WcZvlNkOd8xKeAqsxI+RKkviLGM8yb
ffK3Cb3zK4tOfCax24T1bTkab577bKnISVHmIT4ndzrgyv881VewbWdmx6mR
Huhoa4Ou3lHlb0Sab1RsXzMnG9+UZb9DpBGtXoNtSea7VX2oxy8otq/t+7dF
ip1B7i9mR/9AxrB5ZCxP/pj5mPz3HkcMnj86tNNx8Br6vQ4d3qXrfeY5R8hS
gMa6+69j8fXTJ4K+8YjcN/Bvl3jPzEbmnlkRk3KiJzjmCrm/QR1AvlfM0jOC
A86ORr4XGLGYT1e0sNg82Xd5LIw9bTE413KZrbk9pzQfjiwWzDXaJw/A9a4B
SCRGoLetCrbm8XVz+TcLkKWNBt3Vb4hYiRg8ub0cWiXx9UhuGe/4PewueojJ
fvmTu6GqY3Shs4TMM6gDyPcLvl/0kZMK5y0i9zE69NWdgNKSEjgS5dss6UGo
fPUlKCkpg6pW9JVLEv0edDdehv2l20k9lkDp/mNQ2zaA61TfA8Z7r0NdYzM0
NzdDXXU13MbxxrwxHb8F1XWNTPaNdXXQimfUf+9AHUC+X2jQ29YV/u1aBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BPmeoaVSkEqlFzobCIIg84KeTkIiOaN0L/pHBEGQ+4OZofegIBaDGPn3XNVf
FjYz2pewI4/nZfVLH4C+sLmZY+5BTckjrKz03w8PfRK5vAMXfiGeL4CrI2rt
N7JI5EZ0fauo+ydO/mlh8iDBklEMzvZPz9l7Fov/WRQ6MUdMx29ARXU7pMTf
81W3QXxa9gOILTsO8lFE9v5xzpj5wrTd2KYrZjnccs6OKWivvgyt/ZM5SS0K
uS1HltzPfYIAPcoFi6oOEcTGRO9V1uY/cuTzhc4KaMnPYDf1L6uP39e2Mlrz
c+JnHoPb6TRcKSTlXfaW1N+Mtl2HQc15TU+noLviReav3uj6dk7zu1RZzHJL
J27D7kVid27mU0bz7n+0QWhsG3JcWiw6kXum4Ew+79NcivNx1MKW9c9M52Ox
lfCHxGzgXUH+0c+e5x8dUiO3RDt1RrRTXjlnw0zfm2Y/dK6K6y/L3JYjEj52
yS7ft30CPz2KiK/MFrAOESQUDS7mL5Z+D8lLIbe/+3cVXYem3byM1N2nk8OQ
SMlblaaSLfCRj0Oa6Xv7Puwj5Y7FLbfFZHde5k9G8yyH8fdg075PPJcXh07k
nqG6V2DthgNwx+ZQF6qs00Y/mq7rnfsq4K5g/xhkz/OPt53yk3PmyQ9CeeEa
2FsVJKPsCZJlTssRhQC7vL/7BFmWLUBmC1aHCBIKHw8vjn7P1H3sWwzE/INy
GcdgR2wj3PQZkhjt9/3WR8oNi11ui8nuvMyfjOZXDuNN/wWrDn7hub44dGJ+
WKiyNpU8Ai9VnIfNdMyx5jDc9b0ryD8G2/P8s9TbqcUkS06QXS59WcvIrmzB
MkOQ7JiM34KKU6fg1PkauD3ijOvUksPQ29UBbW19bE5ovOs6VFdXQyP520+P
04k70FxXDdV1LZDQUmzN+gHl9l6DgbZaOHX0KJyqaIJh9wv0e9BZd5n8fgqq
mrv91wm1MWgT91Q3dtvyKOxv/UVI63ehuZrmsRF6R6LFGY/3XofzPrKKKic9
eQfqzp+EoyStho5R9Qykx0jez8FRUT5LBhokRm5DOS3j8gPQFR+Rrm3o6WGo
FHHMlzuGYCQeh/hI0oxjNfoNZ/snYbL/owzKMgXx3l7oamuDHhrfoI8JmbeQ
v4XMU4PQKK7dUdznaTDe22rTWWcd5lKfPWXNmdyCdD1IblF0VfSzT/6J5JfI
mNhjXWMbxH1lHGJz/lKAoQ7xzPl66CAyrG216XCgjnLcfVItmYCREaKviREi
zxFinyIZUlf0unUtPK+Z+R8u8462ZrgVn4TpkVtQXVHn1B2Z79E1GO08C3m0
r/vMFYiTcsT745AUBcmVLUnzJ0Hqa0J9qn9dMzvq7SJ21AUpW/B75nWbBbNf
wMbYZhgk+lFZxNc4fj/ijqny949h9hwsv2zqRKbHzn6in5z9fFgF0anmjgFT
lkNtDUzP6DXNlna8n/iWjjZS/knrWgR/I/OtMlmqlkPmL+Ps9zro6B+HdOoO
VO7fDtv3vRswtoRQu4zUJwjxaTppy5iOkN9r20iZSDr2mLJM2vuwNOV5co83
rLpvbhsQ+m1cuw63+idCZRZk82F5Ua/nkHYFWfIMiXjW2o4uaDr9NPMVT1+2
9pkOVP7a3O/4avkW4qv3kL7LOeLfqZ2esdm6Du2nf8nu3X6qBhorDnKdJf/W
nVQYb+jDcIzaR+wpqO3qIn7rAfbOBmOPpT7I9kCtOnSN6G6D2A+1E3psCjs9
8A5/55OHoY3o94Ud9J5nYZj9KuxP5Gn7qXqoLPsx++8Tt75RkNQ9qGTpPQaX
27pJG31Q7Mn9lNmuupyIvbW8zu7ddOQD4ucvsTw/uO+D0Hjayb7f8f1t+65A
V28HHCvi8rqVnGX738pEbGUsLw8KC9fCky9dC0hzCupLnzBlsbawEIrI/eu3
2/Yo2uITYmsyKcuYqM8YPFRSzvbm2WV+qLqCzUXuq6iH08U/5H0EpZhQkvfd
/yTSaIGO5rPsvx+v/Zr9mjt9nkO5SXXdT241EXXVrusFcLK6CSrLeb531dri
KMJszhcNrhXTsh2A67390Ndygu+7FXNhUh11yYj3STVoKf8PS2bEpu8wpR2G
sjzbtemRkLxm4X+IHEzbyd8I+eZ7n4IempcQ3zM7cQN2FG4Q7yuAwqIiKMwv
hEs936nrBEhsKSx/EqS+JtSnBte1ZUfOtQzVuj3guZY5k+3PQ2zbB7y8Tc/7
17mvf6yCd0PsOed1Empzzn6in5ylPoy0fZXl64huHYa6uje4Tm432oG7cEH4
Wmtfvbq/kftWuW+MXA67bWiDwhc8CxV158xzILZdeFWM4//mK+owu1TtE4T5
tJmhd7hvrWiB/ngvnN7K9xHdSofokERNwtIM97Pu8YZVz7Tu2XiA7pkXZf/h
oU9DZRZk82F5UatnebuC3A8Y+392Em3kdJb/C/Mpt23GYMTkxmJvmn54sv1/
mP4Y+j9a/yuuhzY7nRU286jC+kY7PVuEvPeW2dbdhWM0b5veY3ZptGPPNfxV
ZOAG8zvrjDN4ZsW5PLbzGIYq/40983rvd2D3La/c/s58x2GbrcnoO/0Tnj/b
wH12/H2W3sut3yjLCYg9U1t+5Ij1zsnO1yB0D9b0Z8w+7c+Z8cix3wib1fke
yNW/U9oLODvwFstbj8/8otVHyqYsGlwQ841v2GRenu+ag5wxyhauJ0OV/Ayc
s2ab8Wfut9i+z3TO9FlGtnIL0/UguanqqqXrzzrG40M1vxLt87RiPnwgdUXt
7mrSujTZ8jw8uPczRR31j7kZb/lvdu3gLVvftf3/mvt5w/Karf+xy/wqaSdH
a16A5U/ytjDU94hyXhRrSm5ybUvu/AUSkmZouWR1Ddbe4+DxhsiGT91ONv2/
zE9lH8eiw7tFPxQ+HkwdpGsYYz73+vnHQHuegzoJtzlvHIyfnIN9GE3rfXN9
xmi3btvGkN44GxV/o9ZXkPnGaOUosPXXn2d/t4q2d7KTl5POT9EzCuTLY8F2
qdQnUPBpfcf+GWJbPrT9fg92x/LhBs1/hu29NE0lP+sXT+Vf996Y02CZeepQ
0eeH1nOIr0HuBzSo378O1mx/l6/dahoMtbzi6XeZbYhpk8a1AuHHhM9c5j7n
QTF+euYLHncrxgq6zj1IJ7U54t8GdX6+5UbyPj43oUE6NQjlK6y0J4SvdbRp
3W9D/tqt0MrOK/Gzvym1/aRG/l76wPXDXZYHI81wORE/cuFnVn+ZlJMVdfIm
s7WnJed2DlT+DPzOXjHKzd85BadFGVW2Prrz5v0t27JY+fGNa3PJMXy8IeTt
0DM6Z7cetpyk51rmSp/nUG4Kuh4oN+W9CAGxu2Jct4ye/6iUDx+McT2xq5PV
LdBFYxuSPVDdMKCoowEx/vogn2szz83R4VrxA7wfGZrXZHb+R9zLZL7eG+8c
5nvC3pVTW/LJXxBhaYaWS1LXjnKFjDfonACrW9Pm+RghaF46EkSn82J50BCf
gEQiAcnkHXFOFenPedL3949B9pzzOlG0fbftSuXs0akYnOi1rk2IPp1VNv92
MNzfRPGtIb5RqRxWGt1MPta4xnzmlsoeIZkPCO8TqPg0Yw7smf2nobmjCxKp
NAw0VrE91Zm297I0VfsCvmXzueaVj4IvM9eoIvr8oHoO8TXI/cI9aK84KNYo
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
mVno7GTEzNB7UMDKEIPnqv6y0NmZM0a7rkN1RTXUNbZBPJl9XU3Hb0BFdTuk
cpA3JWa+gK2inmKbrkB6vt4blTnM57zLfEHQoL70x8KvPAW3MxDg/eCXLKag
vfoytPZPht+qfQk78rjurX7pA1jsvbulp8/Ouhio/IWSnlr6GIOz/dNzlrv2
MvqO3ywaeerJz6C8aBkr95MlJVwG+z7JOt3IbXZ6DNoaq6CCtH/NHQNSn6xa
p9kTwa7nAmynkEXMaNt1GNSc1+i8RXfFi0xn3+j6NvuXaIPQ2DaUfToRmei9
yvzXI0c+n/d3+5JTOdyFC0Xcfx49dRQ2Cx+z6/KfskhzCs7k83QuxeerP6dD
auQW7Kb9qdVnFrEvy0E+fet/IWS+QOh3ob6MjjkeC2/zfWSVc7+0gMz0vWn2
CRzuN8BHaKSPx3Xv+CK2Ecoi1ucA2XrqQk9Dd82LTE9vSfR0PvRxdugdnjdS
73fn5A0R0QdhB83P+jMwJga+V/L5HMBtTf6oCqpt9kTnb5lcth+thLrqI5DH
2r9n4VZyNiDfanWaLYF2PW9gO4UsXppKtsBHPko50/d27vzo+HuwKQfzH9HR
4GL+Ihpv5FAOo5X/D/Fp79nmOu/Bha3Zz7UN1b0CazccgDvzutBA6qmQ+8dF
u77ByDKfAfW/MDJfGGYG3uR9k7CyBsgqp35pISFtennhGthb9ZXzeqCPWCo2
soj1OUi2PnWhqqdzq4/34MwKMVc9x/1kVaZFf/pS/H/Na52nfgnLn7mYo/GQ
Sps9BceZTA6YtjA78Dsup103Ap9S9j3ZEGTX8wq2U8hiZAx2xDbCTZ+BuOFX
cuFHx5v+C1Yd/CLrdKLDx+SLZbyROzno8G4Rb4Nu28aKk53/w+pssZRXnakl
0pfKLp8LZweLB+5Xwtv8IFnl0i8tRoJ1ZKnYyOIliv2p6ulc6uN4/a8gRvrx
NeU/4r5+YSbMHfD5+8egZ87yotJmG3PttnxM3uCxWJsuBtqHap0ufbCdQhYX
enoYKkseYb7ycscQjMTjEB9JmvPlhh892z8Jk/0fQXV1NTS29Xn1V78HnXWX
4dTRU1DV3O1cv9M1GO08y9c6n7kC8cQIxPvjkAzYX5ZODEJvVwc0N3dASk+R
dKugzpWmnrwDdedPwtFTp6ChY9QnjTvQXFcN1XUtkNBScIXY3QOm75oi7++F
ro42aG4bEGU1rl2HW/0TzsS0MWgTZatu7PaUPSwvkeSQHoPm6nNwVLxLvg6q
sXLx+vmbeXVm4C127dHQ8YYOQx21pFxH4dT5eujoug61raOgJYeht7cL2tq6
iPzFm+g1UidtpO6pax8n91ZUi3hZcc9QWwPTD3rNaoaIXHt7oaOtDe4kZ0FP
DUJjXdA+kyD/qMFAm8hnRRMMix/TJE8jIyOQIHIciY+wZ2g+4/Qa+TeSDPay
NB+szoica9tIueoanfGE0npw51NRnyT17ydzlbz41Yu/jfrXtRSZTYt67SL1
2pOYJffSPFJ7a4TeEb91tSno7+B5u947DpMDb8vb/BBbUfZLIfJjr5Lqgr/u
+aElE1wfDd0j8jP1U/hUPZ1k1+i/lJY29aYrPqlUblP31pP+lH43ROaW7KPV
FdGj3utwnvizU+dr4PbIZOS0VH2Iu95MGRo2LZ41bN1+zd/vGv6mGW4RmU6P
3ILqijpeBqlsp7x1AYaekf5segZGO6h/q4PrXUOeGJmg8YZy2xDEzBewMZYH
N8gLhy78jK8p2Hy9G53oejxO5cflmNZ1SDH9o3/HhU/UISl0cCRhWEMEPU+N
QXf9y8x+q7p4n6Gf1HUHkV0j8etJVj/RdU7eZvtD+wr9Nv2c7nyNyWjdyeB4
YtU6pUzGb0GFrx1w/H2Hj13bGO9ttaUpj0HAdkqhnUKWCFNQX/qEuddtbWEh
FBWuhfXbrf1Fhh9l/9bsIf3Ec8T/8bhNc91UH2R7k1YdukZ0qkHsU9pJ7Jn/
PDtxA3YUbhCxlQVQWFQEhfmFcKnnO99cjTb9t/nOQpIf478NHzLe8jr7e9OR
D4g/u8TSfXDfB8Jf6NB++pc8pvNUDTRWHBTvpc8bvmsMjol+emyZiIOmezHF
fT889KmZl+mBd/jzTx6GNmIvF3bw+NBh8bs8L07C5DDZx9eCV++7Al29HXBM
7MsIjEUF0b6QvoydIbEn7unLsr12GlwrpnV6gPT/+qGv5QQv+8EvYKDy16bM
jfbTulYAr5Zvgdhymy4Q2VSWryM6cRjq6t7g5dt+TcRAD0N5fszSIfL8EeLf
T+94gO8zqbWvN/uMN8jzvK6egtquLjI2foCl0TDyLTTt/w9bus/CINWdmp9b
10h+Bn2GtDMiFnpXRQv0x3vhNIs/W2nGKYTXgzufavokq38/mavkRVovpo0G
13WwYslt2l7mh0rK2T5mam+VZXwv+Ilb35hJzSZu8H1Fy3eSdqgRyrc+aMaG
BI03wmxFyS8pyE+qC4G65xe3rEGLXR+fPA6NNXutv0m9DJO7RulctbHHqu5T
uFD8Q1Nv0grlNnVPpLH9VL2vzJ2o1xWN3ancwevmcls3GW8eZPc8cfJT0T9R
SyuyD2H1RmRYbrfpnXCHOZFhKMtzXgv0u6TOygx/k78R8s3nnoLP/79WiWzv
eurCrWdrtp8h/enLQped8SR+440obUMQn+yOwSOi3es7/Z/hayiTN809fFSP
D1XXQ7lNX/j+62HTN8Vie0j/NYqek3qseQHy8vJEn2Ez6TMUQVHRBrNuuR+N
onMqbXY46fEb3E8Rf9AjGS+p1ukQa0seg9qOLmg6/bRoU61xTLDvSPrqEutv
7f4ndv1QdQt0NJ9l//147de++cR2SqGdQpYcs2w+vAB6fPpmlm2+adrNZPv/
2PyKdc9zDX8VN/A1Teccg87jMSXzDnaMOfrYEx+yvs/uFQ9zH0VsgdrBI0es
McGkmNOg+5eM9vwNe39H2K1zvt8vtlFzruHOfsn9l+18h6HKf2Npvd77XWhe
/AmQw/RnzPbsadF7m3ZT2f9GPSbWPJdip29f27rvM1ZHV21DlcmW5+HBvZ/x
n33aTyNG2asLVEbvm2tifad/4upLClm7zgTpFO2ntc/EO95oL/sBOGOW78Ix
2p/Y9B5vt0kdMJ+15jCT0ezQ79j9rYngvWx9x/4ZYls+tF25B7tj+XCDvkOp
HvzWYRT0SaQVZAcemSvqRHC9CBsNqWs/1GxaE2cVkDzfNvrDd+Gwre1itusZ
B+hQv0M+3giTlYpfUpGfTBdCdc+HPjYHvRL+IGQ9O8p9zyumfDQ4viIGB299
a/7t1RuZr7TGG68EydwXhboCy3Zv2SYnZ8ffZ8+93PpNpLSi+RCr3sZb+HyT
JSNSle3/l/SR3uLPhPpdK39XSX9nlPSPlz9p6J9Mtt66MPRsyznb/cZeadte
YM94I6O2wcns6EU2Hhhzye6NWyExW6QNYP1ncw+DsDdb33em7zVWB7SaM9Hz
WbEHwt5nmO7k9Wj3+yp6ot5mBxSX3FsQyzPHKC9e/6v0frU6NWK1dpry7yz/
F7DHs0nbER9dMuYBz5pzB3/mbZeh1y6wnQpvp5Clhyye0fSjt78LvJ+eX7eR
/M3niTRIpwahfIVbf6PtoTDee6LXuQbSJ9aUmc3qOv0fm9Ohevp09WfcTy5z
n93i924/W3TeNyH60vZ2b7L7bchfu5X0Z2fleQk8x89fDgOVop+ScK5lGHmw
yz8YDWqK+RzC9UTwmgjDGEuRspysboGu/nFIJ3ugumGA/ew3XxesC856mmh3
tztTcJrJ+ndOvyr6sMvMsz1ddWK0m2K8p+v8rk7qh23jqclufkbJ2uIdrN25
OiIvu+H3n9l/Gpo7uiCRSsNAYxWb21KrB3/dCdOn4Gsu+ZrzwWo6EWqjIXXt
h6pNn/aTg618xl6ig64+0nT3a4E+J5KsJH5JRX5ButBP5KOiex4mPmT9HmNc
Nt19gLexho5P34TChw7Yxl6qeiO/X2VvbVhdmfZG8urkLqt7e1xGaFoQ1YfY
dMHT99PhWvEDfI4HQtoA5ndF/tb7xa1Hk21QO9R97KcO3XKXNbO2wZkXuhf6
gSOfsDgoGiPVeeGXyn3wlrJ/sI3njX3VK03f2P3qT0m//BtlH+vGr8/gvaai
J3cjtNlh6OLsqRg8cc5vPGnPZ1idalC/fx2s2f4uj9PVNBhqecUxLpa1I15d
EjbkKCddU1sPW05+4nu2NbZT4e0UsvRQGm942gzn/ZPxVigvXs37fYWFPn4x
s/HG711zQcaaMl/HLYTCwiLYSNfM8/LgpbNVbJy9zHM2fWbjDe5/vHlQyUvw
ebT+cjDXBFwTSlH2IfI2wrkObrR7ebE85hPof+9t4Ou3o42vgBW7INbTxXnh
0r6Cjy7cCml3fPdlGP0K82xP93iDz5vQtIromi6N9xPr9ms37HasmfeJM/CV
9EsfdMQYsJiHQ9dYHtTqYX78uKpOqNiorK6DULHpUBtiZfC2RWp7NtVl5Zem
kvyCdCGC7rnzzNcfDjB9aqJ74/JXMHnTueCJpv9yrRHlZryhsrc29DkxT+mN
fffGgavkIaoPseuC2fejc50zH0O+bZ4/3O+Kuent13z6cZmNN9z+1+xLBdhg
Zm2DxXjT86z8RcVFTP+YDuY/zNKU7U0wMPLzcivJz8T7zP9b42B6Psxmvsc6
Qz1XHW+o6pxam62CESsWvK9etU7pekJ7xUHxLZACKCxwrclK2hFP2UU5zThj
FbCdUmqnkKWFsX/K0JdRMoY2zjtS0hGx32L1vmtir5jOzuLme7100MT+Ma6/
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
JU/Ud0N8OlJaDScfz8iH2Psa9F003dd7ffQjyO9qYs+pmRdvPKyvbAPqgvY7
lz9zBuqPPc70trhoDS/P5c9t5/E5y/WEEfsVpW0w9m0b/8zYNY7l1yxfH76n
7y7rn75sm6NvLyPP+nwzOoqeu9vnvY1fQQs7u8nm9z/viaRzqm22J9+dxlkh
u2H/7kfF/Yel375WqVMqu8rSdez6w2Lv2pHGFnM/xRNkXBLoOyR2PdFxybkf
hPTR7wTIGdup8HYKWbpoqSQkJd9Ik6NDmjyfSFjfCqQxjt5ZGI28IwkBn/qL
9sZ0SpKWBinyWzIlyqOlIZ3WQPfcq/P7kikj0+I+543Gu1IBvkGeF//8Bd2v
GWnN5XdkSTlT4uW0/AlS/hxUSQDOeCpeL1EL56rPLNBSoqwakTPR11RApWVW
D2r6FNUOstKJjOta1abVYGVIWGVOk7rUFOZpc+EzguSnpguZ6B6td2da6ci6
mztfGZ3c2VtWuUinpfoW3e+aKUd+jraPCfKMksrayDyP2eORn56W5GOh61y1
zXah34P+rg7o6OiA3rg7HiLkjSF1qpM8JJMJ2/c2ddNnqbYjPqmKNkIuZ2yn
5rJPgiDI/Yku4kjD4lAQBEEQBEEQBEEioI9BzVFxzkRsJbx0pAaGcdCBIAiC
IAiCIEhOmILOujpobG6G5uZGqKtrx7PtEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB5hpdg1QyBWl9oTOC
IAiCLGqwvUAQBEEiMtn3OyiIxSDG/q2E64nZhc5S5mhfwo48XpbVL30AsuZw
On4DKqrbIaWQ7MCFXwj5FMDVkZlc5VaJhXz3koHU+1ahw0+c/NOcviqK3mTD
zNB7pl0+V/WX4Bvnsezu96ra2lxg2UUMzvZPB15beDSoL/2xyNdTcDu90PnJ
jvunvZiC9urL0No/udAZCUGDpqO7oKS0BEqKi6GY/SuB0tJS8q9E/E3+lZDf
yb/LXRP3ZZsxd7a9VPQgO5TbExk59Pnz1Y4iiwh9kPVVHiH9lOmht5gevXH7
u4XOVVZoyc9gN7WJ1cclujwFZ/K53VyKh/tjPZ2C7ooXuXy6vs1ldh2Mtl2H
QW1h3r3USSduw26qy0c+D79ZG4TGtqEM3hJNb7JlovcqayPCyhSp7Bnip5tq
tjY3+NnForUV/S7Ul9Exx2NK4w0/WS8Klmh74SfPmb43ef910xVYjKK2ED7n
4c1wubkb4vE49LadhTzWd3wWrvcOkWu90HR+LyvPqkOfLl47yIKsyxTg85eO
HmSPanvCCJBXbnz+/LajyOJgdvx9VucnemmbMQUjI4n7wOY0uFhI7eEMyJr2
obpXYO2GA3BHcb5xpu/tOfffTSVb4CMfI56Pdy99SL3nK/rS8fdg075PMnpL
VL3JDtUyRSh7hvjrppqtzRV+drFYbWVm4E0236wy3gjyAwvNUm0vfOVJ+lPl
hWtgb9VXC5Indabg2NoNcMOuN7NfwGbaR15/xiH/yfbnYdXez9h/L1Y7yIas
yhTk85eMHuSCXLSRufH589uOIosBY2zP24/7hak56QNNC1nNnf8egx2xjXDT
pwGf+3ffD/A5ExVfOt70X7Dq4BfzkKdsUS2TetkzI0g358bWVPGzi8VqKzxf
KuONYD+w0CzN9mLxylOJmZtQ+NBh51zyzGfmeMOhThPvwzO7Pmb/uVjtIBuy
KdPS8flzSS7ayIX1+cjSREuNQTcZY1L73VXXLeaq0hDv7YWOtma4FZ+E6ZFb
UF1RB7dHnLGN473X4fypU3DqfI3jNy05DL1dHdDW1sfmXca7rkNFdTU0dwyY
ewuH2hqgWlyTNQF6egzi8RFIJBIkbyPkeR1SiRGWz5GROIwkqbbrkBwZYb+P
JAyPLOxh/UXyzF1oJu+qrmuE3hEr5pPls7eL5LMLUu4gRG0M2uouw6mjp6C6
sdu0KcPXne2fhMn+j1gZGkk5lW2OlKe5+hwcFena2w89PQyVJY+w9C93DMFI
PA7xkaQZH6n+bg0G2mpJ3o/CqYomGDZvmAqpVx2GOsRz5+uhg9RbbeuotDiT
8VtQ4aMDrKiJQaYHzc0dRL4p6KyrgrpmV5mTd6Du/Ek4StJo6JC/S0WGpi89
+Sciz0ForKuGusY2iCdt67W6BqOdIhbhmSsQJ/oU749D0rbxVVYuP73x0/no
9WOX3R1orqM62wIJLQVXiC4/oDreCCi705YM22E/MNtJUPtJ+muyXDfDbS1K
2d3I6oISabwRoDtaMuGUgX6P/818DS+nnk5yH0P+pYTTCtffKejv4LpwvXcc
JgfeDh1vyGQdalMk353Cb1U1e22D2n9XWxv00P0W+pikrvx9gX97YRHUJsh9
T1C+WsjfIl8pos/i2p2kN/ZCpiPB8iTv7Sfv7WiDrrhXr8LKoiJHneSb6Qep
j9o24h/IPZnFyI3B+UM1auONmS+gdMtFdm+U9ipYl8Pahag2HZKe1L97bdv0
x83N0CN0Q0tSO6HXOiDJjFfm8xenHoS2QcrtTQbtSWgbqe7zg/TK246G9U+Q
pc5A9cvm/qsV+RuhcO1mqB34CspEXF2MXMvPM/YFPgU9zEbuQeWOGItDvtzW
Tdq3g2Kf6qesTRyo/LW5T+3V8i0QW76H9HvOwUZ67cnDUFm+jujpYaire4Pr
8/ZrwWOOyZvcp4p9iYeq66G8MGbmme95GoYd5j17YFDo7kXbfdtP1UNlGd+v
eeLWN7zsZj5dfZWBd3i+SF7biE1f2MFjZIfB8nXs3xpbuYjPvxsia7rHku2x
2ncFuno74FgRl+mt5CzLb33pE2baawsLoahwLazffsUz1pG+Wx+GY4U83Vri
bytLHmD10ED3C5LfgutVg2vFNN0DpF/UD30tJ9hvP5TMBQ3V/JzpQG1HFzSd
fprd//Rla6/yaNN/m/ktJGUx/nud2M883vI6+3vTkQ+Iz77EZP7gvg+k40+5
DN31XgAnq5uIvnG57qrla+WzEzdgR+EGEftcAIVFRVCYXwiXer5TKpef3kh1
XrV++A3QfvqXQmdroLHioMgnlVv4eENadmJLxp5y+m+biB0YbXrBvPb0Zb94
gjDdDLc1tbJ7CasLiup4I1h3voOW/f9h2daTx6GxZq/1N6nLYSqn+l+Z13bV
/iVUf2cTN7jvWr6T9JsaoXzrg+J52f4NuaylNiX2Vaw6dI30RRpEXe+EHvNd
Y0L+MXiopJzt+aQ65q2rYF/g115cZbHX8jZB7nsSPvmydOhQdQWT476Kejhd
/EN27fe2eG+5jsjkeRcuiPRiy47b+mkhZVGU48zQO1xXKlqgP94Lp7fyNuxW
riaEg8YbNlTbq2BdDmkXItu0PL1w/+617YEay38dvOX1x1Tecp+/+PRAvQ0K
aW8ybE/C2khVny/zkZ52VOojgmWFLC1mB/ievxM9f7Nd1eBCEa/vq8TWR4lN
L3+S63Hf6Z8wW7hlm3gwYnpfbhU2JmIsY7E3TfudbP8ffm3T++acvZGWNL5g
RsSp7rohLuhQv8PpG2b6XmPvsrJk2cMr5l7Gu3CY+rZDn1pJu/sls+Kcn01W
P3+o8t/YPa/3fmfz3+5yFcjbkenPmC945Mintos6NO2maf3G9A+8Lgqgx+fQ
B5V3t5f9gNeNmZe7cIza8Kb3RD/Iv16TpO0qYNes9022PA8PijhgL8Zer53E
63I6y/+F16XNN8wI3Yo98SHrD+1e8TD3R8Sf5bnkMdn5Grs3cO+YkgyNen/W
1s+i/pv3Fa0zTXQew+o5y0mxXD792WCdV68fo0/7hs1nz4r26lGF9Y3wso9B
GfXjjtiMu2y8HhYfE6ybarYWrpvedFXqQmm8oaA7fRd+xvoBfxA2MDv6jqtM
GhxfIfo0YfpLdd2n7a/fETbeEO+W+IEgmzLK/FzDX0WGbjCbXufQccv+3wiq
qxBf4NdeqLQJsjYlKF/lov/x+5FZM2+8Hg1bUNORYHl649CjliVIjn3H/hli
Wz60vese0Yl85x6MbIg03pC0VxJdvvzlTakuRLZpmW4ptpF+9u7vj92xi0E+
n7KY9EC1DQpvb7JrT2TyUvD5Cm28t95kPgK5H/CPPZiC04U+vszo+7/0gSsV
0jassOzVTNN2bsm0T9zvhLCPsPa3pewfbO30FByP8TmCq6Id6n71p/Diddtc
qm984ZRnn5S77BNiTGTMk1Amu9+G/LVboTUxKymXvAwDlaIv4zo30nifkZ4s
rdB3G3Ujxkq6zhvXTurviO8y1n1869UYZ5Fynqxuga7+cUgne6C6YSCgRBrU
718Ha7a/y9LRNA2GWl7xjLv86pzC+3akD0znS0g+WVYnedv2dMA5fWoyDIgr
Ff2UZeb5fUExrNHK5dvHzbh+krytXuY+80N9/4ZK2Y026KyYq5odvQgPP/pO
6LmGwbqpYGtKuukmB3Vhrj8p6M7Eh6x9NPrn090HeHtu6Mw0jaE/YBubBOvv
ZKfXj/A0X1Pydyp+wG1T9KzLjeQZPgepQTo1yHyyU2+E/cvqKsQXeOSt2CYE
+h5ZvoyYDVeaVpmi6IiC7kYti0SOQ5X87NZn9p+G5o4uSKTSMNBYlbu9sRHG
G7L2SqrL73wYrAuZ2LREt6K1keHrmd46l/nRxaQHEf1eYN3ezbo9UZaXT7lV
2nhvvcl8BHI/EDTeYGPs7dec/RAxB7HOZ17Yrn8y+1drB/zz+HLrt2w/XF4s
z9Y3oHsBN7vW3PztwW0/7nx2H/spuNfrw2SlUgZzHcc16eNOT2m8EfRu0a+k
fxfR9U8aO1C0gT2zdsNuMecdUK+E0cZXwFx7j4k1cul55PegveKgOM+7AAoL
vHO3Rp7d8uw7/Z88X4WboYjks7CwCDbSefe8PNh12W8+RVWGQfvYxkQ7Yfhe
mS9VL1ekNi+sfsZvu8ZEBlmON9xlN/Kxjbeln5T+iNtVCFHHG448K+mmH7mp
i0i6EzvA5NREY/7zVzA7oPPiE03/Zfq9MP3tZu/z9p2i+Tu5H/DzUZPxVigv
Xi3yVugzj6nmF2W+IGjtKKxNkPkeWb4ecOXfawuqOqKguxHKEipHfdAR+8vi
Sg5dy92Z0VHGG5L2KkyXA3UhQ5sOSi9aGznH440F14Ns/J4o87R7jk1FDqr3
hZdbpY33G28E+wjkfkA23vDomtDhVYc+dV636Z99n1pYv1z9vJZhHp9Axvzt
RI/3tn3N13LJ2D0+8DascaxXOvMTZbxh2EjQt4QyHW/w/kcBtLqcjPtsP56W
5XNHG6vgdkrx3YE+0ikX33rVvoS660Oga3eht6sVak7t4rGbQedr01jLPO4L
a3sn2KXZobfMvOia5lseUx5sXOe9LkNNhmF97jOu8YaQFWkTKqr6IpYrYpsX
Vj9G/2HTRVfevety/qiW3bZemOiBrbGdbH9CGMG6qWBrSrrpIod1oWp/o/U8
FvxyVzNsXX0YRiY+YnZwsGMA3i1aBVfF+CFMf00/0uNag4g03pD5Ae+7jb0d
q/dd43tkSYt9xeyv66DZ97XJ6irEFwSNN8LahGz7L77XMvRDgboboSxh+R1q
roU76VlIxnugjbxvd+Fyn3Y2C3I03pDqskwXMrFpSXo3Tv80QhsZ7nu9thbg
88Vvi0YPsvZ71vxWtu2Jsrx8yq3SxgeNN+byTHdkYfFbl7OfdeNE9PtXn3HF
Z/6Z79kW38sJXuvzi4NXO4++U6w90DTofONMt7UXzht7LrMHq0zufBqx0e5v
b1Kft+vyV/I1TIldjTc9z5573bFHhrR7Irb+Uv/fHPnh8coanF67wTwzPvzd
Vmy+M97xHlx4plSs/wTU6/RN4vefNeNF2aXO4NgPHhfijBfhZXwM7ugp8r5j
LA9BfaPxFt43Otj6jSvd38K2c/7tl5oMrRgMxyvZmph9j5yYR9nC9xLR/T+r
d/0xYrn84wUzr580z7vn92HF7/iplp22X78zbeeJc2pnzgfrpoqtqeim6305
rAtV+6N2sFHI5cdMLmJ939WvC9Nfw4+87PrdyL/qem6wH3DblNBnR+zEGByg
9X7uL+yZgyzeVKGuQnyBV95qbUJwmwLyfDnud/aVoupIuO6qlyVMjp+X/x08
XvtXWxr32P4fa6x0D+L9I5l/uyTbeCrxYpkubz9ZIdGFRGSblulW09UXI7WR
jjKRvLqv8bhRu534+3zjtwXTA7eIsvZ7Rt1OZd2eqMvLW26VNt5bBpmPQO4H
JsQenr3XvwY6D8anxsbEvq+LYq7Mdr+Ip9zbYPTJdWgXYwFjP4WR5sFWy87G
xXNnuybM57pZjF8BXE+Ef19yxugjbRPrg2S8zc+lehYG3TfrInZx9XEYM/JP
ysT2H4q4SP98GjEVj5E8iVgIfZi12yeIv5OVq0oaeyTiPtccMM/Bmx3/yIxr
MbJo9FNeZHs+x2D3mt1m2VTebezH2maLSRqq/zmRw++4fwyqV7E2/lytNc4a
b6E+7k3ftszwibtqvxZXjDPCCqChvwvKNnGfaOTZqnNLHsfEnjhz3V3j9Xmi
/2/gj4oMrX1sl8w1qrtiD9pTtn6eBpXs2h7W9k3UvQBPV30duVz2ushF/Rjt
5jbbd6e6RRzsqkMfh/RNVMtOuSfkv1L5m3KBuqloa6G66SK3daFmf1Qvaoq5
DI21DKO/83jV12ARpr/3RF3shDtG4VKif8h8i9zfqfgBp00Ze0z3mHHz9Ox8
pjf7Poa++pd5u69SVyG+wK+9UGkTZG1KUL7c9+uTXIYPkjLRS6o6Eqy74h1r
DpvvVStLuBx5fNAeq/7pe0karxh7ii78O0szaL9aMDwWfsbQX5L3YU33jT9R
a68kuvzFTakuRLVpuW6p2ahfmejZCHn28T1ps41zLU90jBuF8vX5/P6F0wM3
2fg9d91m157I5KXi88PbeE8ZZD4CWfIY6/55eXm8L0/sbeS7O+IsxZXmHKg7
vmi0/bd8HTSvQJyZ9hQ0xKd906S+he8Fo9d4ensbu6Fya8xxzR174OUus9OX
beP+9jLyrPv7l+Y4ZKXI207oT/YI/2OUaQ80nHzckc9dDZbvqSzl57WvLSoU
tv+VUrnsftSDNmye55jP4sL5OXHO/rwG9aX8XDmad3r2nqpMjXePd7zNy71i
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
EARB5h0tnYJkMgnpedpbOLfv0yBF0k6mXD0FcW7nG7fc57VMQSfr9+00+7XS
dCKiG2X1nU9UeYfO70mKHoKuQZoIjp23Q/47JRKm9ySSKVCfttQhnSLPJJLm
M7qmeZ5ndZWw8p8medU071tU7/OiSeTjf3829aKlhIw0nt+U+ov58+m0q2+f
jpD33KHRuiNykIlYrnuStKPUpbIOGnrsX2+6eKcR40jlTN/JpikkdaZWn2E6
4/pdSwsbC7g9II1kIkHSkDu16HUSru+LRScRBEEQ5HsPizOn593/r+enCRb/
8RTcwTYaQRAEQRAEQZCMmIKmsh+xOIZ99FvEIwkYifdCzdGnPTHcCIIgCIIg
CIIgmTAZvw2VR/dBSUkJ+VcKR87Xwx08rwVBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEOT7gzYMzc19oAX8PNnfChXnz0NF
RR30JGfmNWsIgiAIgiAIgixFpiDe2wVNFXshFotBbNlxSPncNVT/Avt9X0U9
1Bx9mv332d7Jec8tgiAIgiAIgiBLCO1LKCsqhleP7uPjjfVnIO26ZXb0Pfbb
wVvfmtcGLvw7ufYU9AQthiAIgiAIgiAIgpjoUFlExhurveON7mP/7F33mLwB
BWQM8nLrN/OYRwRBEARBEARBliZTcLHQb7wxBaf9rs98BhvJeOORI5/Pay4R
BEEQBEEQBFmKBI83fK+L8caqQ5/May4RBEEQBEEQBFmKZDbeiG26EnieFYIg
CIIgCIIgCCfz8YZ7vweCIAiCIAiCIIiTDOOp9mE8FYIgCIIgCIIgYUQdb3wB
m3G/OIIgCIIgCIIgSgSNNwD6Tv8EYrFn4Y5uXZsZ+h37Jgeeh4sgCIIgCIIg
iAxdJwMJbRjK88l4Y/kBGEzPOn6fHX+fjS2eq/3avNZe9gNybScM6u7UEARB
EARBEARBDDSo3Brj3xaPrYS8mPHfexxjifH219n19aXlULZ1GfnvAmgYmVm4
bCMIgiAIgiAIcl+hJQeh4/9v544JAABAGAD1r7XLIuaYQYQgJE2mK6UCAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHjrAKVE7dc=
    "], {{0, 
    799}, {796, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{796, 799},
  PlotRange->{{0, 796}, {0, 799}}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["R", 
       RowBox[{"1", ",", "2", ",", "3"}]], ".", 
      SubscriptBox["R", 
       RowBox[{"1", ",", "4", ",", "5"}]], ".", 
      SubscriptBox["R", 
       RowBox[{"2", ",", "4", ",", "6"}]], ".", 
      SubscriptBox["R", 
       RowBox[{"3", ",", "5", ",", "6"}]]}], "-", " ", 
     RowBox[{
      SubscriptBox["R", 
       RowBox[{"3", ",", "5", ",", "6"}]], ".", 
      SubscriptBox["R", 
       RowBox[{"2", ",", "4", ",", "6"}]], ".", 
      SubscriptBox["R", 
       RowBox[{"1", ",", "4", ",", "5"}]], ".", 
      SubscriptBox["R", 
       RowBox[{"1", ",", "2", ",", "3"}]]}]}], ")"}], " ", "//", " ", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.58517020175259*^9, 3.5851702019722137`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"a", " ", "b", " ", "x"}], 
      RowBox[{
       RowBox[{"a", " ", "c", " ", "x"}], "+", 
       RowBox[{"u", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "c"}], "+", 
          RowBox[{"a", " ", "b", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SuperscriptBox["b", "2"], "+", 
       RowBox[{"a", " ", "b", " ", "y"}]}], 
      RowBox[{
       RowBox[{"-", "c"}], "+", 
       RowBox[{"b", " ", "c"}], "+", 
       RowBox[{"a", " ", "c", " ", "y"}], "+", 
       RowBox[{"v", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "c"}], "+", 
          RowBox[{"a", " ", "b", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       SuperscriptBox["c", "2"], "+", 
       RowBox[{"a", " ", "c", " ", "z"}], "+", 
       RowBox[{"w", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "c"}], "+", 
          RowBox[{"a", " ", "b", " ", "z"}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{"-", "a"}], " ", "b", " ", "x"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["b", "2"]}], " ", "x"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["x", "2"]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "b"}], " ", "c", " ", "x"}], "+", 
       RowBox[{"c", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"u", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "y"}], "+", 
          RowBox[{"b", " ", "x", " ", "z"}]}], ")"}]}]}], 
      RowBox[{"b", " ", "x", " ", "y"}], 
      RowBox[{
       RowBox[{"c", " ", "x", " ", "y"}], "+", 
       RowBox[{"v", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "y"}], "+", 
          RowBox[{"b", " ", "x", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "c"}], "+", 
       RowBox[{"c", " ", "z"}], "+", 
       RowBox[{"c", " ", "x", " ", "z"}], "+", 
       RowBox[{"w", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "y"}], "+", 
          RowBox[{"b", " ", "x", " ", "z"}]}], ")"}]}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "u", " ", "x"}], "-", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "u"}], "+", 
          RowBox[{"c", " ", "v", " ", "x"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"b", " ", "u", " ", "x"}], "-", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "u"}], "+", 
          RowBox[{"c", " ", "v", " ", "x"}]}], ")"}]}], "-", 
       RowBox[{"c", " ", "u", " ", "y"}]}], 
      RowBox[{
       RowBox[{"c", " ", "u", " ", "x"}], "-", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "u"}], "+", 
          RowBox[{"c", " ", "v", " ", "x"}]}], ")"}]}], "-", 
       RowBox[{"c", " ", "u", " ", "z"}], "+", 
       RowBox[{"u", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "v"}], "+", 
          RowBox[{"b", " ", "u", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"b", " ", "u", " ", "y"}], "-", 
       RowBox[{"c", " ", "v", " ", "y"}]}], 
      RowBox[{
       RowBox[{"c", " ", "u", " ", "y"}], "-", 
       RowBox[{"c", " ", "v", " ", "z"}], "+", 
       RowBox[{"v", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "v"}], "+", 
          RowBox[{"b", " ", "u", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"c", " ", "u", " ", "z"}], "+", 
       RowBox[{"w", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"c", " ", "v"}], "+", 
          RowBox[{"b", " ", "u", " ", "z"}]}], ")"}]}]}]},
     {
      RowBox[{"x", "-", 
       SuperscriptBox["x", "2"], "-", 
       RowBox[{"a", " ", "x", " ", "y"}]}], 
      RowBox[{
       RowBox[{"-", "b"}], " ", "x", " ", "y"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", "x", " ", "y"}], "+", 
       RowBox[{"u", " ", "y", " ", "z"}]}], "0", 
      RowBox[{"v", " ", "y", " ", "z"}], 
      RowBox[{
       RowBox[{"-", "z"}], "+", 
       RowBox[{"w", " ", "y", " ", "z"}], "+", 
       SuperscriptBox["z", "2"]}]},
     {
      RowBox[{"u", "-", 
       RowBox[{"u", " ", "x"}], "-", 
       RowBox[{"u", " ", "x", " ", "z"}], "-", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", " ", "y"}], "+", 
          RowBox[{"v", " ", "x", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "u"}], " ", "y", " ", "z"}], "-", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", " ", "y"}], "+", 
          RowBox[{"v", " ", "x", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"u", " ", "v", " ", "z"}], "-", 
       RowBox[{"u", " ", 
        SuperscriptBox["z", "2"]}], "-", 
       RowBox[{"c", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", " ", "y"}], "+", 
          RowBox[{"v", " ", "x", " ", "z"}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "v"}], " ", "y", " ", "z"}], 
      RowBox[{
       RowBox[{
        SuperscriptBox["v", "2"], " ", "z"}], "-", 
       RowBox[{"v", " ", 
        SuperscriptBox["z", "2"]}]}], 
      RowBox[{"v", " ", "w", " ", "z"}]},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["u", "2"]}], "-", 
       RowBox[{"u", " ", "w", " ", "x"}], "-", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", " ", "v"}], "+", 
          RowBox[{"v", " ", "w", " ", "x"}]}], ")"}]}]}], 
      RowBox[{"u", "-", 
       RowBox[{"u", " ", "v"}], "-", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", " ", "v"}], "+", 
          RowBox[{"v", " ", "w", " ", "x"}]}], ")"}]}], "-", 
       RowBox[{"u", " ", "w", " ", "y"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "c"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", " ", "v"}], "+", 
          RowBox[{"v", " ", "w", " ", "x"}]}], ")"}]}], "-", 
       RowBox[{"u", " ", "w", " ", "z"}]}], 
      RowBox[{"v", "-", 
       SuperscriptBox["v", "2"], "-", 
       RowBox[{"v", " ", "w", " ", "y"}]}], 
      RowBox[{
       RowBox[{"-", "v"}], " ", "w", " ", "z"}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5851703014409733`*^9, 3.585221635609475*^9, 
  3.5859200405976458`*^9}]
}, Open  ]],

Cell["\<\

We get exactly the same equations.

Solve these simultaneous system of equations, \
\[OpenCurlyQuote]\[Rule]\[CloseCurlyQuote] means substitute for \
solution:
\
\>", "Text",
 CellChangeTimes->{{3.5851708426540813`*^9, 3.585170852133814*^9}, {
  3.58517203494394*^9, 3.585172053639497*^9}, {3.58517220278294*^9, 
  3.5851722215483217`*^9}}],

Cell[TextData[{
 StyleBox["3-Simplex Solutions ", "Title"],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.585237249168145*^9, 3.585237255635787*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"1", ",", "2", ",", "3"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"1", ",", "4", ",", "5"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"2", ",", "4", ",", "6"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"3", ",", "5", ",", "6"}]]}], "-", " ", 
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"3", ",", "5", ",", "6"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"2", ",", "4", ",", "6"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"1", ",", "4", ",", "5"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"1", ",", "2", ",", "3"}]]}]}], " ", "\[Equal]", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "x", ",", "y", ",", "z", ",", "u",
        ",", "v", ",", "w"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5851554136033487`*^9, 3.5851555665610447`*^9}, {
   3.585155683889146*^9, 3.585155684045515*^9}, 
   3.5851558728894997`*^9, {3.585155905964801*^9, 
   3.585155906441387*^9}, {3.585171779119245*^9, 
   3.585171782312223*^9}, {3.585172012895248*^9, 
   3.585172028688094*^9}, 3.585173976412409*^9, {3.585221427922531*^9,
    3.5852214508380136`*^9}}],

Cell["\<\

Substitute them back into the original A matrix:\
\>", "Text",
 CellChangeTimes->{{3.585172060649283*^9, 3.585172080189537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sol", " ", "=", " ", 
     RowBox[{"DeleteDuplicates", "[", "sol", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "/.", 
       RowBox[{"sol", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], " ", "//", " ", 
      "MatrixForm"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "[", "sol", "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.58515589679685*^9, 3.585155922714281*^9}, {
  3.585169616474452*^9, 3.585169624798951*^9}, {3.58516972906542*^9, 
  3.5851697453993387`*^9}, {3.585171459954247*^9, 
  3.585171481853572*^9}, {3.585171795879394*^9, 
  3.585171796914632*^9}, {3.585173078005303*^9, 
  3.585173103237803*^9}, {3.585173149735405*^9, 
  3.585173152354992*^9}, {3.5852214762177353`*^9, 
  3.585221486976021*^9}, {3.585221798285215*^9, 
  3.585221832867625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["u", "v"]}], "0", "0"},
       {"x", 
        FractionBox[
         RowBox[{"v", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "u"], "0"},
       {"u", "v", 
        FractionBox[
         RowBox[{"u", "-", 
          RowBox[{"u", " ", "v"}]}], 
         RowBox[{"v", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}]}]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"u", "-", 
          RowBox[{"u", " ", "x"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "v"}], ")"}], " ", "x"}]], "0", 
        "0"},
       {"x", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "v"}], ")"}], " ", "x"}], "u"], 
        "0"},
       {"u", "v", 
        RowBox[{"-", 
         FractionBox["u", "x"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "y", "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"1", "-", "z"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "x"}], "y"], "0", "0"},
       {"x", "y", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "y", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "b"}], "y"], "b", "0"},
       {"0", "y", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "y", "0"},
       {"0", "v", 
        FractionBox[
         RowBox[{"1", "-", "v"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "b"}], "y"], "b", "0"},
       {"0", "y", "0"},
       {"0", "v", 
        FractionBox[
         RowBox[{"1", "-", "v"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "x"}], "y"], "0", "0"},
       {"x", "y", "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"1", "-", "z"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"c", "-", 
          RowBox[{"b", " ", "c"}]}], 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "z"}], ")"}]}]], "b", "c"},
       {"0", 
        FractionBox[
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "z"}], ")"}]}], "c"], "z"},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["c", "b"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["c", "z"]}], "b", "c"},
       {"0", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "z"}], "c"], 
        "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"c", "-", 
          RowBox[{"c", " ", "z"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "z"}]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "u"}], "0", "0"},
       {"1", "0", "0"},
       {"u", "1", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["u", "v"]}], "0", "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["v", "u"]}], "0"},
       {"u", "v", 
        FractionBox[
         RowBox[{"u", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "v"}], ")"}]}], "v"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"u", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}]}], "x"], "0", "0"},
       {"x", 
        RowBox[{"-", 
         FractionBox["x", "u"]}], "0"},
       {"u", "0", 
        RowBox[{"-", 
         FractionBox["u", "x"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "x"}], "y"], "0", "0"},
       {"x", "y", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "x"}], "y"], "0", "0"},
       {"x", "y", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "y", "0"},
       {"0", "v", 
        FractionBox[
         RowBox[{"1", "-", "v"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "x"}], "y"], "0", "0"},
       {"x", "y", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "y", "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"1", "-", "z"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "y", "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"1", "-", "z"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "y", "0"},
       {"0", "0", 
        FractionBox["1", "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "0", "1"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "y", "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"1", "-", "z"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "x"}], "y"], "0", "0"},
       {"x", "y", "0"},
       {"0", "0", 
        FractionBox["1", "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "0", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"1", "0", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "1", "0"},
       {"0", "0", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "b"}], "y"], "b", "0"},
       {"0", "y", "0"},
       {"0", "0", 
        FractionBox["1", "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "y"], "0", "0"},
       {"0", "y", "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"1", "-", "z"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "y"], "0", "0"},
       {"0", "y", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "0", "0"},
       {"0", "1", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "y"], "0", "0"},
       {"0", "y", "0"},
       {"0", "v", 
        FractionBox[
         RowBox[{"1", "-", "v"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "y", "0"},
       {"0", "v", 
        FractionBox[
         RowBox[{"1", "-", "v"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "1", "0"},
       {"0", "0", "0"},
       {"0", "1", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "b"}], "y"], "b", "0"},
       {"0", "y", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "b"}], "y"], "b", "0"},
       {"0", "y", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{"1", "-", "b"}], "y"], "b", "0"},
       {"0", "y", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "y", "0"},
       {"0", "v", 
        FractionBox[
         RowBox[{"1", "-", "v"}], "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"1", "0", "0"},
       {"u", "1", 
        RowBox[{"-", "u"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "1", "c"},
       {"0", "0", "1"},
       {"0", "0", 
        RowBox[{"-", "c"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"1", "0", "1"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["c", "z"]}], "0", "c"},
       {"0", 
        RowBox[{"-", 
         FractionBox["z", "c"]}], "z"},
       {"0", "0", 
        FractionBox[
         RowBox[{"c", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "z"}], ")"}]}], "z"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "b"}], ")"}], " ", "c"}], "b"], 
        "b", "c"},
       {"0", 
        RowBox[{"-", 
         FractionBox["b", "c"]}], "0"},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["c", "b"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "c"}], "1", "c"},
       {"0", "0", "1"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "y", "0"},
       {"0", "0", 
        FractionBox["1", "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "y", "0"},
       {"0", "0", 
        FractionBox["1", "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "1"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "0", "1"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "0", "1"},
       {"0", "0", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", "1", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "0", "0"},
       {"0", "1", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "0", "0"},
       {"0", "1", "w"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "y"], "0", "0"},
       {"0", "y", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"0", "0", "1"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "1", "0"},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "1", "0"},
       {"0", "0", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "1", "0"},
       {"0", "0", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", "y"], "0", "0"},
       {"0", "y", "0"},
       {"0", "0", 
        FractionBox["1", "y"]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"1", "0", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "0", "0"},
       {"1", "0", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "y", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "u"}], "0", "0"},
       {"1", "0", "1"},
       {"u", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"u", "1", 
        RowBox[{"-", "u"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "c"},
       {"1", "0", "1"},
       {"0", "0", 
        RowBox[{"-", "c"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "y", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "c"}], "1", "c"},
       {"0", "0", "1"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "1"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "0", "1"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "0", "1"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"1", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"1", "0", "1"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0"},
       {"0", "0", "0"},
       {"0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.58517310434489*^9, 3.5851731556297693`*^9, {
   3.5852214582762423`*^9, 3.585221488211174*^9}, {
   3.5852215611993628`*^9, 3.5852215738240843`*^9}, 
   3.58522164473274*^9, {3.5852218007903557`*^9, 
   3.585221833371564*^9}, 3.585920059990244*^9}]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["3-Simplex Solutions: In a, b, c", "Title"]
}], "Text",
 CellChangeTimes->{{3.585251444340575*^9, 3.585251456377562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solabc", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"1", ",", "2", ",", "3"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"1", ",", "4", ",", "5"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"2", ",", "4", ",", "6"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"3", ",", "5", ",", "6"}]]}], "-", " ", 
       RowBox[{
        SubscriptBox["R", 
         RowBox[{"3", ",", "5", ",", "6"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"2", ",", "4", ",", "6"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"1", ",", "4", ",", "5"}]], ".", 
        SubscriptBox["R", 
         RowBox[{"1", ",", "2", ",", "3"}]]}]}], " ", "\[Equal]", " ", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z", ",", "u", ",", "v", ",", "w"}],
       "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.585251344509218*^9, 3.5852513547793303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solabc", " ", "=", " ", 
   RowBox[{"DeleteDuplicates", "[", "solabc", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "/.", 
     RowBox[{"solabc", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], " ", "//", " ", 
    "MatrixForm"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", 
     RowBox[{"Length", "[", "solabc", "]"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.585251371519973*^9, 3.585251381806262*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "b", "c"},
       {"0", 
        FractionBox[
         RowBox[{"1", "-", "b"}], "a"], 
        FractionBox[
         RowBox[{
          RowBox[{"a", " ", "b"}], "+", "c", "-", 
          RowBox[{"b", " ", "c"}]}], 
         RowBox[{"a", " ", "b"}]]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["c", "b"]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", "b", "c"},
       {"0", 
        FractionBox[
         RowBox[{"1", "-", "b"}], "a"], 
        RowBox[{"-", 
         FractionBox["c", "a"]}]},
       {"0", "0", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "a"}], "-", "c"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "b"}]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
        "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.585251385720224*^9}]
}, Open  ]]
},
WindowSize->{740, 867},
WindowMargins->{{0, Automatic}, {Automatic, -66}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) \
(January 25, 2013)",
StyleDefinitions->"Default.nb"
]

